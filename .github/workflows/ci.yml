name: CI/CD

on:
  push:
    branches: [dev, master]
  pull_request:
    branches: [dev, master]
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Basic Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        
      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Check compilation
        run: cargo check --all-targets --all-features

  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: check
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          
      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.target }}
          
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
        
      - name: Prepare artifact
        shell: bash
        run: |
          mkdir -p artifacts
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            cp target/${{ matrix.target }}/release/dingo_test_runner.exe artifacts/
          else
            cp target/${{ matrix.target }}/release/dingo_test_runner artifacts/
          fi
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dingo_test_runner-${{ matrix.target }}
          path: artifacts/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          
          # Linux
          cd artifacts/dingo_test_runner-x86_64-unknown-linux-gnu
          tar -czf ../../release-assets/dingo_test_runner-linux-x86_64.tar.gz dingo_test_runner
          cd ../..
          
          # macOS
          cd artifacts/dingo_test_runner-aarch64-apple-darwin
          tar -czf ../../release-assets/dingo_test_runner-macos-aarch64.tar.gz dingo_test_runner
          cd ../..
          
          # Windows
          cd artifacts/dingo_test_runner-x86_64-pc-windows-msvc
          zip ../../release-assets/dingo_test_runner-windows-x86_64.zip dingo_test_runner.exe
          cd ../..
          
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 