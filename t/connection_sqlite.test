# SQLite 连接管理测试
# 测试在 SQLite 模式下的连接管理功能

--echo 开始 SQLite 连接管理测试

# 测试当前默认连接（SQLite 内存数据库）
SELECT 'default_sqlite_connection' as connection_type;

--echo 创建新的 SQLite 文件连接
--connect (file_conn,,,,,/tmp/test_conn1.db)

# 在文件连接中创建表
CREATE TABLE file_table (id INTEGER PRIMARY KEY, data TEXT);
INSERT INTO file_table VALUES (1, 'data_from_file_conn');

--echo 创建另一个 SQLite 文件连接
--connect (file_conn2,,,,,/tmp/test_conn2.db)

# 在第二个文件连接中创建表
CREATE TABLE file_table2 (id INTEGER PRIMARY KEY, info TEXT);
INSERT INTO file_table2 VALUES (1, 'data_from_file_conn2');

--echo 切换回第一个文件连接
--connection file_conn

# 验证数据隔离
SELECT * FROM file_table;

# 尝试访问另一个连接的表（应该失败）
--error ER_NO_SUCH_TABLE
SELECT * FROM file_table2;

--echo 切换到第二个文件连接
--connection file_conn2

SELECT * FROM file_table2;

--echo 切换回默认内存连接
--connection default

# 在内存连接中创建表
CREATE TABLE memory_table (id INTEGER, value TEXT);
INSERT INTO memory_table VALUES (1, 'memory_data');

# 验证内存数据库独立性
--error ER_NO_SUCH_TABLE
SELECT * FROM file_table;

--echo 测试 SQLite 连接参数解析
--connect (param_conn,,,,,/tmp/test_param.db?mode=rwc&cache=shared)

CREATE TABLE param_table (id INTEGER);

--echo 清理 SQLite 连接
--disconnect file_conn
--disconnect file_conn2  
--disconnect param_conn

--echo SQLite 连接管理测试完成 