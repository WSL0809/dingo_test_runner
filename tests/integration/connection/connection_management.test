# 连接管理功能测试
# 测试 --connect, --disconnect, --connection 功能

--echo 开始连接管理测试

# 测试当前默认连接
SELECT CONNECTION_ID() as default_connection_id;

--echo 创建新连接 conn1
--connect (conn1,127.0.0.1,root,,test,3306)

# 在新连接中执行查询
SELECT CONNECTION_ID() as conn1_connection_id;
CREATE TABLE conn1_table (id INT, name VARCHAR(50));
INSERT INTO conn1_table VALUES (1, 'from_conn1');

--echo 切换回默认连接
--connection default

# 验证在默认连接中看不到 conn1 创建的表（如果是不同数据库）
# 或验证表是存在的（如果是同一数据库）
SHOW TABLES LIKE 'conn1_table';

--echo 创建第二个连接 conn2  
--connect (conn2,127.0.0.1,root,,test,3306)

# 在 conn2 中执行查询
SELECT CONNECTION_ID() as conn2_connection_id;
CREATE TABLE conn2_table (id INT, msg TEXT);
INSERT INTO conn2_table VALUES (1, 'from_conn2');

--echo 切换到 conn1
--connection conn1

# 验证在 conn1 中可以看到自己创建的表
SELECT * FROM conn1_table;

# 尝试访问 conn2 的表（应该可以访问，因为在同一数据库）
SELECT * FROM conn2_table;

--echo 切换到 conn2
--connection conn2

# 验证在 conn2 中的查询
SELECT * FROM conn2_table;

--echo 断开 conn1 连接
--disconnect conn1

--echo 尝试切换到已断开的连接（应该报错）
--error ER_NO_SUCH_CONNECTION
--connection conn1

--echo 切换回默认连接进行清理
--connection default

# 清理测试表
DROP TABLE IF EXISTS conn1_table;
DROP TABLE IF EXISTS conn2_table;

--echo 断开剩余连接
--disconnect conn2

--echo 连接管理测试完成 