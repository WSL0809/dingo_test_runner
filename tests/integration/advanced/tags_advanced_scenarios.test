# 高级标签功能测试场景
--echo Testing advanced tag scenarios

# 测试标签状态切换
--echo Testing tag state switching
--disable_query_log
--disable_result_log
SELECT 'This should not show query or result' as test1;

--enable_query_log
SELECT 'This should show query but not result' as test2;

--enable_result_log
SELECT 'This should show both query and result' as test3;

--disable_query_log
--disable_result_log
SELECT 'Back to no logging' as test4;

--enable_query_log
--enable_result_log
SELECT 'Back to full logging' as test5;

# 测试复杂的 replace_regex 模式
--echo Testing complex replace_regex patterns
CREATE TABLE regex_test (
    data VARCHAR(100),
    timestamp_str VARCHAR(50),
    json_data TEXT
);

INSERT INTO regex_test VALUES 
    ('User ID: 12345, Session: ABC-67890', '2023-12-01 10:30:45', '{"id": 123, "name": "test"}'),
    ('User ID: 98765, Session: XYZ-11111', '2023-12-01 11:45:30', '{"id": 456, "name": "demo"}');

# 替换用户ID
--replace_regex /User ID: [0-9]+/User ID: XXX/
SELECT data FROM regex_test;

# 替换时间戳
--replace_regex /[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}/TIMESTAMP/
SELECT timestamp_str FROM regex_test;

# 替换JSON中的数字
--replace_regex /"id": [0-9]+/"id": "NUM"/
SELECT json_data FROM regex_test;

# 多个替换模式组合
--replace_regex /[0-9]+/NUM/
--replace_regex /[A-Z]{3}-/PREFIX-/
SELECT data FROM regex_test;

DROP TABLE regex_test;

# 测试 sorted_result 与 NULL 值
--echo Testing sorted_result with NULL values
CREATE TABLE null_sort (
    id INT,
    nullable_field VARCHAR(50)
);
INSERT INTO null_sort VALUES 
    (1, 'Alpha'),
    (2, NULL),
    (3, 'Beta'),
    (4, NULL),
    (5, 'Charlie');

--sorted_result
SELECT * FROM null_sort;

--sorted_result
SELECT nullable_field FROM null_sort WHERE nullable_field IS NOT NULL;

DROP TABLE null_sort;

# 测试嵌套错误处理
--echo Testing nested error handling
--error 1146
SELECT COUNT(*) FROM table_that_does_not_exist;

--error 1054
SELECT unknown_column FROM information_schema.tables LIMIT 1;

# 测试标签与变量组合
--echo Testing tags with variables
CREATE TABLE dynamic_table (id INT, data VARCHAR(50));
INSERT INTO dynamic_table VALUES (1, 'data123'), (2, 'info456');

--replace_regex /[0-9]+/REPLACED/
SELECT * FROM dynamic_table;

DROP TABLE dynamic_table;

--echo Advanced tag scenarios test completed!