<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="741.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="185"><g><title>0x1037fde9b (1 samples, 0.54%)</title><rect x="0.0000%" y="693" width="0.5405%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>0x103821f07 (1 samples, 0.54%)</title><rect x="0.0000%" y="677" width="0.5405%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>0x103862645 (1 samples, 0.54%)</title><rect x="0.0000%" y="661" width="0.5405%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>0x102a31bab (1 samples, 0.54%)</title><rect x="0.5405%" y="613" width="0.5405%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.7905%" y="623.50"></text></g><g><title>0x102fdfdf3 (1 samples, 0.54%)</title><rect x="0.5405%" y="597" width="0.5405%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.7905%" y="607.50"></text></g><g><title>0x103840fb3 (1 samples, 0.54%)</title><rect x="0.5405%" y="581" width="0.5405%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.7905%" y="591.50"></text></g><g><title>__private_getcwd (1 samples, 0.54%)</title><rect x="0.5405%" y="565" width="0.5405%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.7905%" y="575.50"></text></g><g><title>stat (1 samples, 0.54%)</title><rect x="0.5405%" y="549" width="0.5405%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.7905%" y="559.50"></text></g><g><title>0x102a34acb (1 samples, 0.54%)</title><rect x="1.0811%" y="613" width="0.5405%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="1.3311%" y="623.50"></text></g><g><title>0x102a3f1e7 (1 samples, 0.54%)</title><rect x="1.0811%" y="597" width="0.5405%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="1.3311%" y="607.50"></text></g><g><title>0x1032d2b8f (1 samples, 0.54%)</title><rect x="1.0811%" y="581" width="0.5405%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="1.3311%" y="591.50"></text></g><g><title>0x1032dccfb (1 samples, 0.54%)</title><rect x="1.0811%" y="565" width="0.5405%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="1.3311%" y="575.50"></text></g><g><title>0x1038dc77b (1 samples, 0.54%)</title><rect x="1.0811%" y="549" width="0.5405%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="1.3311%" y="559.50"></text></g><g><title>0x1032dcb87 (1 samples, 0.54%)</title><rect x="1.0811%" y="533" width="0.5405%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="1.3311%" y="543.50"></text></g><g><title>0x10334c2a7 (1 samples, 0.54%)</title><rect x="1.0811%" y="517" width="0.5405%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="1.3311%" y="527.50"></text></g><g><title>0x10334bb7f (1 samples, 0.54%)</title><rect x="1.0811%" y="501" width="0.5405%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="1.3311%" y="511.50"></text></g><g><title>__open (1 samples, 0.54%)</title><rect x="1.0811%" y="485" width="0.5405%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="1.3311%" y="495.50"></text></g><g><title>0x103078c3b (1 samples, 0.54%)</title><rect x="1.6216%" y="501" width="0.5405%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="1.8716%" y="511.50"></text></g><g><title>dingo_test_runner::tester::handlers::let_handler::execute (1 samples, 0.54%)</title><rect x="1.6216%" y="485" width="0.5405%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="1.8716%" y="495.50"></text></g><g><title>0x10303d8db (1 samples, 0.54%)</title><rect x="1.6216%" y="469" width="0.5405%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="1.8716%" y="479.50"></text></g><g><title>0x102ddfb4b (1 samples, 0.54%)</title><rect x="1.6216%" y="453" width="0.5405%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="1.8716%" y="463.50"></text></g><g><title>0x102fdf357 (1 samples, 0.54%)</title><rect x="1.6216%" y="437" width="0.5405%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="1.8716%" y="447.50"></text></g><g><title>0x1038b718f (1 samples, 0.54%)</title><rect x="1.6216%" y="421" width="0.5405%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="1.8716%" y="431.50"></text></g><g><title>0x103866ec3 (1 samples, 0.54%)</title><rect x="1.6216%" y="405" width="0.5405%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="1.8716%" y="415.50"></text></g><g><title>0x10387100b (1 samples, 0.54%)</title><rect x="1.6216%" y="389" width="0.5405%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="1"/><text x="1.8716%" y="399.50"></text></g><g><title>0x10384b9eb (1 samples, 0.54%)</title><rect x="1.6216%" y="373" width="0.5405%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="1"/><text x="1.8716%" y="383.50"></text></g><g><title>0x10386ca71 (1 samples, 0.54%)</title><rect x="1.6216%" y="357" width="0.5405%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="1"/><text x="1.8716%" y="367.50"></text></g><g><title>0x102c1f823 (1 samples, 0.54%)</title><rect x="2.1622%" y="437" width="0.5405%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="1"/><text x="2.4122%" y="447.50"></text></g><g><title>0x102d0ffcb (1 samples, 0.54%)</title><rect x="2.1622%" y="421" width="0.5405%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="1"/><text x="2.4122%" y="431.50"></text></g><g><title>0x102dd3c83 (1 samples, 0.54%)</title><rect x="2.1622%" y="405" width="0.5405%" height="15" fill="rgb(232,36,49)" fg:x="4" fg:w="1"/><text x="2.4122%" y="415.50"></text></g><g><title>0x102ce0b53 (1 samples, 0.54%)</title><rect x="2.1622%" y="389" width="0.5405%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="1"/><text x="2.4122%" y="399.50"></text></g><g><title>0x1037ec257 (1 samples, 0.54%)</title><rect x="2.1622%" y="373" width="0.5405%" height="15" fill="rgb(229,88,8)" fg:x="4" fg:w="1"/><text x="2.4122%" y="383.50"></text></g><g><title>0x1037d65db (1 samples, 0.54%)</title><rect x="2.1622%" y="357" width="0.5405%" height="15" fill="rgb(213,181,19)" fg:x="4" fg:w="1"/><text x="2.4122%" y="367.50"></text></g><g><title>_malloc_zone_malloc (1 samples, 0.54%)</title><rect x="2.1622%" y="341" width="0.5405%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="1"/><text x="2.4122%" y="351.50"></text></g><g><title>0x10308563b (2 samples, 1.08%)</title><rect x="2.1622%" y="469" width="1.0811%" height="15" fill="rgb(241,83,37)" fg:x="4" fg:w="2"/><text x="2.4122%" y="479.50"></text></g><g><title>dingo_test_runner::tester::database::Database::cleanup_after_test (2 samples, 1.08%)</title><rect x="2.1622%" y="453" width="1.0811%" height="15" fill="rgb(233,36,39)" fg:x="4" fg:w="2"/><text x="2.4122%" y="463.50"></text></g><g><title>0x102e72d0f (1 samples, 0.54%)</title><rect x="2.7027%" y="437" width="0.5405%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="1"/><text x="2.9527%" y="447.50"></text></g><g><title>0x102aa5e93 (1 samples, 0.54%)</title><rect x="2.7027%" y="421" width="0.5405%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="1"/><text x="2.9527%" y="431.50"></text></g><g><title>0x102d066db (1 samples, 0.54%)</title><rect x="2.7027%" y="405" width="0.5405%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="1"/><text x="2.9527%" y="415.50"></text></g><g><title>_platform_memcmp (1 samples, 0.54%)</title><rect x="2.7027%" y="389" width="0.5405%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="1"/><text x="2.9527%" y="399.50"></text></g><g><title>0x102e8e78f (1 samples, 0.54%)</title><rect x="3.2432%" y="405" width="0.5405%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="1"/><text x="3.4932%" y="415.50"></text></g><g><title>0x102d33ebf (1 samples, 0.54%)</title><rect x="3.2432%" y="389" width="0.5405%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="1"/><text x="3.4932%" y="399.50"></text></g><g><title>0x102e6ef4b (1 samples, 0.54%)</title><rect x="3.2432%" y="373" width="0.5405%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="1"/><text x="3.4932%" y="383.50"></text></g><g><title>0x102e695b3 (1 samples, 0.54%)</title><rect x="3.2432%" y="357" width="0.5405%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="1"/><text x="3.4932%" y="367.50"></text></g><g><title>0x102e6791b (1 samples, 0.54%)</title><rect x="3.2432%" y="341" width="0.5405%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="1"/><text x="3.4932%" y="351.50"></text></g><g><title>0x102f5f41b (1 samples, 0.54%)</title><rect x="3.2432%" y="325" width="0.5405%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="1"/><text x="3.4932%" y="335.50"></text></g><g><title>0x102f5fb43 (1 samples, 0.54%)</title><rect x="3.2432%" y="309" width="0.5405%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="1"/><text x="3.4932%" y="319.50"></text></g><g><title>0x102e945ab (1 samples, 0.54%)</title><rect x="3.2432%" y="293" width="0.5405%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="1"/><text x="3.4932%" y="303.50"></text></g><g><title>0x102f93393 (1 samples, 0.54%)</title><rect x="3.2432%" y="277" width="0.5405%" height="15" fill="rgb(239,60,40)" fg:x="6" fg:w="1"/><text x="3.4932%" y="287.50"></text></g><g><title>0x103554e4f (1 samples, 0.54%)</title><rect x="3.2432%" y="261" width="0.5405%" height="15" fill="rgb(206,27,48)" fg:x="6" fg:w="1"/><text x="3.4932%" y="271.50"></text></g><g><title>Curl_multi_handle (1 samples, 0.54%)</title><rect x="3.2432%" y="245" width="0.5405%" height="15" fill="rgb(225,35,8)" fg:x="6" fg:w="1"/><text x="3.4932%" y="255.50"></text></g><g><title>Curl_conncache_init (1 samples, 0.54%)</title><rect x="3.2432%" y="229" width="0.5405%" height="15" fill="rgb(250,213,24)" fg:x="6" fg:w="1"/><text x="3.4932%" y="239.50"></text></g><g><title>curl_easy_init (1 samples, 0.54%)</title><rect x="3.2432%" y="213" width="0.5405%" height="15" fill="rgb(247,123,22)" fg:x="6" fg:w="1"/><text x="3.4932%" y="223.50"></text></g><g><title>0x102f89daf (1 samples, 0.54%)</title><rect x="3.7838%" y="293" width="0.5405%" height="15" fill="rgb(231,138,38)" fg:x="7" fg:w="1"/><text x="4.0338%" y="303.50"></text></g><g><title>fstat (1 samples, 0.54%)</title><rect x="3.7838%" y="277" width="0.5405%" height="15" fill="rgb(231,145,46)" fg:x="7" fg:w="1"/><text x="4.0338%" y="287.50"></text></g><g><title>0x102e873ab (3 samples, 1.62%)</title><rect x="3.2432%" y="421" width="1.6216%" height="15" fill="rgb(251,118,11)" fg:x="6" fg:w="3"/><text x="3.4932%" y="431.50"></text></g><g><title>0x102e8e833 (2 samples, 1.08%)</title><rect x="3.7838%" y="405" width="1.0811%" height="15" fill="rgb(217,147,25)" fg:x="7" fg:w="2"/><text x="4.0338%" y="415.50"></text></g><g><title>0x102d33ebf (2 samples, 1.08%)</title><rect x="3.7838%" y="389" width="1.0811%" height="15" fill="rgb(247,81,37)" fg:x="7" fg:w="2"/><text x="4.0338%" y="399.50"></text></g><g><title>0x102e6ef4b (2 samples, 1.08%)</title><rect x="3.7838%" y="373" width="1.0811%" height="15" fill="rgb(209,12,38)" fg:x="7" fg:w="2"/><text x="4.0338%" y="383.50"></text></g><g><title>0x102e6982f (2 samples, 1.08%)</title><rect x="3.7838%" y="357" width="1.0811%" height="15" fill="rgb(227,1,9)" fg:x="7" fg:w="2"/><text x="4.0338%" y="367.50"></text></g><g><title>0x102f9743b (2 samples, 1.08%)</title><rect x="3.7838%" y="341" width="1.0811%" height="15" fill="rgb(248,47,43)" fg:x="7" fg:w="2"/><text x="4.0338%" y="351.50"></text></g><g><title>0x102f9627b (2 samples, 1.08%)</title><rect x="3.7838%" y="325" width="1.0811%" height="15" fill="rgb(221,10,30)" fg:x="7" fg:w="2"/><text x="4.0338%" y="335.50"></text></g><g><title>0x102f8c143 (2 samples, 1.08%)</title><rect x="3.7838%" y="309" width="1.0811%" height="15" fill="rgb(210,229,1)" fg:x="7" fg:w="2"/><text x="4.0338%" y="319.50"></text></g><g><title>0x102f8a1e3 (1 samples, 0.54%)</title><rect x="4.3243%" y="293" width="0.5405%" height="15" fill="rgb(222,148,37)" fg:x="8" fg:w="1"/><text x="4.5743%" y="303.50"></text></g><g><title>0x102cf70cb (1 samples, 0.54%)</title><rect x="4.3243%" y="277" width="0.5405%" height="15" fill="rgb(234,67,33)" fg:x="8" fg:w="1"/><text x="4.5743%" y="287.50"></text></g><g><title>0x10388956b (1 samples, 0.54%)</title><rect x="4.3243%" y="261" width="0.5405%" height="15" fill="rgb(247,98,35)" fg:x="8" fg:w="1"/><text x="4.5743%" y="271.50"></text></g><g><title>0x1038192ed (1 samples, 0.54%)</title><rect x="4.3243%" y="245" width="0.5405%" height="15" fill="rgb(247,138,52)" fg:x="8" fg:w="1"/><text x="4.5743%" y="255.50"></text></g><g><title>0x102e8dbbf (1 samples, 0.54%)</title><rect x="4.8649%" y="405" width="0.5405%" height="15" fill="rgb(213,79,30)" fg:x="9" fg:w="1"/><text x="5.1149%" y="415.50"></text></g><g><title>0x102e6ff03 (1 samples, 0.54%)</title><rect x="4.8649%" y="389" width="0.5405%" height="15" fill="rgb(246,177,23)" fg:x="9" fg:w="1"/><text x="5.1149%" y="399.50"></text></g><g><title>0x102e7006b (1 samples, 0.54%)</title><rect x="4.8649%" y="373" width="0.5405%" height="15" fill="rgb(230,62,27)" fg:x="9" fg:w="1"/><text x="5.1149%" y="383.50"></text></g><g><title>0x102e6ff03 (1 samples, 0.54%)</title><rect x="4.8649%" y="357" width="0.5405%" height="15" fill="rgb(216,154,8)" fg:x="9" fg:w="1"/><text x="5.1149%" y="367.50"></text></g><g><title>0x102e700ed (1 samples, 0.54%)</title><rect x="4.8649%" y="341" width="0.5405%" height="15" fill="rgb(244,35,45)" fg:x="9" fg:w="1"/><text x="5.1149%" y="351.50"></text></g><g><title>0x102e8de43 (1 samples, 0.54%)</title><rect x="5.4054%" y="405" width="0.5405%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="5.6554%" y="415.50"></text></g><g><title>0x102ccbd31 (1 samples, 0.54%)</title><rect x="5.4054%" y="389" width="0.5405%" height="15" fill="rgb(240,54,50)" fg:x="10" fg:w="1"/><text x="5.6554%" y="399.50"></text></g><g><title>0x102f89bc1 (1 samples, 0.54%)</title><rect x="5.9459%" y="293" width="0.5405%" height="15" fill="rgb(233,84,52)" fg:x="11" fg:w="1"/><text x="6.1959%" y="303.50"></text></g><g><title>0x102f89daf (1 samples, 0.54%)</title><rect x="6.4865%" y="293" width="0.5405%" height="15" fill="rgb(207,117,47)" fg:x="12" fg:w="1"/><text x="6.7365%" y="303.50"></text></g><g><title>0x10384206b (1 samples, 0.54%)</title><rect x="6.4865%" y="277" width="0.5405%" height="15" fill="rgb(249,43,39)" fg:x="12" fg:w="1"/><text x="6.7365%" y="287.50"></text></g><g><title>0x103842db7 (1 samples, 0.54%)</title><rect x="6.4865%" y="261" width="0.5405%" height="15" fill="rgb(209,38,44)" fg:x="12" fg:w="1"/><text x="6.7365%" y="271.50"></text></g><g><title>__open (1 samples, 0.54%)</title><rect x="6.4865%" y="245" width="0.5405%" height="15" fill="rgb(236,212,23)" fg:x="12" fg:w="1"/><text x="6.7365%" y="255.50"></text></g><g><title>0x102f8c143 (3 samples, 1.62%)</title><rect x="5.9459%" y="309" width="1.6216%" height="15" fill="rgb(242,79,21)" fg:x="11" fg:w="3"/><text x="6.1959%" y="319.50"></text></g><g><title>0x102f8a1e3 (1 samples, 0.54%)</title><rect x="7.0270%" y="293" width="0.5405%" height="15" fill="rgb(211,96,35)" fg:x="13" fg:w="1"/><text x="7.2770%" y="303.50"></text></g><g><title>0x102cf6e75 (1 samples, 0.54%)</title><rect x="7.0270%" y="277" width="0.5405%" height="15" fill="rgb(253,215,40)" fg:x="13" fg:w="1"/><text x="7.2770%" y="287.50"></text></g><g><title>0x102e8e78f (4 samples, 2.16%)</title><rect x="5.9459%" y="405" width="2.1622%" height="15" fill="rgb(211,81,21)" fg:x="11" fg:w="4"/><text x="6.1959%" y="415.50">0..</text></g><g><title>0x102d33ebf (4 samples, 2.16%)</title><rect x="5.9459%" y="389" width="2.1622%" height="15" fill="rgb(208,190,38)" fg:x="11" fg:w="4"/><text x="6.1959%" y="399.50">0..</text></g><g><title>0x102e6ef4b (4 samples, 2.16%)</title><rect x="5.9459%" y="373" width="2.1622%" height="15" fill="rgb(235,213,38)" fg:x="11" fg:w="4"/><text x="6.1959%" y="383.50">0..</text></g><g><title>0x102e6982f (4 samples, 2.16%)</title><rect x="5.9459%" y="357" width="2.1622%" height="15" fill="rgb(237,122,38)" fg:x="11" fg:w="4"/><text x="6.1959%" y="367.50">0..</text></g><g><title>0x102f9743b (4 samples, 2.16%)</title><rect x="5.9459%" y="341" width="2.1622%" height="15" fill="rgb(244,218,35)" fg:x="11" fg:w="4"/><text x="6.1959%" y="351.50">0..</text></g><g><title>0x102f9627b (4 samples, 2.16%)</title><rect x="5.9459%" y="325" width="2.1622%" height="15" fill="rgb(240,68,47)" fg:x="11" fg:w="4"/><text x="6.1959%" y="335.50">0..</text></g><g><title>0x102f8c23b (1 samples, 0.54%)</title><rect x="7.5676%" y="309" width="0.5405%" height="15" fill="rgb(210,16,53)" fg:x="14" fg:w="1"/><text x="7.8176%" y="319.50"></text></g><g><title>0x102f899fb (1 samples, 0.54%)</title><rect x="7.5676%" y="293" width="0.5405%" height="15" fill="rgb(235,124,12)" fg:x="14" fg:w="1"/><text x="7.8176%" y="303.50"></text></g><g><title>0x102f8c42f (1 samples, 0.54%)</title><rect x="7.5676%" y="277" width="0.5405%" height="15" fill="rgb(224,169,11)" fg:x="14" fg:w="1"/><text x="7.8176%" y="287.50"></text></g><g><title>0x102f8c65f (1 samples, 0.54%)</title><rect x="7.5676%" y="261" width="0.5405%" height="15" fill="rgb(250,166,2)" fg:x="14" fg:w="1"/><text x="7.8176%" y="271.50"></text></g><g><title>0x102f88b07 (1 samples, 0.54%)</title><rect x="7.5676%" y="245" width="0.5405%" height="15" fill="rgb(242,216,29)" fg:x="14" fg:w="1"/><text x="7.8176%" y="255.50"></text></g><g><title>0x102d368eb (1 samples, 0.54%)</title><rect x="7.5676%" y="229" width="0.5405%" height="15" fill="rgb(230,116,27)" fg:x="14" fg:w="1"/><text x="7.8176%" y="239.50"></text></g><g><title>0x102e4375b (1 samples, 0.54%)</title><rect x="7.5676%" y="213" width="0.5405%" height="15" fill="rgb(228,99,48)" fg:x="14" fg:w="1"/><text x="7.8176%" y="223.50"></text></g><g><title>0x103819fc3 (1 samples, 0.54%)</title><rect x="7.5676%" y="197" width="0.5405%" height="15" fill="rgb(253,11,6)" fg:x="14" fg:w="1"/><text x="7.8176%" y="207.50"></text></g><g><title>0x10381b3ff (1 samples, 0.54%)</title><rect x="7.5676%" y="181" width="0.5405%" height="15" fill="rgb(247,143,39)" fg:x="14" fg:w="1"/><text x="7.8176%" y="191.50"></text></g><g><title>0x1038da9db (1 samples, 0.54%)</title><rect x="7.5676%" y="165" width="0.5405%" height="15" fill="rgb(236,97,10)" fg:x="14" fg:w="1"/><text x="7.8176%" y="175.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.54%)</title><rect x="7.5676%" y="149" width="0.5405%" height="15" fill="rgb(233,208,19)" fg:x="14" fg:w="1"/><text x="7.8176%" y="159.50"></text></g><g><title>nanov2_allocate_outlined (1 samples, 0.54%)</title><rect x="7.5676%" y="133" width="0.5405%" height="15" fill="rgb(216,164,2)" fg:x="14" fg:w="1"/><text x="7.8176%" y="143.50"></text></g><g><title>0x10384206b (3 samples, 1.62%)</title><rect x="8.1081%" y="277" width="1.6216%" height="15" fill="rgb(220,129,5)" fg:x="15" fg:w="3"/><text x="8.3581%" y="287.50"></text></g><g><title>0x103842db7 (3 samples, 1.62%)</title><rect x="8.1081%" y="261" width="1.6216%" height="15" fill="rgb(242,17,10)" fg:x="15" fg:w="3"/><text x="8.3581%" y="271.50"></text></g><g><title>__open (3 samples, 1.62%)</title><rect x="8.1081%" y="245" width="1.6216%" height="15" fill="rgb(242,107,0)" fg:x="15" fg:w="3"/><text x="8.3581%" y="255.50"></text></g><g><title>0x102f89daf (4 samples, 2.16%)</title><rect x="8.1081%" y="293" width="2.1622%" height="15" fill="rgb(251,28,31)" fg:x="15" fg:w="4"/><text x="8.3581%" y="303.50">0..</text></g><g><title>0x10384213b (1 samples, 0.54%)</title><rect x="9.7297%" y="277" width="0.5405%" height="15" fill="rgb(233,223,10)" fg:x="18" fg:w="1"/><text x="9.9797%" y="287.50"></text></g><g><title>read (1 samples, 0.54%)</title><rect x="9.7297%" y="261" width="0.5405%" height="15" fill="rgb(215,21,27)" fg:x="18" fg:w="1"/><text x="9.9797%" y="271.50"></text></g><g><title>0x102cf7091 (1 samples, 0.54%)</title><rect x="10.2703%" y="277" width="0.5405%" height="15" fill="rgb(232,23,21)" fg:x="19" fg:w="1"/><text x="10.5203%" y="287.50"></text></g><g><title>0x102da8675 (1 samples, 0.54%)</title><rect x="10.8108%" y="245" width="0.5405%" height="15" fill="rgb(244,5,23)" fg:x="20" fg:w="1"/><text x="11.0608%" y="255.50"></text></g><g><title>0x102f8a1e3 (3 samples, 1.62%)</title><rect x="10.2703%" y="293" width="1.6216%" height="15" fill="rgb(226,81,46)" fg:x="19" fg:w="3"/><text x="10.5203%" y="303.50"></text></g><g><title>0x102cf70cb (2 samples, 1.08%)</title><rect x="10.8108%" y="277" width="1.0811%" height="15" fill="rgb(247,70,30)" fg:x="20" fg:w="2"/><text x="11.0608%" y="287.50"></text></g><g><title>0x10388956b (2 samples, 1.08%)</title><rect x="10.8108%" y="261" width="1.0811%" height="15" fill="rgb(212,68,19)" fg:x="20" fg:w="2"/><text x="11.0608%" y="271.50"></text></g><g><title>0x102da87f9 (1 samples, 0.54%)</title><rect x="11.3514%" y="245" width="0.5405%" height="15" fill="rgb(240,187,13)" fg:x="21" fg:w="1"/><text x="11.6014%" y="255.50"></text></g><g><title>0x102f8c143 (8 samples, 4.32%)</title><rect x="8.1081%" y="309" width="4.3243%" height="15" fill="rgb(223,113,26)" fg:x="15" fg:w="8"/><text x="8.3581%" y="319.50">0x102..</text></g><g><title>0x102f8b4f3 (1 samples, 0.54%)</title><rect x="11.8919%" y="293" width="0.5405%" height="15" fill="rgb(206,192,2)" fg:x="22" fg:w="1"/><text x="12.1419%" y="303.50"></text></g><g><title>0x102ccbc5d (1 samples, 0.54%)</title><rect x="11.8919%" y="277" width="0.5405%" height="15" fill="rgb(241,108,4)" fg:x="22" fg:w="1"/><text x="12.1419%" y="287.50"></text></g><g><title>0x103071dd3 (18 samples, 9.73%)</title><rect x="3.2432%" y="437" width="9.7297%" height="15" fill="rgb(247,173,49)" fg:x="6" fg:w="18"/><text x="3.4932%" y="447.50">0x103071dd3</text></g><g><title>0x102e8872b (15 samples, 8.11%)</title><rect x="4.8649%" y="421" width="8.1081%" height="15" fill="rgb(224,114,35)" fg:x="9" fg:w="15"/><text x="5.1149%" y="431.50">0x102e8872b</text></g><g><title>0x102e8e833 (9 samples, 4.86%)</title><rect x="8.1081%" y="405" width="4.8649%" height="15" fill="rgb(245,159,27)" fg:x="15" fg:w="9"/><text x="8.3581%" y="415.50">0x102e..</text></g><g><title>0x102d33ebf (9 samples, 4.86%)</title><rect x="8.1081%" y="389" width="4.8649%" height="15" fill="rgb(245,172,44)" fg:x="15" fg:w="9"/><text x="8.3581%" y="399.50">0x102d..</text></g><g><title>0x102e6ef4b (9 samples, 4.86%)</title><rect x="8.1081%" y="373" width="4.8649%" height="15" fill="rgb(236,23,11)" fg:x="15" fg:w="9"/><text x="8.3581%" y="383.50">0x102e..</text></g><g><title>0x102e6982f (9 samples, 4.86%)</title><rect x="8.1081%" y="357" width="4.8649%" height="15" fill="rgb(205,117,38)" fg:x="15" fg:w="9"/><text x="8.3581%" y="367.50">0x102e..</text></g><g><title>0x102f9743b (9 samples, 4.86%)</title><rect x="8.1081%" y="341" width="4.8649%" height="15" fill="rgb(237,72,25)" fg:x="15" fg:w="9"/><text x="8.3581%" y="351.50">0x102f..</text></g><g><title>0x102f9627b (9 samples, 4.86%)</title><rect x="8.1081%" y="325" width="4.8649%" height="15" fill="rgb(244,70,9)" fg:x="15" fg:w="9"/><text x="8.3581%" y="335.50">0x102f..</text></g><g><title>0x102f8c23b (1 samples, 0.54%)</title><rect x="12.4324%" y="309" width="0.5405%" height="15" fill="rgb(217,125,39)" fg:x="23" fg:w="1"/><text x="12.6824%" y="319.50"></text></g><g><title>0x102f899fb (1 samples, 0.54%)</title><rect x="12.4324%" y="293" width="0.5405%" height="15" fill="rgb(235,36,10)" fg:x="23" fg:w="1"/><text x="12.6824%" y="303.50"></text></g><g><title>0x102f8c42f (1 samples, 0.54%)</title><rect x="12.4324%" y="277" width="0.5405%" height="15" fill="rgb(251,123,47)" fg:x="23" fg:w="1"/><text x="12.6824%" y="287.50"></text></g><g><title>0x102f8cdab (1 samples, 0.54%)</title><rect x="12.4324%" y="261" width="0.5405%" height="15" fill="rgb(221,13,13)" fg:x="23" fg:w="1"/><text x="12.6824%" y="271.50"></text></g><g><title>0x1038ddfa1 (1 samples, 0.54%)</title><rect x="12.4324%" y="245" width="0.5405%" height="15" fill="rgb(238,131,9)" fg:x="23" fg:w="1"/><text x="12.6824%" y="255.50"></text></g><g><title>0x10307233b (1 samples, 0.54%)</title><rect x="12.9730%" y="437" width="0.5405%" height="15" fill="rgb(211,50,8)" fg:x="24" fg:w="1"/><text x="13.2230%" y="447.50"></text></g><g><title>0x102aaa173 (1 samples, 0.54%)</title><rect x="12.9730%" y="421" width="0.5405%" height="15" fill="rgb(245,182,24)" fg:x="24" fg:w="1"/><text x="13.2230%" y="431.50"></text></g><g><title>_platform_memcmp (1 samples, 0.54%)</title><rect x="12.9730%" y="405" width="0.5405%" height="15" fill="rgb(242,14,37)" fg:x="24" fg:w="1"/><text x="13.2230%" y="415.50"></text></g><g><title>0x1030726b7 (1 samples, 0.54%)</title><rect x="13.5135%" y="437" width="0.5405%" height="15" fill="rgb(246,228,12)" fg:x="25" fg:w="1"/><text x="13.7635%" y="447.50"></text></g><g><title>0x103007fdb (1 samples, 0.54%)</title><rect x="13.5135%" y="421" width="0.5405%" height="15" fill="rgb(213,55,15)" fg:x="25" fg:w="1"/><text x="13.7635%" y="431.50"></text></g><g><title>0x102a9f2b7 (1 samples, 0.54%)</title><rect x="13.5135%" y="405" width="0.5405%" height="15" fill="rgb(209,9,3)" fg:x="25" fg:w="1"/><text x="13.7635%" y="415.50"></text></g><g><title>_platform_memcmp (1 samples, 0.54%)</title><rect x="13.5135%" y="389" width="0.5405%" height="15" fill="rgb(230,59,30)" fg:x="25" fg:w="1"/><text x="13.7635%" y="399.50"></text></g><g><title>0x1030856fb (21 samples, 11.35%)</title><rect x="3.2432%" y="469" width="11.3514%" height="15" fill="rgb(209,121,21)" fg:x="6" fg:w="21"/><text x="3.4932%" y="479.50">0x1030856fb</text></g><g><title>0x10308755b (21 samples, 11.35%)</title><rect x="3.2432%" y="453" width="11.3514%" height="15" fill="rgb(220,109,13)" fg:x="6" fg:w="21"/><text x="3.4932%" y="463.50">0x10308755b</text></g><g><title>0x103073a8f (1 samples, 0.54%)</title><rect x="14.0541%" y="437" width="0.5405%" height="15" fill="rgb(232,18,1)" fg:x="26" fg:w="1"/><text x="14.3041%" y="447.50"></text></g><g><title>0x102b2479b (1 samples, 0.54%)</title><rect x="14.0541%" y="421" width="0.5405%" height="15" fill="rgb(215,41,42)" fg:x="26" fg:w="1"/><text x="14.3041%" y="431.50"></text></g><g><title>0x102b0609f (1 samples, 0.54%)</title><rect x="14.0541%" y="405" width="0.5405%" height="15" fill="rgb(224,123,36)" fg:x="26" fg:w="1"/><text x="14.3041%" y="415.50"></text></g><g><title>0x102d0e987 (1 samples, 0.54%)</title><rect x="14.0541%" y="389" width="0.5405%" height="15" fill="rgb(240,125,3)" fg:x="26" fg:w="1"/><text x="14.3041%" y="399.50"></text></g><g><title>0x102d0d253 (1 samples, 0.54%)</title><rect x="14.0541%" y="373" width="0.5405%" height="15" fill="rgb(205,98,50)" fg:x="26" fg:w="1"/><text x="14.3041%" y="383.50"></text></g><g><title>0x102aeba0f (1 samples, 0.54%)</title><rect x="14.0541%" y="357" width="0.5405%" height="15" fill="rgb(205,185,37)" fg:x="26" fg:w="1"/><text x="14.3041%" y="367.50"></text></g><g><title>0x102b2a7ef (1 samples, 0.54%)</title><rect x="14.0541%" y="341" width="0.5405%" height="15" fill="rgb(238,207,15)" fg:x="26" fg:w="1"/><text x="14.3041%" y="351.50"></text></g><g><title>0x102d0d1eb (1 samples, 0.54%)</title><rect x="14.0541%" y="325" width="0.5405%" height="15" fill="rgb(213,199,42)" fg:x="26" fg:w="1"/><text x="14.3041%" y="335.50"></text></g><g><title>0x102ae8917 (1 samples, 0.54%)</title><rect x="14.0541%" y="309" width="0.5405%" height="15" fill="rgb(235,201,11)" fg:x="26" fg:w="1"/><text x="14.3041%" y="319.50"></text></g><g><title>0x102d2b4df (1 samples, 0.54%)</title><rect x="14.0541%" y="293" width="0.5405%" height="15" fill="rgb(207,46,11)" fg:x="26" fg:w="1"/><text x="14.3041%" y="303.50"></text></g><g><title>0x102b19bb1 (1 samples, 0.54%)</title><rect x="14.0541%" y="277" width="0.5405%" height="15" fill="rgb(241,35,35)" fg:x="26" fg:w="1"/><text x="14.3041%" y="287.50"></text></g><g><title>0x103085807 (1 samples, 0.54%)</title><rect x="14.5946%" y="469" width="0.5405%" height="15" fill="rgb(243,32,47)" fg:x="27" fg:w="1"/><text x="14.8446%" y="479.50"></text></g><g><title>dingo_test_runner::tester::database::Database::cleanup_after_test (1 samples, 0.54%)</title><rect x="14.5946%" y="453" width="0.5405%" height="15" fill="rgb(247,202,23)" fg:x="27" fg:w="1"/><text x="14.8446%" y="463.50"></text></g><g><title>0x102f2ea7b (1 samples, 0.54%)</title><rect x="14.5946%" y="437" width="0.5405%" height="15" fill="rgb(219,102,11)" fg:x="27" fg:w="1"/><text x="14.8446%" y="447.50"></text></g><g><title>dingo_test_runner::tester::database::MySQLDatabase::switch_database (1 samples, 0.54%)</title><rect x="14.5946%" y="421" width="0.5405%" height="15" fill="rgb(243,110,44)" fg:x="27" fg:w="1"/><text x="14.8446%" y="431.50"></text></g><g><title>0x102c02fbf (1 samples, 0.54%)</title><rect x="14.5946%" y="405" width="0.5405%" height="15" fill="rgb(222,74,54)" fg:x="27" fg:w="1"/><text x="14.8446%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;mysql::conn::pool::PooledConn&gt; (1 samples, 0.54%)</title><rect x="14.5946%" y="389" width="0.5405%" height="15" fill="rgb(216,99,12)" fg:x="27" fg:w="1"/><text x="14.8446%" y="399.50"></text></g><g><title>0x102e7564f (1 samples, 0.54%)</title><rect x="14.5946%" y="373" width="0.5405%" height="15" fill="rgb(226,22,26)" fg:x="27" fg:w="1"/><text x="14.8446%" y="383.50"></text></g><g><title>_platform_memmove (1 samples, 0.54%)</title><rect x="14.5946%" y="357" width="0.5405%" height="15" fill="rgb(217,163,10)" fg:x="27" fg:w="1"/><text x="14.8446%" y="367.50"></text></g><g><title>0x102f43463 (25 samples, 13.51%)</title><rect x="2.1622%" y="485" width="13.5135%" height="15" fill="rgb(213,25,53)" fg:x="4" fg:w="25"/><text x="2.4122%" y="495.50">0x102f43463</text></g><g><title>0x1030858c7 (1 samples, 0.54%)</title><rect x="15.1351%" y="469" width="0.5405%" height="15" fill="rgb(252,105,26)" fg:x="28" fg:w="1"/><text x="15.3851%" y="479.50"></text></g><g><title>0x102b2445f (1 samples, 0.54%)</title><rect x="15.1351%" y="453" width="0.5405%" height="15" fill="rgb(220,39,43)" fg:x="28" fg:w="1"/><text x="15.3851%" y="463.50"></text></g><g><title>0x102d0dd9b (1 samples, 0.54%)</title><rect x="15.1351%" y="437" width="0.5405%" height="15" fill="rgb(229,68,48)" fg:x="28" fg:w="1"/><text x="15.3851%" y="447.50"></text></g><g><title>0x102d0dd4d (1 samples, 0.54%)</title><rect x="15.1351%" y="421" width="0.5405%" height="15" fill="rgb(252,8,32)" fg:x="28" fg:w="1"/><text x="15.3851%" y="431.50"></text></g><g><title>0x102e8e78f (1 samples, 0.54%)</title><rect x="15.6757%" y="421" width="0.5405%" height="15" fill="rgb(223,20,43)" fg:x="29" fg:w="1"/><text x="15.9257%" y="431.50"></text></g><g><title>0x102d33ebf (1 samples, 0.54%)</title><rect x="15.6757%" y="405" width="0.5405%" height="15" fill="rgb(229,81,49)" fg:x="29" fg:w="1"/><text x="15.9257%" y="415.50"></text></g><g><title>0x102e6f01d (1 samples, 0.54%)</title><rect x="15.6757%" y="389" width="0.5405%" height="15" fill="rgb(236,28,36)" fg:x="29" fg:w="1"/><text x="15.9257%" y="399.50"></text></g><g><title>0x102d2b76f (1 samples, 0.54%)</title><rect x="16.2162%" y="325" width="0.5405%" height="15" fill="rgb(249,185,26)" fg:x="30" fg:w="1"/><text x="16.4662%" y="335.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.54%)</title><rect x="16.2162%" y="309" width="0.5405%" height="15" fill="rgb(249,174,33)" fg:x="30" fg:w="1"/><text x="16.4662%" y="319.50"></text></g><g><title>tiny_malloc_should_clear (1 samples, 0.54%)</title><rect x="16.2162%" y="293" width="0.5405%" height="15" fill="rgb(233,201,37)" fg:x="30" fg:w="1"/><text x="16.4662%" y="303.50"></text></g><g><title>0x103071dd3 (3 samples, 1.62%)</title><rect x="15.6757%" y="453" width="1.6216%" height="15" fill="rgb(221,78,26)" fg:x="29" fg:w="3"/><text x="15.9257%" y="463.50"></text></g><g><title>0x102e8872b (3 samples, 1.62%)</title><rect x="15.6757%" y="437" width="1.6216%" height="15" fill="rgb(250,127,30)" fg:x="29" fg:w="3"/><text x="15.9257%" y="447.50"></text></g><g><title>0x102e8e833 (2 samples, 1.08%)</title><rect x="16.2162%" y="421" width="1.0811%" height="15" fill="rgb(230,49,44)" fg:x="30" fg:w="2"/><text x="16.4662%" y="431.50"></text></g><g><title>0x102d33ebf (2 samples, 1.08%)</title><rect x="16.2162%" y="405" width="1.0811%" height="15" fill="rgb(229,67,23)" fg:x="30" fg:w="2"/><text x="16.4662%" y="415.50"></text></g><g><title>0x102e6ef4b (2 samples, 1.08%)</title><rect x="16.2162%" y="389" width="1.0811%" height="15" fill="rgb(249,83,47)" fg:x="30" fg:w="2"/><text x="16.4662%" y="399.50"></text></g><g><title>0x102e6982f (2 samples, 1.08%)</title><rect x="16.2162%" y="373" width="1.0811%" height="15" fill="rgb(215,43,3)" fg:x="30" fg:w="2"/><text x="16.4662%" y="383.50"></text></g><g><title>0x102f97403 (2 samples, 1.08%)</title><rect x="16.2162%" y="357" width="1.0811%" height="15" fill="rgb(238,154,13)" fg:x="30" fg:w="2"/><text x="16.4662%" y="367.50"></text></g><g><title>0x102e44943 (2 samples, 1.08%)</title><rect x="16.2162%" y="341" width="1.0811%" height="15" fill="rgb(219,56,2)" fg:x="30" fg:w="2"/><text x="16.4662%" y="351.50"></text></g><g><title>0x102d2ba5d (1 samples, 0.54%)</title><rect x="16.7568%" y="325" width="0.5405%" height="15" fill="rgb(233,0,4)" fg:x="31" fg:w="1"/><text x="17.0068%" y="335.50"></text></g><g><title>0x1030726b7 (1 samples, 0.54%)</title><rect x="17.2973%" y="453" width="0.5405%" height="15" fill="rgb(235,30,7)" fg:x="32" fg:w="1"/><text x="17.5473%" y="463.50"></text></g><g><title>0x103007ccf (1 samples, 0.54%)</title><rect x="17.2973%" y="437" width="0.5405%" height="15" fill="rgb(250,79,13)" fg:x="32" fg:w="1"/><text x="17.5473%" y="447.50"></text></g><g><title>0x102aa5ed3 (1 samples, 0.54%)</title><rect x="17.2973%" y="421" width="0.5405%" height="15" fill="rgb(211,146,34)" fg:x="32" fg:w="1"/><text x="17.5473%" y="431.50"></text></g><g><title>_platform_memcmp (1 samples, 0.54%)</title><rect x="17.2973%" y="405" width="0.5405%" height="15" fill="rgb(228,22,38)" fg:x="32" fg:w="1"/><text x="17.5473%" y="415.50"></text></g><g><title>0x102f43a07 (5 samples, 2.70%)</title><rect x="15.6757%" y="485" width="2.7027%" height="15" fill="rgb(235,168,5)" fg:x="29" fg:w="5"/><text x="15.9257%" y="495.50">0x..</text></g><g><title>0x10308755b (5 samples, 2.70%)</title><rect x="15.6757%" y="469" width="2.7027%" height="15" fill="rgb(221,155,16)" fg:x="29" fg:w="5"/><text x="15.9257%" y="479.50">0x..</text></g><g><title>0x103073a8f (1 samples, 0.54%)</title><rect x="17.8378%" y="453" width="0.5405%" height="15" fill="rgb(215,215,53)" fg:x="33" fg:w="1"/><text x="18.0878%" y="463.50"></text></g><g><title>0x102b2479b (1 samples, 0.54%)</title><rect x="17.8378%" y="437" width="0.5405%" height="15" fill="rgb(223,4,10)" fg:x="33" fg:w="1"/><text x="18.0878%" y="447.50"></text></g><g><title>0x102b0609f (1 samples, 0.54%)</title><rect x="17.8378%" y="421" width="0.5405%" height="15" fill="rgb(234,103,6)" fg:x="33" fg:w="1"/><text x="18.0878%" y="431.50"></text></g><g><title>0x102d0e987 (1 samples, 0.54%)</title><rect x="17.8378%" y="405" width="0.5405%" height="15" fill="rgb(227,97,0)" fg:x="33" fg:w="1"/><text x="18.0878%" y="415.50"></text></g><g><title>0x102d0d253 (1 samples, 0.54%)</title><rect x="17.8378%" y="389" width="0.5405%" height="15" fill="rgb(234,150,53)" fg:x="33" fg:w="1"/><text x="18.0878%" y="399.50"></text></g><g><title>0x102aeba0f (1 samples, 0.54%)</title><rect x="17.8378%" y="373" width="0.5405%" height="15" fill="rgb(228,201,54)" fg:x="33" fg:w="1"/><text x="18.0878%" y="383.50"></text></g><g><title>0x102d0e61f (1 samples, 0.54%)</title><rect x="17.8378%" y="357" width="0.5405%" height="15" fill="rgb(222,22,37)" fg:x="33" fg:w="1"/><text x="18.0878%" y="367.50"></text></g><g><title>0x102d2f513 (1 samples, 0.54%)</title><rect x="17.8378%" y="341" width="0.5405%" height="15" fill="rgb(237,53,32)" fg:x="33" fg:w="1"/><text x="18.0878%" y="351.50"></text></g><g><title>nanov2_madvise_block (1 samples, 0.54%)</title><rect x="17.8378%" y="325" width="0.5405%" height="15" fill="rgb(233,25,53)" fg:x="33" fg:w="1"/><text x="18.0878%" y="335.50"></text></g><g><title>nanov2_madvise_block_locked (1 samples, 0.54%)</title><rect x="17.8378%" y="309" width="0.5405%" height="15" fill="rgb(210,40,34)" fg:x="33" fg:w="1"/><text x="18.0878%" y="319.50"></text></g><g><title>madvise (1 samples, 0.54%)</title><rect x="17.8378%" y="293" width="0.5405%" height="15" fill="rgb(241,220,44)" fg:x="33" fg:w="1"/><text x="18.0878%" y="303.50"></text></g><g><title>0x102f96da7 (5 samples, 2.70%)</title><rect x="18.3784%" y="405" width="2.7027%" height="15" fill="rgb(235,28,35)" fg:x="34" fg:w="5"/><text x="18.6284%" y="415.50">0x..</text></g><g><title>0x102f85fe7 (5 samples, 2.70%)</title><rect x="18.3784%" y="389" width="2.7027%" height="15" fill="rgb(210,56,17)" fg:x="34" fg:w="5"/><text x="18.6284%" y="399.50">0x..</text></g><g><title>0x102f8047b (5 samples, 2.70%)</title><rect x="18.3784%" y="373" width="2.7027%" height="15" fill="rgb(224,130,29)" fg:x="34" fg:w="5"/><text x="18.6284%" y="383.50">0x..</text></g><g><title>0x103842db7 (5 samples, 2.70%)</title><rect x="18.3784%" y="357" width="2.7027%" height="15" fill="rgb(235,212,8)" fg:x="34" fg:w="5"/><text x="18.6284%" y="367.50">0x..</text></g><g><title>__open (5 samples, 2.70%)</title><rect x="18.3784%" y="341" width="2.7027%" height="15" fill="rgb(223,33,50)" fg:x="34" fg:w="5"/><text x="18.6284%" y="351.50">__..</text></g><g><title>0x102f9446b (4 samples, 2.16%)</title><rect x="21.0811%" y="389" width="2.1622%" height="15" fill="rgb(219,149,13)" fg:x="39" fg:w="4"/><text x="21.3311%" y="399.50">0..</text></g><g><title>0x103842207 (4 samples, 2.16%)</title><rect x="21.0811%" y="373" width="2.1622%" height="15" fill="rgb(250,156,29)" fg:x="39" fg:w="4"/><text x="21.3311%" y="383.50">0..</text></g><g><title>0x103842db7 (4 samples, 2.16%)</title><rect x="21.0811%" y="357" width="2.1622%" height="15" fill="rgb(216,193,19)" fg:x="39" fg:w="4"/><text x="21.3311%" y="367.50">0..</text></g><g><title>__open (4 samples, 2.16%)</title><rect x="21.0811%" y="341" width="2.1622%" height="15" fill="rgb(216,135,14)" fg:x="39" fg:w="4"/><text x="21.3311%" y="351.50">_..</text></g><g><title>0x102f94a87 (1 samples, 0.54%)</title><rect x="23.2432%" y="389" width="0.5405%" height="15" fill="rgb(241,47,5)" fg:x="43" fg:w="1"/><text x="23.4932%" y="399.50"></text></g><g><title>0x10384e029 (1 samples, 0.54%)</title><rect x="23.2432%" y="373" width="0.5405%" height="15" fill="rgb(233,42,35)" fg:x="43" fg:w="1"/><text x="23.4932%" y="383.50"></text></g><g><title>0x1030a229f (3 samples, 1.62%)</title><rect x="23.7838%" y="341" width="1.6216%" height="15" fill="rgb(231,13,6)" fg:x="44" fg:w="3"/><text x="24.0338%" y="351.50"></text></g><g><title>0x1036e39d3 (3 samples, 1.62%)</title><rect x="23.7838%" y="325" width="1.6216%" height="15" fill="rgb(207,181,40)" fg:x="44" fg:w="3"/><text x="24.0338%" y="335.50"></text></g><g><title>0x1036e3b13 (3 samples, 1.62%)</title><rect x="23.7838%" y="309" width="1.6216%" height="15" fill="rgb(254,173,49)" fg:x="44" fg:w="3"/><text x="24.0338%" y="319.50"></text></g><g><title>0x10384206b (3 samples, 1.62%)</title><rect x="23.7838%" y="293" width="1.6216%" height="15" fill="rgb(221,1,38)" fg:x="44" fg:w="3"/><text x="24.0338%" y="303.50"></text></g><g><title>0x103842db7 (3 samples, 1.62%)</title><rect x="23.7838%" y="277" width="1.6216%" height="15" fill="rgb(206,124,46)" fg:x="44" fg:w="3"/><text x="24.0338%" y="287.50"></text></g><g><title>__open (3 samples, 1.62%)</title><rect x="23.7838%" y="261" width="1.6216%" height="15" fill="rgb(249,21,11)" fg:x="44" fg:w="3"/><text x="24.0338%" y="271.50"></text></g><g><title>0x1037dbbfd (1 samples, 0.54%)</title><rect x="25.4054%" y="277" width="0.5405%" height="15" fill="rgb(222,201,40)" fg:x="47" fg:w="1"/><text x="25.6554%" y="287.50"></text></g><g><title>0x1037eaf9f (2 samples, 1.08%)</title><rect x="25.4054%" y="293" width="1.0811%" height="15" fill="rgb(235,61,29)" fg:x="47" fg:w="2"/><text x="25.6554%" y="303.50"></text></g><g><title>0x1037ec1e3 (1 samples, 0.54%)</title><rect x="25.9459%" y="277" width="0.5405%" height="15" fill="rgb(219,207,3)" fg:x="48" fg:w="1"/><text x="26.1959%" y="287.50"></text></g><g><title>0x1037dbb05 (1 samples, 0.54%)</title><rect x="25.9459%" y="261" width="0.5405%" height="15" fill="rgb(222,56,46)" fg:x="48" fg:w="1"/><text x="26.1959%" y="271.50"></text></g><g><title>0x102ce08e3 (3 samples, 1.62%)</title><rect x="25.4054%" y="309" width="1.6216%" height="15" fill="rgb(239,76,54)" fg:x="47" fg:w="3"/><text x="25.6554%" y="319.50"></text></g><g><title>0x1037eb063 (1 samples, 0.54%)</title><rect x="26.4865%" y="293" width="0.5405%" height="15" fill="rgb(231,124,27)" fg:x="49" fg:w="1"/><text x="26.7365%" y="303.50"></text></g><g><title>0x1037f6687 (1 samples, 0.54%)</title><rect x="26.4865%" y="277" width="0.5405%" height="15" fill="rgb(249,195,6)" fg:x="49" fg:w="1"/><text x="26.7365%" y="287.50"></text></g><g><title>0x1037eac73 (1 samples, 0.54%)</title><rect x="26.4865%" y="261" width="0.5405%" height="15" fill="rgb(237,174,47)" fg:x="49" fg:w="1"/><text x="26.7365%" y="271.50"></text></g><g><title>_platform_memmove (1 samples, 0.54%)</title><rect x="26.4865%" y="245" width="0.5405%" height="15" fill="rgb(206,201,31)" fg:x="49" fg:w="1"/><text x="26.7365%" y="255.50"></text></g><g><title>0x1037d1a17 (1 samples, 0.54%)</title><rect x="27.0270%" y="261" width="0.5405%" height="15" fill="rgb(231,57,52)" fg:x="50" fg:w="1"/><text x="27.2770%" y="271.50"></text></g><g><title>0x1038d8f3b (1 samples, 0.54%)</title><rect x="27.0270%" y="245" width="0.5405%" height="15" fill="rgb(248,177,22)" fg:x="50" fg:w="1"/><text x="27.2770%" y="255.50"></text></g><g><title>_realloc (1 samples, 0.54%)</title><rect x="27.0270%" y="229" width="0.5405%" height="15" fill="rgb(215,211,37)" fg:x="50" fg:w="1"/><text x="27.2770%" y="239.50"></text></g><g><title>_malloc_zone_realloc (1 samples, 0.54%)</title><rect x="27.0270%" y="213" width="0.5405%" height="15" fill="rgb(241,128,51)" fg:x="50" fg:w="1"/><text x="27.2770%" y="223.50"></text></g><g><title>szone_realloc (1 samples, 0.54%)</title><rect x="27.0270%" y="197" width="0.5405%" height="15" fill="rgb(227,165,31)" fg:x="50" fg:w="1"/><text x="27.2770%" y="207.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.54%)</title><rect x="27.0270%" y="181" width="0.5405%" height="15" fill="rgb(228,167,24)" fg:x="50" fg:w="1"/><text x="27.2770%" y="191.50"></text></g><g><title>small_malloc_should_clear (1 samples, 0.54%)</title><rect x="27.0270%" y="165" width="0.5405%" height="15" fill="rgb(228,143,12)" fg:x="50" fg:w="1"/><text x="27.2770%" y="175.50"></text></g><g><title>mvm_allocate_pages_plat (1 samples, 0.54%)</title><rect x="27.0270%" y="149" width="0.5405%" height="15" fill="rgb(249,149,8)" fg:x="50" fg:w="1"/><text x="27.2770%" y="159.50"></text></g><g><title>_kernelrpc_mach_vm_map_trap (1 samples, 0.54%)</title><rect x="27.0270%" y="133" width="0.5405%" height="15" fill="rgb(243,35,44)" fg:x="50" fg:w="1"/><text x="27.2770%" y="143.50"></text></g><g><title>0x102ce0a9f (2 samples, 1.08%)</title><rect x="27.0270%" y="309" width="1.0811%" height="15" fill="rgb(246,89,9)" fg:x="50" fg:w="2"/><text x="27.2770%" y="319.50"></text></g><g><title>0x1037ecc43 (2 samples, 1.08%)</title><rect x="27.0270%" y="293" width="1.0811%" height="15" fill="rgb(233,213,13)" fg:x="50" fg:w="2"/><text x="27.2770%" y="303.50"></text></g><g><title>0x1037d75d7 (2 samples, 1.08%)</title><rect x="27.0270%" y="277" width="1.0811%" height="15" fill="rgb(233,141,41)" fg:x="50" fg:w="2"/><text x="27.2770%" y="287.50"></text></g><g><title>0x1037d1ac7 (1 samples, 0.54%)</title><rect x="27.5676%" y="261" width="0.5405%" height="15" fill="rgb(239,167,4)" fg:x="51" fg:w="1"/><text x="27.8176%" y="271.50"></text></g><g><title>0x1038d8f3b (1 samples, 0.54%)</title><rect x="27.5676%" y="245" width="0.5405%" height="15" fill="rgb(209,217,16)" fg:x="51" fg:w="1"/><text x="27.8176%" y="255.50"></text></g><g><title>_realloc (1 samples, 0.54%)</title><rect x="27.5676%" y="229" width="0.5405%" height="15" fill="rgb(219,88,35)" fg:x="51" fg:w="1"/><text x="27.8176%" y="239.50"></text></g><g><title>_malloc_zone_realloc (1 samples, 0.54%)</title><rect x="27.5676%" y="213" width="0.5405%" height="15" fill="rgb(220,193,23)" fg:x="51" fg:w="1"/><text x="27.8176%" y="223.50"></text></g><g><title>_platform_memmove (1 samples, 0.54%)</title><rect x="27.5676%" y="197" width="0.5405%" height="15" fill="rgb(230,90,52)" fg:x="51" fg:w="1"/><text x="27.8176%" y="207.50"></text></g><g><title>0x102ce0e13 (1 samples, 0.54%)</title><rect x="28.1081%" y="309" width="0.5405%" height="15" fill="rgb(252,106,19)" fg:x="52" fg:w="1"/><text x="28.3581%" y="319.50"></text></g><g><title>0x1037eda2f (1 samples, 0.54%)</title><rect x="28.1081%" y="293" width="0.5405%" height="15" fill="rgb(206,74,20)" fg:x="52" fg:w="1"/><text x="28.3581%" y="303.50"></text></g><g><title>0x1037ed063 (1 samples, 0.54%)</title><rect x="28.1081%" y="277" width="0.5405%" height="15" fill="rgb(230,138,44)" fg:x="52" fg:w="1"/><text x="28.3581%" y="287.50"></text></g><g><title>0x1037ed71f (1 samples, 0.54%)</title><rect x="28.1081%" y="261" width="0.5405%" height="15" fill="rgb(235,182,43)" fg:x="52" fg:w="1"/><text x="28.3581%" y="271.50"></text></g><g><title>_free (1 samples, 0.54%)</title><rect x="28.1081%" y="245" width="0.5405%" height="15" fill="rgb(242,16,51)" fg:x="52" fg:w="1"/><text x="28.3581%" y="255.50"></text></g><g><title>0x102ce11f9 (1 samples, 0.54%)</title><rect x="28.6486%" y="309" width="0.5405%" height="15" fill="rgb(248,9,4)" fg:x="53" fg:w="1"/><text x="28.8986%" y="319.50"></text></g><g><title>0x1030a2fcb (8 samples, 4.32%)</title><rect x="25.4054%" y="341" width="4.3243%" height="15" fill="rgb(210,31,22)" fg:x="47" fg:w="8"/><text x="25.6554%" y="351.50">0x103..</text></g><g><title>0x102dd3c83 (8 samples, 4.32%)</title><rect x="25.4054%" y="325" width="4.3243%" height="15" fill="rgb(239,54,39)" fg:x="47" fg:w="8"/><text x="25.6554%" y="335.50">0x102..</text></g><g><title>0x1037ee991 (1 samples, 0.54%)</title><rect x="29.1892%" y="309" width="0.5405%" height="15" fill="rgb(230,99,41)" fg:x="54" fg:w="1"/><text x="29.4392%" y="319.50"></text></g><g><title>0x1037d7843 (1 samples, 0.54%)</title><rect x="29.7297%" y="261" width="0.5405%" height="15" fill="rgb(253,106,12)" fg:x="55" fg:w="1"/><text x="29.9797%" y="271.50"></text></g><g><title>0x1037d1ac7 (1 samples, 0.54%)</title><rect x="29.7297%" y="245" width="0.5405%" height="15" fill="rgb(213,46,41)" fg:x="55" fg:w="1"/><text x="29.9797%" y="255.50"></text></g><g><title>_malloc_zone_malloc (1 samples, 0.54%)</title><rect x="29.7297%" y="229" width="0.5405%" height="15" fill="rgb(215,133,35)" fg:x="55" fg:w="1"/><text x="29.9797%" y="239.50"></text></g><g><title>0x1030a362b (2 samples, 1.08%)</title><rect x="29.7297%" y="341" width="1.0811%" height="15" fill="rgb(213,28,5)" fg:x="55" fg:w="2"/><text x="29.9797%" y="351.50"></text></g><g><title>0x102dbf00f (2 samples, 1.08%)</title><rect x="29.7297%" y="325" width="1.0811%" height="15" fill="rgb(215,77,49)" fg:x="55" fg:w="2"/><text x="29.9797%" y="335.50"></text></g><g><title>0x1037ea1bf (2 samples, 1.08%)</title><rect x="29.7297%" y="309" width="1.0811%" height="15" fill="rgb(248,100,22)" fg:x="55" fg:w="2"/><text x="29.9797%" y="319.50"></text></g><g><title>0x1037d79bb (2 samples, 1.08%)</title><rect x="29.7297%" y="293" width="1.0811%" height="15" fill="rgb(208,67,9)" fg:x="55" fg:w="2"/><text x="29.9797%" y="303.50"></text></g><g><title>0x1037ea1bf (2 samples, 1.08%)</title><rect x="29.7297%" y="277" width="1.0811%" height="15" fill="rgb(219,133,21)" fg:x="55" fg:w="2"/><text x="29.9797%" y="287.50"></text></g><g><title>_platform_memmove (1 samples, 0.54%)</title><rect x="30.2703%" y="261" width="0.5405%" height="15" fill="rgb(246,46,29)" fg:x="56" fg:w="1"/><text x="30.5203%" y="271.50"></text></g><g><title>0x102bccd6f (1 samples, 0.54%)</title><rect x="30.8108%" y="277" width="0.5405%" height="15" fill="rgb(246,185,52)" fg:x="57" fg:w="1"/><text x="31.0608%" y="287.50"></text></g><g><title>0x102beb34b (1 samples, 0.54%)</title><rect x="30.8108%" y="261" width="0.5405%" height="15" fill="rgb(252,136,11)" fg:x="57" fg:w="1"/><text x="31.0608%" y="271.50"></text></g><g><title>0x102c297eb (1 samples, 0.54%)</title><rect x="30.8108%" y="245" width="0.5405%" height="15" fill="rgb(219,138,53)" fg:x="57" fg:w="1"/><text x="31.0608%" y="255.50"></text></g><g><title>_nanov2_free (1 samples, 0.54%)</title><rect x="30.8108%" y="229" width="0.5405%" height="15" fill="rgb(211,51,23)" fg:x="57" fg:w="1"/><text x="31.0608%" y="239.50"></text></g><g><title>0x102bf3513 (2 samples, 1.08%)</title><rect x="30.8108%" y="325" width="1.0811%" height="15" fill="rgb(247,221,28)" fg:x="57" fg:w="2"/><text x="31.0608%" y="335.50"></text></g><g><title>0x102cb9fff (2 samples, 1.08%)</title><rect x="30.8108%" y="309" width="1.0811%" height="15" fill="rgb(251,222,45)" fg:x="57" fg:w="2"/><text x="31.0608%" y="319.50"></text></g><g><title>0x102c9f123 (2 samples, 1.08%)</title><rect x="30.8108%" y="293" width="1.0811%" height="15" fill="rgb(217,162,53)" fg:x="57" fg:w="2"/><text x="31.0608%" y="303.50"></text></g><g><title>0x102bcceb7 (1 samples, 0.54%)</title><rect x="31.3514%" y="277" width="0.5405%" height="15" fill="rgb(229,93,14)" fg:x="58" fg:w="1"/><text x="31.6014%" y="287.50"></text></g><g><title>0x102cb3e7b (1 samples, 0.54%)</title><rect x="31.3514%" y="261" width="0.5405%" height="15" fill="rgb(209,67,49)" fg:x="58" fg:w="1"/><text x="31.6014%" y="271.50"></text></g><g><title>0x1038ddfad (1 samples, 0.54%)</title><rect x="31.3514%" y="245" width="0.5405%" height="15" fill="rgb(213,87,29)" fg:x="58" fg:w="1"/><text x="31.6014%" y="255.50"></text></g><g><title>0x1030a3c63 (3 samples, 1.62%)</title><rect x="30.8108%" y="341" width="1.6216%" height="15" fill="rgb(205,151,52)" fg:x="57" fg:w="3"/><text x="31.0608%" y="351.50"></text></g><g><title>0x102bf4157 (1 samples, 0.54%)</title><rect x="31.8919%" y="325" width="0.5405%" height="15" fill="rgb(253,215,39)" fg:x="59" fg:w="1"/><text x="32.1419%" y="335.50"></text></g><g><title>0x102c9dc93 (1 samples, 0.54%)</title><rect x="31.8919%" y="309" width="0.5405%" height="15" fill="rgb(221,220,41)" fg:x="59" fg:w="1"/><text x="32.1419%" y="319.50"></text></g><g><title>0x102bcc643 (1 samples, 0.54%)</title><rect x="31.8919%" y="293" width="0.5405%" height="15" fill="rgb(218,133,21)" fg:x="59" fg:w="1"/><text x="32.1419%" y="303.50"></text></g><g><title>0x102d2181d (1 samples, 0.54%)</title><rect x="31.8919%" y="277" width="0.5405%" height="15" fill="rgb(221,193,43)" fg:x="59" fg:w="1"/><text x="32.1419%" y="287.50"></text></g><g><title>0x1030a4f23 (1 samples, 0.54%)</title><rect x="32.4324%" y="341" width="0.5405%" height="15" fill="rgb(240,128,52)" fg:x="60" fg:w="1"/><text x="32.6824%" y="351.50"></text></g><g><title>0x1030abc17 (1 samples, 0.54%)</title><rect x="32.4324%" y="325" width="0.5405%" height="15" fill="rgb(253,114,12)" fg:x="60" fg:w="1"/><text x="32.6824%" y="335.50"></text></g><g><title>0x1030a1397 (1 samples, 0.54%)</title><rect x="32.4324%" y="309" width="0.5405%" height="15" fill="rgb(215,223,47)" fg:x="60" fg:w="1"/><text x="32.6824%" y="319.50"></text></g><g><title>dingo_test_runner::tester::tester::Tester::execute_query (1 samples, 0.54%)</title><rect x="32.4324%" y="293" width="0.5405%" height="15" fill="rgb(248,225,23)" fg:x="60" fg:w="1"/><text x="32.6824%" y="303.50"></text></g><g><title>0x10301d1f3 (1 samples, 0.54%)</title><rect x="32.4324%" y="277" width="0.5405%" height="15" fill="rgb(250,108,0)" fg:x="60" fg:w="1"/><text x="32.6824%" y="287.50"></text></g><g><title>0x10302705f (1 samples, 0.54%)</title><rect x="32.4324%" y="261" width="0.5405%" height="15" fill="rgb(228,208,7)" fg:x="60" fg:w="1"/><text x="32.6824%" y="271.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.54%)</title><rect x="32.4324%" y="245" width="0.5405%" height="15" fill="rgb(244,45,10)" fg:x="60" fg:w="1"/><text x="32.6824%" y="255.50"></text></g><g><title>0x102f95187 (18 samples, 9.73%)</title><rect x="23.7838%" y="389" width="9.7297%" height="15" fill="rgb(207,125,25)" fg:x="44" fg:w="18"/><text x="24.0338%" y="399.50">0x102f95187</text></g><g><title>0x102f78f3b (18 samples, 9.73%)</title><rect x="23.7838%" y="373" width="9.7297%" height="15" fill="rgb(210,195,18)" fg:x="44" fg:w="18"/><text x="24.0338%" y="383.50">0x102f78f3b</text></g><g><title>0x102efe15f (18 samples, 9.73%)</title><rect x="23.7838%" y="357" width="9.7297%" height="15" fill="rgb(249,80,12)" fg:x="44" fg:w="18"/><text x="24.0338%" y="367.50">0x102efe15f</text></g><g><title>0x1030a56e7 (1 samples, 0.54%)</title><rect x="32.9730%" y="341" width="0.5405%" height="15" fill="rgb(221,65,9)" fg:x="61" fg:w="1"/><text x="33.2230%" y="351.50"></text></g><g><title>0x1030b0447 (1 samples, 0.54%)</title><rect x="32.9730%" y="325" width="0.5405%" height="15" fill="rgb(235,49,36)" fg:x="61" fg:w="1"/><text x="33.2230%" y="335.50"></text></g><g><title>0x10309f29f (1 samples, 0.54%)</title><rect x="32.9730%" y="309" width="0.5405%" height="15" fill="rgb(225,32,20)" fg:x="61" fg:w="1"/><text x="33.2230%" y="319.50"></text></g><g><title>_platform_memmove (1 samples, 0.54%)</title><rect x="32.9730%" y="293" width="0.5405%" height="15" fill="rgb(215,141,46)" fg:x="61" fg:w="1"/><text x="33.2230%" y="303.50"></text></g><g><title>0x102f95247 (1 samples, 0.54%)</title><rect x="33.5135%" y="389" width="0.5405%" height="15" fill="rgb(250,160,47)" fg:x="62" fg:w="1"/><text x="33.7635%" y="399.50"></text></g><g><title>0x102f897f3 (1 samples, 0.54%)</title><rect x="33.5135%" y="373" width="0.5405%" height="15" fill="rgb(216,222,40)" fg:x="62" fg:w="1"/><text x="33.7635%" y="383.50"></text></g><g><title>dingo_test_runner::tester::tester::Tester::run_test_file (1 samples, 0.54%)</title><rect x="33.5135%" y="357" width="0.5405%" height="15" fill="rgb(234,217,39)" fg:x="62" fg:w="1"/><text x="33.7635%" y="367.50"></text></g><g><title>0x102f43ba7 (30 samples, 16.22%)</title><rect x="18.3784%" y="485" width="16.2162%" height="15" fill="rgb(207,178,40)" fg:x="34" fg:w="30"/><text x="18.6284%" y="495.50">0x102f43ba7</text></g><g><title>0x1030675e3 (30 samples, 16.22%)</title><rect x="18.3784%" y="469" width="16.2162%" height="15" fill="rgb(221,136,13)" fg:x="34" fg:w="30"/><text x="18.6284%" y="479.50">0x1030675e3</text></g><g><title>0x1030687cb (30 samples, 16.22%)</title><rect x="18.3784%" y="453" width="16.2162%" height="15" fill="rgb(249,199,10)" fg:x="34" fg:w="30"/><text x="18.6284%" y="463.50">0x1030687cb</text></g><g><title>0x102e59e53 (30 samples, 16.22%)</title><rect x="18.3784%" y="437" width="16.2162%" height="15" fill="rgb(249,222,13)" fg:x="34" fg:w="30"/><text x="18.6284%" y="447.50">0x102e59e53</text></g><g><title>0x102f97697 (30 samples, 16.22%)</title><rect x="18.3784%" y="421" width="16.2162%" height="15" fill="rgb(244,185,38)" fg:x="34" fg:w="30"/><text x="18.6284%" y="431.50">0x102f97697</text></g><g><title>0x102f96e23 (25 samples, 13.51%)</title><rect x="21.0811%" y="405" width="13.5135%" height="15" fill="rgb(236,202,9)" fg:x="39" fg:w="25"/><text x="21.3311%" y="415.50">0x102f96e23</text></g><g><title>0x102f95277 (1 samples, 0.54%)</title><rect x="34.0541%" y="389" width="0.5405%" height="15" fill="rgb(250,229,37)" fg:x="63" fg:w="1"/><text x="34.3041%" y="399.50"></text></g><g><title>_platform_memmove (1 samples, 0.54%)</title><rect x="34.0541%" y="373" width="0.5405%" height="15" fill="rgb(206,174,23)" fg:x="63" fg:w="1"/><text x="34.3041%" y="383.50"></text></g><g><title>0x102e7d317 (1 samples, 0.54%)</title><rect x="34.5946%" y="453" width="0.5405%" height="15" fill="rgb(211,33,43)" fg:x="64" fg:w="1"/><text x="34.8446%" y="463.50"></text></g><g><title>0x102e7f3ef (1 samples, 0.54%)</title><rect x="34.5946%" y="437" width="0.5405%" height="15" fill="rgb(245,58,50)" fg:x="64" fg:w="1"/><text x="34.8446%" y="447.50"></text></g><g><title>0x102d38703 (1 samples, 0.54%)</title><rect x="34.5946%" y="421" width="0.5405%" height="15" fill="rgb(244,68,36)" fg:x="64" fg:w="1"/><text x="34.8446%" y="431.50"></text></g><g><title>0x102cde82b (1 samples, 0.54%)</title><rect x="34.5946%" y="405" width="0.5405%" height="15" fill="rgb(232,229,15)" fg:x="64" fg:w="1"/><text x="34.8446%" y="415.50"></text></g><g><title>_nanov2_free (1 samples, 0.54%)</title><rect x="34.5946%" y="389" width="0.5405%" height="15" fill="rgb(254,30,23)" fg:x="64" fg:w="1"/><text x="34.8446%" y="399.50"></text></g><g><title>0x103078f03 (62 samples, 33.51%)</title><rect x="2.1622%" y="501" width="33.5135%" height="15" fill="rgb(235,160,14)" fg:x="4" fg:w="62"/><text x="2.4122%" y="511.50">0x103078f03</text></g><g><title>0x102f43c2f (2 samples, 1.08%)</title><rect x="34.5946%" y="485" width="1.0811%" height="15" fill="rgb(212,155,44)" fg:x="64" fg:w="2"/><text x="34.8446%" y="495.50"></text></g><g><title>0x1030710df (2 samples, 1.08%)</title><rect x="34.5946%" y="469" width="1.0811%" height="15" fill="rgb(226,2,50)" fg:x="64" fg:w="2"/><text x="34.8446%" y="479.50"></text></g><g><title>0x102e7d407 (1 samples, 0.54%)</title><rect x="35.1351%" y="453" width="0.5405%" height="15" fill="rgb(234,177,6)" fg:x="65" fg:w="1"/><text x="35.3851%" y="463.50"></text></g><g><title>0x102e7d407 (1 samples, 0.54%)</title><rect x="35.1351%" y="437" width="0.5405%" height="15" fill="rgb(217,24,9)" fg:x="65" fg:w="1"/><text x="35.3851%" y="447.50"></text></g><g><title>0x102e7d407 (1 samples, 0.54%)</title><rect x="35.1351%" y="421" width="0.5405%" height="15" fill="rgb(220,13,46)" fg:x="65" fg:w="1"/><text x="35.3851%" y="431.50"></text></g><g><title>0x102e7d407 (1 samples, 0.54%)</title><rect x="35.1351%" y="405" width="0.5405%" height="15" fill="rgb(239,221,27)" fg:x="65" fg:w="1"/><text x="35.3851%" y="415.50"></text></g><g><title>0x102e7d317 (1 samples, 0.54%)</title><rect x="35.1351%" y="389" width="0.5405%" height="15" fill="rgb(222,198,25)" fg:x="65" fg:w="1"/><text x="35.3851%" y="399.50"></text></g><g><title>0x102e7f277 (1 samples, 0.54%)</title><rect x="35.1351%" y="373" width="0.5405%" height="15" fill="rgb(211,99,13)" fg:x="65" fg:w="1"/><text x="35.3851%" y="383.50"></text></g><g><title>0x102aaa173 (1 samples, 0.54%)</title><rect x="35.1351%" y="357" width="0.5405%" height="15" fill="rgb(232,111,31)" fg:x="65" fg:w="1"/><text x="35.3851%" y="367.50"></text></g><g><title>_platform_memcmp (1 samples, 0.54%)</title><rect x="35.1351%" y="341" width="0.5405%" height="15" fill="rgb(245,82,37)" fg:x="65" fg:w="1"/><text x="35.3851%" y="351.50"></text></g><g><title>0x103079b6f (1 samples, 0.54%)</title><rect x="35.6757%" y="501" width="0.5405%" height="15" fill="rgb(227,149,46)" fg:x="66" fg:w="1"/><text x="35.9257%" y="511.50"></text></g><g><title>0x10304e01b (1 samples, 0.54%)</title><rect x="35.6757%" y="485" width="0.5405%" height="15" fill="rgb(218,36,50)" fg:x="66" fg:w="1"/><text x="35.9257%" y="495.50"></text></g><g><title>0x102e25a4f (1 samples, 0.54%)</title><rect x="35.6757%" y="469" width="0.5405%" height="15" fill="rgb(226,80,48)" fg:x="66" fg:w="1"/><text x="35.9257%" y="479.50"></text></g><g><title>0x102e25dc3 (1 samples, 0.54%)</title><rect x="35.6757%" y="453" width="0.5405%" height="15" fill="rgb(238,224,15)" fg:x="66" fg:w="1"/><text x="35.9257%" y="463.50"></text></g><g><title>0x102e25dc3 (1 samples, 0.54%)</title><rect x="35.6757%" y="437" width="0.5405%" height="15" fill="rgb(241,136,10)" fg:x="66" fg:w="1"/><text x="35.9257%" y="447.50"></text></g><g><title>0x102e25bf3 (1 samples, 0.54%)</title><rect x="35.6757%" y="421" width="0.5405%" height="15" fill="rgb(208,32,45)" fg:x="66" fg:w="1"/><text x="35.9257%" y="431.50"></text></g><g><title>0x102e268eb (1 samples, 0.54%)</title><rect x="35.6757%" y="405" width="0.5405%" height="15" fill="rgb(207,135,9)" fg:x="66" fg:w="1"/><text x="35.9257%" y="415.50"></text></g><g><title>0x102e28b7f (1 samples, 0.54%)</title><rect x="35.6757%" y="389" width="0.5405%" height="15" fill="rgb(206,86,44)" fg:x="66" fg:w="1"/><text x="35.9257%" y="399.50"></text></g><g><title>0x102e28ce3 (1 samples, 0.54%)</title><rect x="35.6757%" y="373" width="0.5405%" height="15" fill="rgb(245,177,15)" fg:x="66" fg:w="1"/><text x="35.9257%" y="383.50"></text></g><g><title>0x102e84843 (1 samples, 0.54%)</title><rect x="35.6757%" y="357" width="0.5405%" height="15" fill="rgb(206,64,50)" fg:x="66" fg:w="1"/><text x="35.9257%" y="367.50"></text></g><g><title>0x102ccb863 (1 samples, 0.54%)</title><rect x="35.6757%" y="341" width="0.5405%" height="15" fill="rgb(234,36,40)" fg:x="66" fg:w="1"/><text x="35.9257%" y="351.50"></text></g><g><title>0x102da87a9 (1 samples, 0.54%)</title><rect x="35.6757%" y="325" width="0.5405%" height="15" fill="rgb(213,64,8)" fg:x="66" fg:w="1"/><text x="35.9257%" y="335.50"></text></g><g><title>0x1030785ab (65 samples, 35.14%)</title><rect x="1.6216%" y="517" width="35.1351%" height="15" fill="rgb(210,75,36)" fg:x="3" fg:w="65"/><text x="1.8716%" y="527.50">0x1030785ab</text></g><g><title>0x103079c6f (1 samples, 0.54%)</title><rect x="36.2162%" y="501" width="0.5405%" height="15" fill="rgb(229,88,21)" fg:x="67" fg:w="1"/><text x="36.4662%" y="511.50"></text></g><g><title>0x102ecb16f (1 samples, 0.54%)</title><rect x="36.2162%" y="485" width="0.5405%" height="15" fill="rgb(252,204,47)" fg:x="67" fg:w="1"/><text x="36.4662%" y="495.50"></text></g><g><title>0x102ecbc4f (1 samples, 0.54%)</title><rect x="36.2162%" y="469" width="0.5405%" height="15" fill="rgb(208,77,27)" fg:x="67" fg:w="1"/><text x="36.4662%" y="479.50"></text></g><g><title>0x102e254ff (1 samples, 0.54%)</title><rect x="36.2162%" y="453" width="0.5405%" height="15" fill="rgb(221,76,26)" fg:x="67" fg:w="1"/><text x="36.4662%" y="463.50"></text></g><g><title>0x102cca5ef (1 samples, 0.54%)</title><rect x="36.2162%" y="437" width="0.5405%" height="15" fill="rgb(225,139,18)" fg:x="67" fg:w="1"/><text x="36.4662%" y="447.50"></text></g><g><title>0x103049def (1 samples, 0.54%)</title><rect x="36.2162%" y="421" width="0.5405%" height="15" fill="rgb(230,137,11)" fg:x="67" fg:w="1"/><text x="36.4662%" y="431.50"></text></g><g><title>0x102da8735 (1 samples, 0.54%)</title><rect x="36.2162%" y="405" width="0.5405%" height="15" fill="rgb(212,28,1)" fg:x="67" fg:w="1"/><text x="36.4662%" y="415.50"></text></g><g><title>0x10304080f (1 samples, 0.54%)</title><rect x="36.7568%" y="501" width="0.5405%" height="15" fill="rgb(248,164,17)" fg:x="68" fg:w="1"/><text x="37.0068%" y="511.50"></text></g><g><title>0x10304336f (1 samples, 0.54%)</title><rect x="36.7568%" y="485" width="0.5405%" height="15" fill="rgb(222,171,42)" fg:x="68" fg:w="1"/><text x="37.0068%" y="495.50"></text></g><g><title>0x102de428b (1 samples, 0.54%)</title><rect x="36.7568%" y="469" width="0.5405%" height="15" fill="rgb(243,84,45)" fg:x="68" fg:w="1"/><text x="37.0068%" y="479.50"></text></g><g><title>0x102de428b (1 samples, 0.54%)</title><rect x="36.7568%" y="453" width="0.5405%" height="15" fill="rgb(252,49,23)" fg:x="68" fg:w="1"/><text x="37.0068%" y="463.50"></text></g><g><title>0x102de428b (1 samples, 0.54%)</title><rect x="36.7568%" y="437" width="0.5405%" height="15" fill="rgb(215,19,7)" fg:x="68" fg:w="1"/><text x="37.0068%" y="447.50"></text></g><g><title>0x102de428b (1 samples, 0.54%)</title><rect x="36.7568%" y="421" width="0.5405%" height="15" fill="rgb(238,81,41)" fg:x="68" fg:w="1"/><text x="37.0068%" y="431.50"></text></g><g><title>0x102de428b (1 samples, 0.54%)</title><rect x="36.7568%" y="405" width="0.5405%" height="15" fill="rgb(210,199,37)" fg:x="68" fg:w="1"/><text x="37.0068%" y="415.50"></text></g><g><title>0x102de428b (1 samples, 0.54%)</title><rect x="36.7568%" y="389" width="0.5405%" height="15" fill="rgb(244,192,49)" fg:x="68" fg:w="1"/><text x="37.0068%" y="399.50"></text></g><g><title>0x102de428b (1 samples, 0.54%)</title><rect x="36.7568%" y="373" width="0.5405%" height="15" fill="rgb(226,211,11)" fg:x="68" fg:w="1"/><text x="37.0068%" y="383.50"></text></g><g><title>0x102de428b (1 samples, 0.54%)</title><rect x="36.7568%" y="357" width="0.5405%" height="15" fill="rgb(236,162,54)" fg:x="68" fg:w="1"/><text x="37.0068%" y="367.50"></text></g><g><title>0x102de4acb (1 samples, 0.54%)</title><rect x="36.7568%" y="341" width="0.5405%" height="15" fill="rgb(220,229,9)" fg:x="68" fg:w="1"/><text x="37.0068%" y="351.50"></text></g><g><title>0x102dda0db (1 samples, 0.54%)</title><rect x="36.7568%" y="325" width="0.5405%" height="15" fill="rgb(250,87,22)" fg:x="68" fg:w="1"/><text x="37.0068%" y="335.50"></text></g><g><title>0x103873405 (1 samples, 0.54%)</title><rect x="36.7568%" y="309" width="0.5405%" height="15" fill="rgb(239,43,17)" fg:x="68" fg:w="1"/><text x="37.0068%" y="319.50"></text></g><g><title>0x102df6b3b (1 samples, 0.54%)</title><rect x="37.2973%" y="437" width="0.5405%" height="15" fill="rgb(231,177,25)" fg:x="69" fg:w="1"/><text x="37.5473%" y="447.50"></text></g><g><title>0x102df7eef (1 samples, 0.54%)</title><rect x="37.2973%" y="421" width="0.5405%" height="15" fill="rgb(219,179,1)" fg:x="69" fg:w="1"/><text x="37.5473%" y="431.50"></text></g><g><title>0x1036e3b13 (1 samples, 0.54%)</title><rect x="37.2973%" y="405" width="0.5405%" height="15" fill="rgb(238,219,53)" fg:x="69" fg:w="1"/><text x="37.5473%" y="415.50"></text></g><g><title>0x10384206b (1 samples, 0.54%)</title><rect x="37.2973%" y="389" width="0.5405%" height="15" fill="rgb(232,167,36)" fg:x="69" fg:w="1"/><text x="37.5473%" y="399.50"></text></g><g><title>0x103842db7 (1 samples, 0.54%)</title><rect x="37.2973%" y="373" width="0.5405%" height="15" fill="rgb(244,19,51)" fg:x="69" fg:w="1"/><text x="37.5473%" y="383.50"></text></g><g><title>__open (1 samples, 0.54%)</title><rect x="37.2973%" y="357" width="0.5405%" height="15" fill="rgb(224,6,22)" fg:x="69" fg:w="1"/><text x="37.5473%" y="367.50"></text></g><g><title>0x10304089b (2 samples, 1.08%)</title><rect x="37.2973%" y="501" width="1.0811%" height="15" fill="rgb(224,145,5)" fg:x="69" fg:w="2"/><text x="37.5473%" y="511.50"></text></g><g><title>0x102df6e13 (2 samples, 1.08%)</title><rect x="37.2973%" y="485" width="1.0811%" height="15" fill="rgb(234,130,49)" fg:x="69" fg:w="2"/><text x="37.5473%" y="495.50"></text></g><g><title>0x102df6e13 (2 samples, 1.08%)</title><rect x="37.2973%" y="469" width="1.0811%" height="15" fill="rgb(254,6,2)" fg:x="69" fg:w="2"/><text x="37.5473%" y="479.50"></text></g><g><title>0x102df6e13 (2 samples, 1.08%)</title><rect x="37.2973%" y="453" width="1.0811%" height="15" fill="rgb(208,96,46)" fg:x="69" fg:w="2"/><text x="37.5473%" y="463.50"></text></g><g><title>0x102df6e13 (1 samples, 0.54%)</title><rect x="37.8378%" y="437" width="0.5405%" height="15" fill="rgb(239,3,39)" fg:x="70" fg:w="1"/><text x="38.0878%" y="447.50"></text></g><g><title>0x102df6e13 (1 samples, 0.54%)</title><rect x="37.8378%" y="421" width="0.5405%" height="15" fill="rgb(233,210,1)" fg:x="70" fg:w="1"/><text x="38.0878%" y="431.50"></text></g><g><title>0x102df6e13 (1 samples, 0.54%)</title><rect x="37.8378%" y="405" width="0.5405%" height="15" fill="rgb(244,137,37)" fg:x="70" fg:w="1"/><text x="38.0878%" y="415.50"></text></g><g><title>0x102df6b3b (1 samples, 0.54%)</title><rect x="37.8378%" y="389" width="0.5405%" height="15" fill="rgb(240,136,2)" fg:x="70" fg:w="1"/><text x="38.0878%" y="399.50"></text></g><g><title>0x102df7eef (1 samples, 0.54%)</title><rect x="37.8378%" y="373" width="0.5405%" height="15" fill="rgb(239,18,37)" fg:x="70" fg:w="1"/><text x="38.0878%" y="383.50"></text></g><g><title>0x1036e3b13 (1 samples, 0.54%)</title><rect x="37.8378%" y="357" width="0.5405%" height="15" fill="rgb(218,185,22)" fg:x="70" fg:w="1"/><text x="38.0878%" y="367.50"></text></g><g><title>0x10384206b (1 samples, 0.54%)</title><rect x="37.8378%" y="341" width="0.5405%" height="15" fill="rgb(225,218,4)" fg:x="70" fg:w="1"/><text x="38.0878%" y="351.50"></text></g><g><title>0x103842db7 (1 samples, 0.54%)</title><rect x="37.8378%" y="325" width="0.5405%" height="15" fill="rgb(230,182,32)" fg:x="70" fg:w="1"/><text x="38.0878%" y="335.50"></text></g><g><title>__open (1 samples, 0.54%)</title><rect x="37.8378%" y="309" width="0.5405%" height="15" fill="rgb(242,56,43)" fg:x="70" fg:w="1"/><text x="38.0878%" y="319.50"></text></g><g><title>0x102df049b (1 samples, 0.54%)</title><rect x="38.3784%" y="341" width="0.5405%" height="15" fill="rgb(233,99,24)" fg:x="71" fg:w="1"/><text x="38.6284%" y="351.50"></text></g><g><title>0x102b2c659 (1 samples, 0.54%)</title><rect x="38.3784%" y="325" width="0.5405%" height="15" fill="rgb(234,209,42)" fg:x="71" fg:w="1"/><text x="38.6284%" y="335.50"></text></g><g><title>0x103052c1b (3 samples, 1.62%)</title><rect x="38.3784%" y="389" width="1.6216%" height="15" fill="rgb(227,7,12)" fg:x="71" fg:w="3"/><text x="38.6284%" y="399.50"></text></g><g><title>0x103052c1b (3 samples, 1.62%)</title><rect x="38.3784%" y="373" width="1.6216%" height="15" fill="rgb(245,203,43)" fg:x="71" fg:w="3"/><text x="38.6284%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;dingo_test_runner::tester::tester::Tester&gt; (3 samples, 1.62%)</title><rect x="38.3784%" y="357" width="1.6216%" height="15" fill="rgb(238,205,33)" fg:x="71" fg:w="3"/><text x="38.6284%" y="367.50"></text></g><g><title>0x103046b77 (2 samples, 1.08%)</title><rect x="38.9189%" y="341" width="1.0811%" height="15" fill="rgb(231,56,7)" fg:x="72" fg:w="2"/><text x="39.1689%" y="351.50"></text></g><g><title>0x102e05e47 (2 samples, 1.08%)</title><rect x="38.9189%" y="325" width="1.0811%" height="15" fill="rgb(244,186,29)" fg:x="72" fg:w="2"/><text x="39.1689%" y="335.50"></text></g><g><title>0x1036e39d3 (2 samples, 1.08%)</title><rect x="38.9189%" y="309" width="1.0811%" height="15" fill="rgb(234,111,31)" fg:x="72" fg:w="2"/><text x="39.1689%" y="319.50"></text></g><g><title>0x1036e3b13 (2 samples, 1.08%)</title><rect x="38.9189%" y="293" width="1.0811%" height="15" fill="rgb(241,149,10)" fg:x="72" fg:w="2"/><text x="39.1689%" y="303.50"></text></g><g><title>0x10384206b (2 samples, 1.08%)</title><rect x="38.9189%" y="277" width="1.0811%" height="15" fill="rgb(249,206,44)" fg:x="72" fg:w="2"/><text x="39.1689%" y="287.50"></text></g><g><title>0x103842db7 (2 samples, 1.08%)</title><rect x="38.9189%" y="261" width="1.0811%" height="15" fill="rgb(251,153,30)" fg:x="72" fg:w="2"/><text x="39.1689%" y="271.50"></text></g><g><title>__open (2 samples, 1.08%)</title><rect x="38.9189%" y="245" width="1.0811%" height="15" fill="rgb(239,152,38)" fg:x="72" fg:w="2"/><text x="39.1689%" y="255.50"></text></g><g><title>0x102df1693 (1 samples, 0.54%)</title><rect x="40.0000%" y="373" width="0.5405%" height="15" fill="rgb(249,139,47)" fg:x="74" fg:w="1"/><text x="40.2500%" y="383.50"></text></g><g><title>_platform_memmove (1 samples, 0.54%)</title><rect x="40.0000%" y="357" width="0.5405%" height="15" fill="rgb(244,64,35)" fg:x="74" fg:w="1"/><text x="40.2500%" y="367.50"></text></g><g><title>0x103052c1b (5 samples, 2.70%)</title><rect x="38.3784%" y="453" width="2.7027%" height="15" fill="rgb(216,46,15)" fg:x="71" fg:w="5"/><text x="38.6284%" y="463.50">0x..</text></g><g><title>0x103052c1b (5 samples, 2.70%)</title><rect x="38.3784%" y="437" width="2.7027%" height="15" fill="rgb(250,74,19)" fg:x="71" fg:w="5"/><text x="38.6284%" y="447.50">0x..</text></g><g><title>0x103052c1b (5 samples, 2.70%)</title><rect x="38.3784%" y="421" width="2.7027%" height="15" fill="rgb(249,42,33)" fg:x="71" fg:w="5"/><text x="38.6284%" y="431.50">0x..</text></g><g><title>0x103052c1b (5 samples, 2.70%)</title><rect x="38.3784%" y="405" width="2.7027%" height="15" fill="rgb(242,149,17)" fg:x="71" fg:w="5"/><text x="38.6284%" y="415.50">0x..</text></g><g><title>core::ptr::drop_in_place&lt;dingo_test_runner::tester::tester::Tester&gt; (2 samples, 1.08%)</title><rect x="40.0000%" y="389" width="1.0811%" height="15" fill="rgb(244,29,21)" fg:x="74" fg:w="2"/><text x="40.2500%" y="399.50"></text></g><g><title>0x103046b77 (1 samples, 0.54%)</title><rect x="40.5405%" y="373" width="0.5405%" height="15" fill="rgb(220,130,37)" fg:x="75" fg:w="1"/><text x="40.7905%" y="383.50"></text></g><g><title>0x102e05e47 (1 samples, 0.54%)</title><rect x="40.5405%" y="357" width="0.5405%" height="15" fill="rgb(211,67,2)" fg:x="75" fg:w="1"/><text x="40.7905%" y="367.50"></text></g><g><title>0x1036e39d3 (1 samples, 0.54%)</title><rect x="40.5405%" y="341" width="0.5405%" height="15" fill="rgb(235,68,52)" fg:x="75" fg:w="1"/><text x="40.7905%" y="351.50"></text></g><g><title>0x1036e3b13 (1 samples, 0.54%)</title><rect x="40.5405%" y="325" width="0.5405%" height="15" fill="rgb(246,142,3)" fg:x="75" fg:w="1"/><text x="40.7905%" y="335.50"></text></g><g><title>0x10384206b (1 samples, 0.54%)</title><rect x="40.5405%" y="309" width="0.5405%" height="15" fill="rgb(241,25,7)" fg:x="75" fg:w="1"/><text x="40.7905%" y="319.50"></text></g><g><title>0x103842db7 (1 samples, 0.54%)</title><rect x="40.5405%" y="293" width="0.5405%" height="15" fill="rgb(242,119,39)" fg:x="75" fg:w="1"/><text x="40.7905%" y="303.50"></text></g><g><title>__open (1 samples, 0.54%)</title><rect x="40.5405%" y="277" width="0.5405%" height="15" fill="rgb(241,98,45)" fg:x="75" fg:w="1"/><text x="40.7905%" y="287.50"></text></g><g><title>0x103052c1b (6 samples, 3.24%)</title><rect x="38.3784%" y="469" width="3.2432%" height="15" fill="rgb(254,28,30)" fg:x="71" fg:w="6"/><text x="38.6284%" y="479.50">0x1..</text></g><g><title>core::ptr::drop_in_place&lt;dingo_test_runner::tester::tester::Tester&gt; (1 samples, 0.54%)</title><rect x="41.0811%" y="453" width="0.5405%" height="15" fill="rgb(241,142,54)" fg:x="76" fg:w="1"/><text x="41.3311%" y="463.50"></text></g><g><title>0x103046b77 (1 samples, 0.54%)</title><rect x="41.0811%" y="437" width="0.5405%" height="15" fill="rgb(222,85,15)" fg:x="76" fg:w="1"/><text x="41.3311%" y="447.50"></text></g><g><title>0x102e05e47 (1 samples, 0.54%)</title><rect x="41.0811%" y="421" width="0.5405%" height="15" fill="rgb(210,85,47)" fg:x="76" fg:w="1"/><text x="41.3311%" y="431.50"></text></g><g><title>0x1036e39d3 (1 samples, 0.54%)</title><rect x="41.0811%" y="405" width="0.5405%" height="15" fill="rgb(224,206,25)" fg:x="76" fg:w="1"/><text x="41.3311%" y="415.50"></text></g><g><title>0x1036e3b13 (1 samples, 0.54%)</title><rect x="41.0811%" y="389" width="0.5405%" height="15" fill="rgb(243,201,19)" fg:x="76" fg:w="1"/><text x="41.3311%" y="399.50"></text></g><g><title>0x10384206b (1 samples, 0.54%)</title><rect x="41.0811%" y="373" width="0.5405%" height="15" fill="rgb(236,59,4)" fg:x="76" fg:w="1"/><text x="41.3311%" y="383.50"></text></g><g><title>0x103842db7 (1 samples, 0.54%)</title><rect x="41.0811%" y="357" width="0.5405%" height="15" fill="rgb(254,179,45)" fg:x="76" fg:w="1"/><text x="41.3311%" y="367.50"></text></g><g><title>__open (1 samples, 0.54%)</title><rect x="41.0811%" y="341" width="0.5405%" height="15" fill="rgb(226,14,10)" fg:x="76" fg:w="1"/><text x="41.3311%" y="351.50"></text></g><g><title>0x103052c1b (8 samples, 4.32%)</title><rect x="38.3784%" y="485" width="4.3243%" height="15" fill="rgb(244,27,41)" fg:x="71" fg:w="8"/><text x="38.6284%" y="495.50">0x103..</text></g><g><title>core::ptr::drop_in_place&lt;dingo_test_runner::tester::tester::Tester&gt; (2 samples, 1.08%)</title><rect x="41.6216%" y="469" width="1.0811%" height="15" fill="rgb(235,35,32)" fg:x="77" fg:w="2"/><text x="41.8716%" y="479.50"></text></g><g><title>0x103046b77 (2 samples, 1.08%)</title><rect x="41.6216%" y="453" width="1.0811%" height="15" fill="rgb(218,68,31)" fg:x="77" fg:w="2"/><text x="41.8716%" y="463.50"></text></g><g><title>0x102e05e47 (2 samples, 1.08%)</title><rect x="41.6216%" y="437" width="1.0811%" height="15" fill="rgb(207,120,37)" fg:x="77" fg:w="2"/><text x="41.8716%" y="447.50"></text></g><g><title>0x1036e39d3 (2 samples, 1.08%)</title><rect x="41.6216%" y="421" width="1.0811%" height="15" fill="rgb(227,98,0)" fg:x="77" fg:w="2"/><text x="41.8716%" y="431.50"></text></g><g><title>0x1036e3b13 (2 samples, 1.08%)</title><rect x="41.6216%" y="405" width="1.0811%" height="15" fill="rgb(207,7,3)" fg:x="77" fg:w="2"/><text x="41.8716%" y="415.50"></text></g><g><title>0x10384206b (2 samples, 1.08%)</title><rect x="41.6216%" y="389" width="1.0811%" height="15" fill="rgb(206,98,19)" fg:x="77" fg:w="2"/><text x="41.8716%" y="399.50"></text></g><g><title>0x103842db7 (2 samples, 1.08%)</title><rect x="41.6216%" y="373" width="1.0811%" height="15" fill="rgb(217,5,26)" fg:x="77" fg:w="2"/><text x="41.8716%" y="383.50"></text></g><g><title>__open (2 samples, 1.08%)</title><rect x="41.6216%" y="357" width="1.0811%" height="15" fill="rgb(235,190,38)" fg:x="77" fg:w="2"/><text x="41.8716%" y="367.50"></text></g><g><title>0x102e023c7 (1 samples, 0.54%)</title><rect x="42.7027%" y="229" width="0.5405%" height="15" fill="rgb(247,86,24)" fg:x="79" fg:w="1"/><text x="42.9527%" y="239.50"></text></g><g><title>0x102e0110b (1 samples, 0.54%)</title><rect x="42.7027%" y="213" width="0.5405%" height="15" fill="rgb(205,101,16)" fg:x="79" fg:w="1"/><text x="42.9527%" y="223.50"></text></g><g><title>0x102e03777 (1 samples, 0.54%)</title><rect x="42.7027%" y="197" width="0.5405%" height="15" fill="rgb(246,168,33)" fg:x="79" fg:w="1"/><text x="42.9527%" y="207.50"></text></g><g><title>0x102dfd267 (1 samples, 0.54%)</title><rect x="42.7027%" y="181" width="0.5405%" height="15" fill="rgb(231,114,1)" fg:x="79" fg:w="1"/><text x="42.9527%" y="191.50"></text></g><g><title>0x102df9c63 (1 samples, 0.54%)</title><rect x="42.7027%" y="165" width="0.5405%" height="15" fill="rgb(207,184,53)" fg:x="79" fg:w="1"/><text x="42.9527%" y="175.50"></text></g><g><title>0x1036e3b13 (1 samples, 0.54%)</title><rect x="42.7027%" y="149" width="0.5405%" height="15" fill="rgb(224,95,51)" fg:x="79" fg:w="1"/><text x="42.9527%" y="159.50"></text></g><g><title>fstat (1 samples, 0.54%)</title><rect x="42.7027%" y="133" width="0.5405%" height="15" fill="rgb(212,188,45)" fg:x="79" fg:w="1"/><text x="42.9527%" y="143.50"></text></g><g><title>0x102e01843 (2 samples, 1.08%)</title><rect x="42.7027%" y="261" width="1.0811%" height="15" fill="rgb(223,154,38)" fg:x="79" fg:w="2"/><text x="42.9527%" y="271.50"></text></g><g><title>0x102e0110b (2 samples, 1.08%)</title><rect x="42.7027%" y="245" width="1.0811%" height="15" fill="rgb(251,22,52)" fg:x="79" fg:w="2"/><text x="42.9527%" y="255.50"></text></g><g><title>0x102e03777 (1 samples, 0.54%)</title><rect x="43.2432%" y="229" width="0.5405%" height="15" fill="rgb(229,209,22)" fg:x="80" fg:w="1"/><text x="43.4932%" y="239.50"></text></g><g><title>0x102dfd267 (1 samples, 0.54%)</title><rect x="43.2432%" y="213" width="0.5405%" height="15" fill="rgb(234,138,34)" fg:x="80" fg:w="1"/><text x="43.4932%" y="223.50"></text></g><g><title>0x102df9c63 (1 samples, 0.54%)</title><rect x="43.2432%" y="197" width="0.5405%" height="15" fill="rgb(212,95,11)" fg:x="80" fg:w="1"/><text x="43.4932%" y="207.50"></text></g><g><title>0x1036e3b13 (1 samples, 0.54%)</title><rect x="43.2432%" y="181" width="0.5405%" height="15" fill="rgb(240,179,47)" fg:x="80" fg:w="1"/><text x="43.4932%" y="191.50"></text></g><g><title>0x10384206b (1 samples, 0.54%)</title><rect x="43.2432%" y="165" width="0.5405%" height="15" fill="rgb(240,163,11)" fg:x="80" fg:w="1"/><text x="43.4932%" y="175.50"></text></g><g><title>0x103842db7 (1 samples, 0.54%)</title><rect x="43.2432%" y="149" width="0.5405%" height="15" fill="rgb(236,37,12)" fg:x="80" fg:w="1"/><text x="43.4932%" y="159.50"></text></g><g><title>__open (1 samples, 0.54%)</title><rect x="43.2432%" y="133" width="0.5405%" height="15" fill="rgb(232,164,16)" fg:x="80" fg:w="1"/><text x="43.4932%" y="143.50"></text></g><g><title>0x102e01843 (3 samples, 1.62%)</title><rect x="42.7027%" y="293" width="1.6216%" height="15" fill="rgb(244,205,15)" fg:x="79" fg:w="3"/><text x="42.9527%" y="303.50"></text></g><g><title>0x102e0110b (3 samples, 1.62%)</title><rect x="42.7027%" y="277" width="1.6216%" height="15" fill="rgb(223,117,47)" fg:x="79" fg:w="3"/><text x="42.9527%" y="287.50"></text></g><g><title>0x102e023c7 (1 samples, 0.54%)</title><rect x="43.7838%" y="261" width="0.5405%" height="15" fill="rgb(244,107,35)" fg:x="81" fg:w="1"/><text x="44.0338%" y="271.50"></text></g><g><title>0x102e0110b (1 samples, 0.54%)</title><rect x="43.7838%" y="245" width="0.5405%" height="15" fill="rgb(205,140,8)" fg:x="81" fg:w="1"/><text x="44.0338%" y="255.50"></text></g><g><title>0x102e03777 (1 samples, 0.54%)</title><rect x="43.7838%" y="229" width="0.5405%" height="15" fill="rgb(228,84,46)" fg:x="81" fg:w="1"/><text x="44.0338%" y="239.50"></text></g><g><title>0x102dfe00f (1 samples, 0.54%)</title><rect x="43.7838%" y="213" width="0.5405%" height="15" fill="rgb(254,188,9)" fg:x="81" fg:w="1"/><text x="44.0338%" y="223.50"></text></g><g><title>0x10328a8cb (1 samples, 0.54%)</title><rect x="43.7838%" y="197" width="0.5405%" height="15" fill="rgb(206,112,54)" fg:x="81" fg:w="1"/><text x="44.0338%" y="207.50"></text></g><g><title>0x103840fb3 (1 samples, 0.54%)</title><rect x="43.7838%" y="181" width="0.5405%" height="15" fill="rgb(216,84,49)" fg:x="81" fg:w="1"/><text x="44.0338%" y="191.50"></text></g><g><title>__private_getcwd (1 samples, 0.54%)</title><rect x="43.7838%" y="165" width="0.5405%" height="15" fill="rgb(214,194,35)" fg:x="81" fg:w="1"/><text x="44.0338%" y="175.50"></text></g><g><title>__getcwd (1 samples, 0.54%)</title><rect x="43.7838%" y="149" width="0.5405%" height="15" fill="rgb(249,28,3)" fg:x="81" fg:w="1"/><text x="44.0338%" y="159.50"></text></g><g><title>__open_nocancel (1 samples, 0.54%)</title><rect x="43.7838%" y="133" width="0.5405%" height="15" fill="rgb(222,56,52)" fg:x="81" fg:w="1"/><text x="44.0338%" y="143.50"></text></g><g><title>0x102e01843 (4 samples, 2.16%)</title><rect x="42.7027%" y="325" width="2.1622%" height="15" fill="rgb(245,217,50)" fg:x="79" fg:w="4"/><text x="42.9527%" y="335.50">0..</text></g><g><title>0x102e0110b (4 samples, 2.16%)</title><rect x="42.7027%" y="309" width="2.1622%" height="15" fill="rgb(213,201,24)" fg:x="79" fg:w="4"/><text x="42.9527%" y="319.50">0..</text></g><g><title>0x102e03777 (1 samples, 0.54%)</title><rect x="44.3243%" y="293" width="0.5405%" height="15" fill="rgb(248,116,28)" fg:x="82" fg:w="1"/><text x="44.5743%" y="303.50"></text></g><g><title>0x102dfd267 (1 samples, 0.54%)</title><rect x="44.3243%" y="277" width="0.5405%" height="15" fill="rgb(219,72,43)" fg:x="82" fg:w="1"/><text x="44.5743%" y="287.50"></text></g><g><title>0x102df9c63 (1 samples, 0.54%)</title><rect x="44.3243%" y="261" width="0.5405%" height="15" fill="rgb(209,138,14)" fg:x="82" fg:w="1"/><text x="44.5743%" y="271.50"></text></g><g><title>0x1036e3b13 (1 samples, 0.54%)</title><rect x="44.3243%" y="245" width="0.5405%" height="15" fill="rgb(222,18,33)" fg:x="82" fg:w="1"/><text x="44.5743%" y="255.50"></text></g><g><title>0x10384206b (1 samples, 0.54%)</title><rect x="44.3243%" y="229" width="0.5405%" height="15" fill="rgb(213,199,7)" fg:x="82" fg:w="1"/><text x="44.5743%" y="239.50"></text></g><g><title>0x103842db7 (1 samples, 0.54%)</title><rect x="44.3243%" y="213" width="0.5405%" height="15" fill="rgb(250,110,10)" fg:x="82" fg:w="1"/><text x="44.5743%" y="223.50"></text></g><g><title>__open (1 samples, 0.54%)</title><rect x="44.3243%" y="197" width="0.5405%" height="15" fill="rgb(248,123,6)" fg:x="82" fg:w="1"/><text x="44.5743%" y="207.50"></text></g><g><title>0x102e01843 (5 samples, 2.70%)</title><rect x="42.7027%" y="357" width="2.7027%" height="15" fill="rgb(206,91,31)" fg:x="79" fg:w="5"/><text x="42.9527%" y="367.50">0x..</text></g><g><title>0x102e0110b (5 samples, 2.70%)</title><rect x="42.7027%" y="341" width="2.7027%" height="15" fill="rgb(211,154,13)" fg:x="79" fg:w="5"/><text x="42.9527%" y="351.50">0x..</text></g><g><title>0x102e03777 (1 samples, 0.54%)</title><rect x="44.8649%" y="325" width="0.5405%" height="15" fill="rgb(225,148,7)" fg:x="83" fg:w="1"/><text x="45.1149%" y="335.50"></text></g><g><title>0x102dfe00f (1 samples, 0.54%)</title><rect x="44.8649%" y="309" width="0.5405%" height="15" fill="rgb(220,160,43)" fg:x="83" fg:w="1"/><text x="45.1149%" y="319.50"></text></g><g><title>0x10328a8cb (1 samples, 0.54%)</title><rect x="44.8649%" y="293" width="0.5405%" height="15" fill="rgb(213,52,39)" fg:x="83" fg:w="1"/><text x="45.1149%" y="303.50"></text></g><g><title>0x103840fb3 (1 samples, 0.54%)</title><rect x="44.8649%" y="277" width="0.5405%" height="15" fill="rgb(243,137,7)" fg:x="83" fg:w="1"/><text x="45.1149%" y="287.50"></text></g><g><title>__private_getcwd (1 samples, 0.54%)</title><rect x="44.8649%" y="261" width="0.5405%" height="15" fill="rgb(230,79,13)" fg:x="83" fg:w="1"/><text x="45.1149%" y="271.50"></text></g><g><title>__getcwd (1 samples, 0.54%)</title><rect x="44.8649%" y="245" width="0.5405%" height="15" fill="rgb(247,105,23)" fg:x="83" fg:w="1"/><text x="45.1149%" y="255.50"></text></g><g><title>__open_nocancel (1 samples, 0.54%)</title><rect x="44.8649%" y="229" width="0.5405%" height="15" fill="rgb(223,179,41)" fg:x="83" fg:w="1"/><text x="45.1149%" y="239.50"></text></g><g><title>0x102e01843 (6 samples, 3.24%)</title><rect x="42.7027%" y="389" width="3.2432%" height="15" fill="rgb(218,9,34)" fg:x="79" fg:w="6"/><text x="42.9527%" y="399.50">0x1..</text></g><g><title>0x102e0110b (6 samples, 3.24%)</title><rect x="42.7027%" y="373" width="3.2432%" height="15" fill="rgb(222,106,8)" fg:x="79" fg:w="6"/><text x="42.9527%" y="383.50">0x1..</text></g><g><title>0x102e03777 (1 samples, 0.54%)</title><rect x="45.4054%" y="357" width="0.5405%" height="15" fill="rgb(211,220,0)" fg:x="84" fg:w="1"/><text x="45.6554%" y="367.50"></text></g><g><title>0x102dfd267 (1 samples, 0.54%)</title><rect x="45.4054%" y="341" width="0.5405%" height="15" fill="rgb(229,52,16)" fg:x="84" fg:w="1"/><text x="45.6554%" y="351.50"></text></g><g><title>0x102df9c63 (1 samples, 0.54%)</title><rect x="45.4054%" y="325" width="0.5405%" height="15" fill="rgb(212,155,18)" fg:x="84" fg:w="1"/><text x="45.6554%" y="335.50"></text></g><g><title>0x1036e3b13 (1 samples, 0.54%)</title><rect x="45.4054%" y="309" width="0.5405%" height="15" fill="rgb(242,21,14)" fg:x="84" fg:w="1"/><text x="45.6554%" y="319.50"></text></g><g><title>fstat (1 samples, 0.54%)</title><rect x="45.4054%" y="293" width="0.5405%" height="15" fill="rgb(222,19,48)" fg:x="84" fg:w="1"/><text x="45.6554%" y="303.50"></text></g><g><title>0x102e01843 (9 samples, 4.86%)</title><rect x="42.7027%" y="421" width="4.8649%" height="15" fill="rgb(232,45,27)" fg:x="79" fg:w="9"/><text x="42.9527%" y="431.50">0x102e..</text></g><g><title>0x102e0110b (9 samples, 4.86%)</title><rect x="42.7027%" y="405" width="4.8649%" height="15" fill="rgb(249,103,42)" fg:x="79" fg:w="9"/><text x="42.9527%" y="415.50">0x102e..</text></g><g><title>0x102e03777 (3 samples, 1.62%)</title><rect x="45.9459%" y="389" width="1.6216%" height="15" fill="rgb(246,81,33)" fg:x="85" fg:w="3"/><text x="46.1959%" y="399.50"></text></g><g><title>0x102dfd267 (3 samples, 1.62%)</title><rect x="45.9459%" y="373" width="1.6216%" height="15" fill="rgb(252,33,42)" fg:x="85" fg:w="3"/><text x="46.1959%" y="383.50"></text></g><g><title>0x102df9c63 (3 samples, 1.62%)</title><rect x="45.9459%" y="357" width="1.6216%" height="15" fill="rgb(209,212,41)" fg:x="85" fg:w="3"/><text x="46.1959%" y="367.50"></text></g><g><title>0x1036e3b13 (3 samples, 1.62%)</title><rect x="45.9459%" y="341" width="1.6216%" height="15" fill="rgb(207,154,6)" fg:x="85" fg:w="3"/><text x="46.1959%" y="351.50"></text></g><g><title>0x10384206b (3 samples, 1.62%)</title><rect x="45.9459%" y="325" width="1.6216%" height="15" fill="rgb(223,64,47)" fg:x="85" fg:w="3"/><text x="46.1959%" y="335.50"></text></g><g><title>0x103842db7 (3 samples, 1.62%)</title><rect x="45.9459%" y="309" width="1.6216%" height="15" fill="rgb(211,161,38)" fg:x="85" fg:w="3"/><text x="46.1959%" y="319.50"></text></g><g><title>__open (3 samples, 1.62%)</title><rect x="45.9459%" y="293" width="1.6216%" height="15" fill="rgb(219,138,40)" fg:x="85" fg:w="3"/><text x="46.1959%" y="303.50"></text></g><g><title>0x103040d63 (18 samples, 9.73%)</title><rect x="38.3784%" y="501" width="9.7297%" height="15" fill="rgb(241,228,46)" fg:x="71" fg:w="18"/><text x="38.6284%" y="511.50">0x103040d63</text></g><g><title>core::ptr::drop_in_place&lt;dingo_test_runner::tester::tester::Tester&gt; (10 samples, 5.41%)</title><rect x="42.7027%" y="485" width="5.4054%" height="15" fill="rgb(223,209,38)" fg:x="79" fg:w="10"/><text x="42.9527%" y="495.50">core::p..</text></g><g><title>0x103046603 (10 samples, 5.41%)</title><rect x="42.7027%" y="469" width="5.4054%" height="15" fill="rgb(236,164,45)" fg:x="79" fg:w="10"/><text x="42.9527%" y="479.50">0x10304..</text></g><g><title>0x102e01843 (10 samples, 5.41%)</title><rect x="42.7027%" y="453" width="5.4054%" height="15" fill="rgb(231,15,5)" fg:x="79" fg:w="10"/><text x="42.9527%" y="463.50">0x102e0..</text></g><g><title>0x102e0110b (10 samples, 5.41%)</title><rect x="42.7027%" y="437" width="5.4054%" height="15" fill="rgb(252,35,15)" fg:x="79" fg:w="10"/><text x="42.9527%" y="447.50">0x102e0..</text></g><g><title>0x102e03777 (1 samples, 0.54%)</title><rect x="47.5676%" y="421" width="0.5405%" height="15" fill="rgb(248,181,18)" fg:x="88" fg:w="1"/><text x="47.8176%" y="431.50"></text></g><g><title>0x102dfd267 (1 samples, 0.54%)</title><rect x="47.5676%" y="405" width="0.5405%" height="15" fill="rgb(233,39,42)" fg:x="88" fg:w="1"/><text x="47.8176%" y="415.50"></text></g><g><title>0x102df9c63 (1 samples, 0.54%)</title><rect x="47.5676%" y="389" width="0.5405%" height="15" fill="rgb(238,110,33)" fg:x="88" fg:w="1"/><text x="47.8176%" y="399.50"></text></g><g><title>0x1036e3b13 (1 samples, 0.54%)</title><rect x="47.5676%" y="373" width="0.5405%" height="15" fill="rgb(233,195,10)" fg:x="88" fg:w="1"/><text x="47.8176%" y="383.50"></text></g><g><title>0x10384213b (1 samples, 0.54%)</title><rect x="47.5676%" y="357" width="0.5405%" height="15" fill="rgb(254,105,3)" fg:x="88" fg:w="1"/><text x="47.8176%" y="367.50"></text></g><g><title>read (1 samples, 0.54%)</title><rect x="47.5676%" y="341" width="0.5405%" height="15" fill="rgb(221,225,9)" fg:x="88" fg:w="1"/><text x="47.8176%" y="351.50"></text></g><g><title>0x1030486e3 (1 samples, 0.54%)</title><rect x="48.1081%" y="485" width="0.5405%" height="15" fill="rgb(224,227,45)" fg:x="89" fg:w="1"/><text x="48.3581%" y="495.50"></text></g><g><title>0x1036f2a23 (1 samples, 0.54%)</title><rect x="48.1081%" y="469" width="0.5405%" height="15" fill="rgb(229,198,43)" fg:x="89" fg:w="1"/><text x="48.3581%" y="479.50"></text></g><g><title>0x1038510df (1 samples, 0.54%)</title><rect x="48.1081%" y="453" width="0.5405%" height="15" fill="rgb(206,209,35)" fg:x="89" fg:w="1"/><text x="48.3581%" y="463.50"></text></g><g><title>__bsdthread_create (1 samples, 0.54%)</title><rect x="48.1081%" y="437" width="0.5405%" height="15" fill="rgb(245,195,53)" fg:x="89" fg:w="1"/><text x="48.3581%" y="447.50"></text></g><g><title>0x102ce757b (1 samples, 0.54%)</title><rect x="48.6486%" y="421" width="0.5405%" height="15" fill="rgb(240,92,26)" fg:x="90" fg:w="1"/><text x="48.8986%" y="431.50"></text></g><g><title>0x102ce8b93 (1 samples, 0.54%)</title><rect x="48.6486%" y="405" width="0.5405%" height="15" fill="rgb(207,40,23)" fg:x="90" fg:w="1"/><text x="48.8986%" y="415.50"></text></g><g><title>stat (1 samples, 0.54%)</title><rect x="48.6486%" y="389" width="0.5405%" height="15" fill="rgb(223,111,35)" fg:x="90" fg:w="1"/><text x="48.8986%" y="399.50"></text></g><g><title>0x102ce7bdf (1 samples, 0.54%)</title><rect x="49.1892%" y="405" width="0.5405%" height="15" fill="rgb(229,147,28)" fg:x="91" fg:w="1"/><text x="49.4392%" y="415.50"></text></g><g><title>stat (1 samples, 0.54%)</title><rect x="49.1892%" y="389" width="0.5405%" height="15" fill="rgb(211,29,28)" fg:x="91" fg:w="1"/><text x="49.4392%" y="399.50"></text></g><g><title>0x1036e5a4f (1 samples, 0.54%)</title><rect x="49.7297%" y="389" width="0.5405%" height="15" fill="rgb(228,72,33)" fg:x="92" fg:w="1"/><text x="49.9797%" y="399.50"></text></g><g><title>0x103842db7 (1 samples, 0.54%)</title><rect x="49.7297%" y="373" width="0.5405%" height="15" fill="rgb(205,214,31)" fg:x="92" fg:w="1"/><text x="49.9797%" y="383.50"></text></g><g><title>__open (1 samples, 0.54%)</title><rect x="49.7297%" y="357" width="0.5405%" height="15" fill="rgb(224,111,15)" fg:x="92" fg:w="1"/><text x="49.9797%" y="367.50"></text></g><g><title>0x1036e5ad3 (2 samples, 1.08%)</title><rect x="50.2703%" y="389" width="1.0811%" height="15" fill="rgb(253,21,26)" fg:x="93" fg:w="2"/><text x="50.5203%" y="399.50"></text></g><g><title>0x103842db7 (2 samples, 1.08%)</title><rect x="50.2703%" y="373" width="1.0811%" height="15" fill="rgb(245,139,43)" fg:x="93" fg:w="2"/><text x="50.5203%" y="383.50"></text></g><g><title>__open (2 samples, 1.08%)</title><rect x="50.2703%" y="357" width="1.0811%" height="15" fill="rgb(252,170,7)" fg:x="93" fg:w="2"/><text x="50.5203%" y="367.50"></text></g><g><title>0x1036e5c8f (1 samples, 0.54%)</title><rect x="51.3514%" y="389" width="0.5405%" height="15" fill="rgb(231,118,14)" fg:x="95" fg:w="1"/><text x="51.6014%" y="399.50"></text></g><g><title>0x1036e5773 (1 samples, 0.54%)</title><rect x="51.3514%" y="373" width="0.5405%" height="15" fill="rgb(238,83,0)" fg:x="95" fg:w="1"/><text x="51.6014%" y="383.50"></text></g><g><title>0x103852243 (1 samples, 0.54%)</title><rect x="51.3514%" y="357" width="0.5405%" height="15" fill="rgb(221,39,39)" fg:x="95" fg:w="1"/><text x="51.6014%" y="367.50"></text></g><g><title>__unlink (1 samples, 0.54%)</title><rect x="51.3514%" y="341" width="0.5405%" height="15" fill="rgb(222,119,46)" fg:x="95" fg:w="1"/><text x="51.6014%" y="351.50"></text></g><g><title>0x103040e0b (10 samples, 5.41%)</title><rect x="48.1081%" y="501" width="5.4054%" height="15" fill="rgb(222,165,49)" fg:x="89" fg:w="10"/><text x="48.3581%" y="511.50">0x10304..</text></g><g><title>0x103048cbb (9 samples, 4.86%)</title><rect x="48.6486%" y="485" width="4.8649%" height="15" fill="rgb(219,113,52)" fg:x="90" fg:w="9"/><text x="48.8986%" y="495.50">0x1030..</text></g><g><title>0x102e130f7 (9 samples, 4.86%)</title><rect x="48.6486%" y="469" width="4.8649%" height="15" fill="rgb(214,7,15)" fg:x="90" fg:w="9"/><text x="48.8986%" y="479.50">0x102e..</text></g><g><title>0x102e0e01b (9 samples, 4.86%)</title><rect x="48.6486%" y="453" width="4.8649%" height="15" fill="rgb(235,32,4)" fg:x="90" fg:w="9"/><text x="48.8986%" y="463.50">0x102e..</text></g><g><title>0x102ce757b (9 samples, 4.86%)</title><rect x="48.6486%" y="437" width="4.8649%" height="15" fill="rgb(238,90,54)" fg:x="90" fg:w="9"/><text x="48.8986%" y="447.50">0x102c..</text></g><g><title>0x102ce75e7 (8 samples, 4.32%)</title><rect x="49.1892%" y="421" width="4.3243%" height="15" fill="rgb(213,208,19)" fg:x="91" fg:w="8"/><text x="49.4392%" y="431.50">0x102..</text></g><g><title>0x102ce7d3b (7 samples, 3.78%)</title><rect x="49.7297%" y="405" width="3.7838%" height="15" fill="rgb(233,156,4)" fg:x="92" fg:w="7"/><text x="49.9797%" y="415.50">0x10..</text></g><g><title>0x1036e5d1f (3 samples, 1.62%)</title><rect x="51.8919%" y="389" width="1.6216%" height="15" fill="rgb(207,194,5)" fg:x="96" fg:w="3"/><text x="52.1419%" y="399.50"></text></g><g><title>fclonefileat (3 samples, 1.62%)</title><rect x="51.8919%" y="373" width="1.6216%" height="15" fill="rgb(206,111,30)" fg:x="96" fg:w="3"/><text x="52.1419%" y="383.50"></text></g><g><title>0x10307881b (32 samples, 17.30%)</title><rect x="36.7568%" y="517" width="17.2973%" height="15" fill="rgb(243,70,54)" fg:x="68" fg:w="32"/><text x="37.0068%" y="527.50">0x10307881b</text></g><g><title>0x103041d5f (1 samples, 0.54%)</title><rect x="53.5135%" y="501" width="0.5405%" height="15" fill="rgb(242,28,8)" fg:x="99" fg:w="1"/><text x="53.7635%" y="511.50"></text></g><g><title>0x102b04b13 (1 samples, 0.54%)</title><rect x="53.5135%" y="485" width="0.5405%" height="15" fill="rgb(219,106,18)" fg:x="99" fg:w="1"/><text x="53.7635%" y="495.50"></text></g><g><title>0x102d2b5d3 (1 samples, 0.54%)</title><rect x="53.5135%" y="469" width="0.5405%" height="15" fill="rgb(244,222,10)" fg:x="99" fg:w="1"/><text x="53.7635%" y="479.50"></text></g><g><title>0x102b2188b (1 samples, 0.54%)</title><rect x="53.5135%" y="453" width="0.5405%" height="15" fill="rgb(236,179,52)" fg:x="99" fg:w="1"/><text x="53.7635%" y="463.50"></text></g><g><title>0x102d2b5d3 (1 samples, 0.54%)</title><rect x="53.5135%" y="437" width="0.5405%" height="15" fill="rgb(213,23,39)" fg:x="99" fg:w="1"/><text x="53.7635%" y="447.50"></text></g><g><title>0x102b2188b (1 samples, 0.54%)</title><rect x="53.5135%" y="421" width="0.5405%" height="15" fill="rgb(238,48,10)" fg:x="99" fg:w="1"/><text x="53.7635%" y="431.50"></text></g><g><title>0x102d2b5d3 (1 samples, 0.54%)</title><rect x="53.5135%" y="405" width="0.5405%" height="15" fill="rgb(251,196,23)" fg:x="99" fg:w="1"/><text x="53.7635%" y="415.50"></text></g><g><title>0x102b2188b (1 samples, 0.54%)</title><rect x="53.5135%" y="389" width="0.5405%" height="15" fill="rgb(250,152,24)" fg:x="99" fg:w="1"/><text x="53.7635%" y="399.50"></text></g><g><title>0x102d2b5d3 (1 samples, 0.54%)</title><rect x="53.5135%" y="373" width="0.5405%" height="15" fill="rgb(209,150,17)" fg:x="99" fg:w="1"/><text x="53.7635%" y="383.50"></text></g><g><title>0x102b2182b (1 samples, 0.54%)</title><rect x="53.5135%" y="357" width="0.5405%" height="15" fill="rgb(234,202,34)" fg:x="99" fg:w="1"/><text x="53.7635%" y="367.50"></text></g><g><title>_platform_memset (1 samples, 0.54%)</title><rect x="53.5135%" y="341" width="0.5405%" height="15" fill="rgb(253,148,53)" fg:x="99" fg:w="1"/><text x="53.7635%" y="351.50"></text></g><g><title>0x103078823 (1 samples, 0.54%)</title><rect x="54.0541%" y="517" width="0.5405%" height="15" fill="rgb(218,129,16)" fg:x="100" fg:w="1"/><text x="54.3041%" y="527.50"></text></g><g><title>0x102b22c5f (1 samples, 0.54%)</title><rect x="54.0541%" y="501" width="0.5405%" height="15" fill="rgb(216,85,19)" fg:x="100" fg:w="1"/><text x="54.3041%" y="511.50"></text></g><g><title>0x102b1925f (1 samples, 0.54%)</title><rect x="54.0541%" y="485" width="0.5405%" height="15" fill="rgb(235,228,7)" fg:x="100" fg:w="1"/><text x="54.3041%" y="495.50"></text></g><g><title>0x102ae4c57 (1 samples, 0.54%)</title><rect x="54.0541%" y="469" width="0.5405%" height="15" fill="rgb(245,175,0)" fg:x="100" fg:w="1"/><text x="54.3041%" y="479.50"></text></g><g><title>0x102b1e18b (1 samples, 0.54%)</title><rect x="54.0541%" y="453" width="0.5405%" height="15" fill="rgb(208,168,36)" fg:x="100" fg:w="1"/><text x="54.3041%" y="463.50"></text></g><g><title>0x102b1e0e7 (1 samples, 0.54%)</title><rect x="54.0541%" y="437" width="0.5405%" height="15" fill="rgb(246,171,24)" fg:x="100" fg:w="1"/><text x="54.3041%" y="447.50"></text></g><g><title>0x102b25ffb (1 samples, 0.54%)</title><rect x="54.0541%" y="421" width="0.5405%" height="15" fill="rgb(215,142,24)" fg:x="100" fg:w="1"/><text x="54.3041%" y="431.50"></text></g><g><title>0x102b26353 (1 samples, 0.54%)</title><rect x="54.0541%" y="405" width="0.5405%" height="15" fill="rgb(250,187,7)" fg:x="100" fg:w="1"/><text x="54.3041%" y="415.50"></text></g><g><title>free_medium (1 samples, 0.54%)</title><rect x="54.0541%" y="389" width="0.5405%" height="15" fill="rgb(228,66,33)" fg:x="100" fg:w="1"/><text x="54.3041%" y="399.50"></text></g><g><title>madvise (1 samples, 0.54%)</title><rect x="54.0541%" y="373" width="0.5405%" height="15" fill="rgb(234,215,21)" fg:x="100" fg:w="1"/><text x="54.3041%" y="383.50"></text></g><g><title>0x102b1a7ff (1 samples, 0.54%)</title><rect x="54.5946%" y="453" width="0.5405%" height="15" fill="rgb(222,191,20)" fg:x="101" fg:w="1"/><text x="54.8446%" y="463.50"></text></g><g><title>0x102d0e6df (1 samples, 0.54%)</title><rect x="54.5946%" y="437" width="0.5405%" height="15" fill="rgb(245,79,54)" fg:x="101" fg:w="1"/><text x="54.8446%" y="447.50"></text></g><g><title>free_small (1 samples, 0.54%)</title><rect x="54.5946%" y="421" width="0.5405%" height="15" fill="rgb(240,10,37)" fg:x="101" fg:w="1"/><text x="54.8446%" y="431.50"></text></g><g><title>small_free_scan_madvise_free (1 samples, 0.54%)</title><rect x="54.5946%" y="405" width="0.5405%" height="15" fill="rgb(214,192,32)" fg:x="101" fg:w="1"/><text x="54.8446%" y="415.50"></text></g><g><title>madvise (1 samples, 0.54%)</title><rect x="54.5946%" y="389" width="0.5405%" height="15" fill="rgb(209,36,54)" fg:x="101" fg:w="1"/><text x="54.8446%" y="399.50"></text></g><g><title>0x102b1a81b (1 samples, 0.54%)</title><rect x="55.1351%" y="453" width="0.5405%" height="15" fill="rgb(220,10,11)" fg:x="102" fg:w="1"/><text x="55.3851%" y="463.50"></text></g><g><title>0x102d0d31b (1 samples, 0.54%)</title><rect x="55.1351%" y="437" width="0.5405%" height="15" fill="rgb(221,106,17)" fg:x="102" fg:w="1"/><text x="55.3851%" y="447.50"></text></g><g><title>0x102ae52fb (1 samples, 0.54%)</title><rect x="55.1351%" y="421" width="0.5405%" height="15" fill="rgb(251,142,44)" fg:x="102" fg:w="1"/><text x="55.3851%" y="431.50"></text></g><g><title>0x102ae5c5b (1 samples, 0.54%)</title><rect x="55.1351%" y="405" width="0.5405%" height="15" fill="rgb(238,13,15)" fg:x="102" fg:w="1"/><text x="55.3851%" y="415.50"></text></g><g><title>0x102ae5c5b (1 samples, 0.54%)</title><rect x="55.1351%" y="389" width="0.5405%" height="15" fill="rgb(208,107,27)" fg:x="102" fg:w="1"/><text x="55.3851%" y="399.50"></text></g><g><title>free_small (1 samples, 0.54%)</title><rect x="55.1351%" y="373" width="0.5405%" height="15" fill="rgb(205,136,37)" fg:x="102" fg:w="1"/><text x="55.3851%" y="383.50"></text></g><g><title>small_madvise_free_range_no_lock (1 samples, 0.54%)</title><rect x="55.1351%" y="357" width="0.5405%" height="15" fill="rgb(250,205,27)" fg:x="102" fg:w="1"/><text x="55.3851%" y="367.50"></text></g><g><title>madvise (1 samples, 0.54%)</title><rect x="55.1351%" y="341" width="0.5405%" height="15" fill="rgb(210,80,43)" fg:x="102" fg:w="1"/><text x="55.3851%" y="351.50"></text></g><g><title>0x102b1a873 (1 samples, 0.54%)</title><rect x="55.6757%" y="453" width="0.5405%" height="15" fill="rgb(247,160,36)" fg:x="103" fg:w="1"/><text x="55.9257%" y="463.50"></text></g><g><title>0x102d2b4df (1 samples, 0.54%)</title><rect x="55.6757%" y="437" width="0.5405%" height="15" fill="rgb(234,13,49)" fg:x="103" fg:w="1"/><text x="55.9257%" y="447.50"></text></g><g><title>0x102b19b9f (1 samples, 0.54%)</title><rect x="55.6757%" y="421" width="0.5405%" height="15" fill="rgb(234,122,0)" fg:x="103" fg:w="1"/><text x="55.9257%" y="431.50"></text></g><g><title>0x102ae8553 (1 samples, 0.54%)</title><rect x="55.6757%" y="405" width="0.5405%" height="15" fill="rgb(207,146,38)" fg:x="103" fg:w="1"/><text x="55.9257%" y="415.50"></text></g><g><title>free_tiny (1 samples, 0.54%)</title><rect x="55.6757%" y="389" width="0.5405%" height="15" fill="rgb(207,177,25)" fg:x="103" fg:w="1"/><text x="55.9257%" y="399.50"></text></g><g><title>tiny_free_no_lock (1 samples, 0.54%)</title><rect x="55.6757%" y="373" width="0.5405%" height="15" fill="rgb(211,178,42)" fg:x="103" fg:w="1"/><text x="55.9257%" y="383.50"></text></g><g><title>tiny_free_list_remove_ptr (1 samples, 0.54%)</title><rect x="55.6757%" y="357" width="0.5405%" height="15" fill="rgb(230,69,54)" fg:x="103" fg:w="1"/><text x="55.9257%" y="367.50"></text></g><g><title>0x102a3f61f (104 samples, 56.22%)</title><rect x="0.5405%" y="677" width="56.2162%" height="15" fill="rgb(214,135,41)" fg:x="1" fg:w="104"/><text x="0.7905%" y="687.50">0x102a3f61f</text></g><g><title>0x10383f34b (104 samples, 56.22%)</title><rect x="0.5405%" y="661" width="56.2162%" height="15" fill="rgb(237,67,25)" fg:x="1" fg:w="104"/><text x="0.7905%" y="671.50">0x10383f34b</text></g><g><title>0x1029d766b (104 samples, 56.22%)</title><rect x="0.5405%" y="645" width="56.2162%" height="15" fill="rgb(222,189,50)" fg:x="1" fg:w="104"/><text x="0.7905%" y="655.50">0x1029d766b</text></g><g><title>0x1029c81cf (104 samples, 56.22%)</title><rect x="0.5405%" y="629" width="56.2162%" height="15" fill="rgb(245,148,34)" fg:x="1" fg:w="104"/><text x="0.7905%" y="639.50">0x1029c81cf</text></g><g><title>0x102a34ae3 (102 samples, 55.14%)</title><rect x="1.6216%" y="613" width="55.1351%" height="15" fill="rgb(222,29,6)" fg:x="3" fg:w="102"/><text x="1.8716%" y="623.50">0x102a34ae3</text></g><g><title>0x102a3ca3b (102 samples, 55.14%)</title><rect x="1.6216%" y="597" width="55.1351%" height="15" fill="rgb(221,189,43)" fg:x="3" fg:w="102"/><text x="1.8716%" y="607.50">0x102a3ca3b</text></g><g><title>0x102a29bcb (102 samples, 55.14%)</title><rect x="1.6216%" y="581" width="55.1351%" height="15" fill="rgb(207,36,27)" fg:x="3" fg:w="102"/><text x="1.8716%" y="591.50">0x102a29bcb</text></g><g><title>0x102eff25f (102 samples, 55.14%)</title><rect x="1.6216%" y="565" width="55.1351%" height="15" fill="rgb(217,90,24)" fg:x="3" fg:w="102"/><text x="1.8716%" y="575.50">0x102eff25f</text></g><g><title>0x102eca91f (102 samples, 55.14%)</title><rect x="1.6216%" y="549" width="55.1351%" height="15" fill="rgb(224,66,35)" fg:x="3" fg:w="102"/><text x="1.8716%" y="559.50">0x102eca91f</text></g><g><title>0x102eca9df (102 samples, 55.14%)</title><rect x="1.6216%" y="533" width="55.1351%" height="15" fill="rgb(221,13,50)" fg:x="3" fg:w="102"/><text x="1.8716%" y="543.50">0x102eca9df</text></g><g><title>0x1030788a3 (4 samples, 2.16%)</title><rect x="54.5946%" y="517" width="2.1622%" height="15" fill="rgb(236,68,49)" fg:x="101" fg:w="4"/><text x="54.8446%" y="527.50">0..</text></g><g><title>0x102d0e82b (4 samples, 2.16%)</title><rect x="54.5946%" y="501" width="2.1622%" height="15" fill="rgb(229,146,28)" fg:x="101" fg:w="4"/><text x="54.8446%" y="511.50">0..</text></g><g><title>0x102b22f2b (4 samples, 2.16%)</title><rect x="54.5946%" y="485" width="2.1622%" height="15" fill="rgb(225,31,38)" fg:x="101" fg:w="4"/><text x="54.8446%" y="495.50">0..</text></g><g><title>0x102d0e79b (4 samples, 2.16%)</title><rect x="54.5946%" y="469" width="2.1622%" height="15" fill="rgb(250,208,3)" fg:x="101" fg:w="4"/><text x="54.8446%" y="479.50">0..</text></g><g><title>free_tiny (1 samples, 0.54%)</title><rect x="56.2162%" y="453" width="0.5405%" height="15" fill="rgb(246,54,23)" fg:x="104" fg:w="1"/><text x="56.4662%" y="463.50"></text></g><g><title>tiny_free_no_lock (1 samples, 0.54%)</title><rect x="56.2162%" y="437" width="0.5405%" height="15" fill="rgb(243,76,11)" fg:x="104" fg:w="1"/><text x="56.4662%" y="447.50"></text></g><g><title>mvm_deallocate_plat (1 samples, 0.54%)</title><rect x="56.2162%" y="421" width="0.5405%" height="15" fill="rgb(245,21,50)" fg:x="104" fg:w="1"/><text x="56.4662%" y="431.50"></text></g><g><title>_kernelrpc_mach_vm_deallocate_trap (1 samples, 0.54%)</title><rect x="56.2162%" y="405" width="0.5405%" height="15" fill="rgb(228,9,43)" fg:x="104" fg:w="1"/><text x="56.4662%" y="415.50"></text></g><g><title>0x102cb1b6f (1 samples, 0.54%)</title><rect x="56.7568%" y="629" width="0.5405%" height="15" fill="rgb(208,100,47)" fg:x="105" fg:w="1"/><text x="57.0068%" y="639.50"></text></g><g><title>0x102f6395b (1 samples, 0.54%)</title><rect x="56.7568%" y="613" width="0.5405%" height="15" fill="rgb(232,26,8)" fg:x="105" fg:w="1"/><text x="57.0068%" y="623.50"></text></g><g><title>0x102f64283 (1 samples, 0.54%)</title><rect x="56.7568%" y="597" width="0.5405%" height="15" fill="rgb(216,166,38)" fg:x="105" fg:w="1"/><text x="57.0068%" y="607.50"></text></g><g><title>0x1030e161f (1 samples, 0.54%)</title><rect x="56.7568%" y="581" width="0.5405%" height="15" fill="rgb(251,202,51)" fg:x="105" fg:w="1"/><text x="57.0068%" y="591.50"></text></g><g><title>0x1032ab72b (1 samples, 0.54%)</title><rect x="56.7568%" y="565" width="0.5405%" height="15" fill="rgb(254,216,34)" fg:x="105" fg:w="1"/><text x="57.0068%" y="575.50"></text></g><g><title>0x102d8bad3 (1 samples, 0.54%)</title><rect x="56.7568%" y="549" width="0.5405%" height="15" fill="rgb(251,32,27)" fg:x="105" fg:w="1"/><text x="57.0068%" y="559.50"></text></g><g><title>0x1030e518b (1 samples, 0.54%)</title><rect x="56.7568%" y="533" width="0.5405%" height="15" fill="rgb(208,127,28)" fg:x="105" fg:w="1"/><text x="57.0068%" y="543.50"></text></g><g><title>0x1030e5583 (1 samples, 0.54%)</title><rect x="56.7568%" y="517" width="0.5405%" height="15" fill="rgb(224,137,22)" fg:x="105" fg:w="1"/><text x="57.0068%" y="527.50"></text></g><g><title>0x102da8d77 (1 samples, 0.54%)</title><rect x="56.7568%" y="501" width="0.5405%" height="15" fill="rgb(254,70,32)" fg:x="105" fg:w="1"/><text x="57.0068%" y="511.50"></text></g><g><title>0x102dc51f7 (1 samples, 0.54%)</title><rect x="56.7568%" y="485" width="0.5405%" height="15" fill="rgb(229,75,37)" fg:x="105" fg:w="1"/><text x="57.0068%" y="495.50"></text></g><g><title>0x102e37e53 (1 samples, 0.54%)</title><rect x="56.7568%" y="469" width="0.5405%" height="15" fill="rgb(252,64,23)" fg:x="105" fg:w="1"/><text x="57.0068%" y="479.50"></text></g><g><title>0x102e40b7b (1 samples, 0.54%)</title><rect x="56.7568%" y="453" width="0.5405%" height="15" fill="rgb(232,162,48)" fg:x="105" fg:w="1"/><text x="57.0068%" y="463.50"></text></g><g><title>0x102e41771 (1 samples, 0.54%)</title><rect x="56.7568%" y="437" width="0.5405%" height="15" fill="rgb(246,160,12)" fg:x="105" fg:w="1"/><text x="57.0068%" y="447.50"></text></g><g><title>0x102c5817f (1 samples, 0.54%)</title><rect x="57.2973%" y="581" width="0.5405%" height="15" fill="rgb(247,166,0)" fg:x="106" fg:w="1"/><text x="57.5473%" y="591.50"></text></g><g><title>0x103046d9b (1 samples, 0.54%)</title><rect x="57.2973%" y="565" width="0.5405%" height="15" fill="rgb(249,219,21)" fg:x="106" fg:w="1"/><text x="57.5473%" y="575.50"></text></g><g><title>0x10304888f (1 samples, 0.54%)</title><rect x="57.2973%" y="549" width="0.5405%" height="15" fill="rgb(205,209,3)" fg:x="106" fg:w="1"/><text x="57.5473%" y="559.50"></text></g><g><title>0x103044ad7 (1 samples, 0.54%)</title><rect x="57.2973%" y="533" width="0.5405%" height="15" fill="rgb(243,44,1)" fg:x="106" fg:w="1"/><text x="57.5473%" y="543.50"></text></g><g><title>0x102f8bdcf (1 samples, 0.54%)</title><rect x="57.2973%" y="517" width="0.5405%" height="15" fill="rgb(206,159,16)" fg:x="106" fg:w="1"/><text x="57.5473%" y="527.50"></text></g><g><title>0x102f8c8db (1 samples, 0.54%)</title><rect x="57.2973%" y="501" width="0.5405%" height="15" fill="rgb(244,77,30)" fg:x="106" fg:w="1"/><text x="57.5473%" y="511.50"></text></g><g><title>0x1032a72d3 (1 samples, 0.54%)</title><rect x="57.2973%" y="485" width="0.5405%" height="15" fill="rgb(218,69,12)" fg:x="106" fg:w="1"/><text x="57.5473%" y="495.50"></text></g><g><title>0x102f8d7db (1 samples, 0.54%)</title><rect x="57.2973%" y="469" width="0.5405%" height="15" fill="rgb(212,87,7)" fg:x="106" fg:w="1"/><text x="57.5473%" y="479.50"></text></g><g><title>0x102f8d92b (1 samples, 0.54%)</title><rect x="57.2973%" y="453" width="0.5405%" height="15" fill="rgb(245,114,25)" fg:x="106" fg:w="1"/><text x="57.5473%" y="463.50"></text></g><g><title>0x102da8d77 (1 samples, 0.54%)</title><rect x="57.2973%" y="437" width="0.5405%" height="15" fill="rgb(210,61,42)" fg:x="106" fg:w="1"/><text x="57.5473%" y="447.50"></text></g><g><title>0x102e22f2d (1 samples, 0.54%)</title><rect x="57.2973%" y="421" width="0.5405%" height="15" fill="rgb(211,52,33)" fg:x="106" fg:w="1"/><text x="57.5473%" y="431.50"></text></g><g><title>0x1030c4f83 (1 samples, 0.54%)</title><rect x="57.8378%" y="405" width="0.5405%" height="15" fill="rgb(234,58,33)" fg:x="107" fg:w="1"/><text x="58.0878%" y="415.50"></text></g><g><title>_platform_memmove (1 samples, 0.54%)</title><rect x="57.8378%" y="389" width="0.5405%" height="15" fill="rgb(220,115,36)" fg:x="107" fg:w="1"/><text x="58.0878%" y="399.50"></text></g><g><title>0x1030c3e6f (2 samples, 1.08%)</title><rect x="57.8378%" y="421" width="1.0811%" height="15" fill="rgb(243,153,54)" fg:x="107" fg:w="2"/><text x="58.0878%" y="431.50"></text></g><g><title>0x1030c52c1 (1 samples, 0.54%)</title><rect x="58.3784%" y="405" width="0.5405%" height="15" fill="rgb(251,47,18)" fg:x="108" fg:w="1"/><text x="58.6284%" y="415.50"></text></g><g><title>0x1030c3f2f (2 samples, 1.08%)</title><rect x="58.9189%" y="421" width="1.0811%" height="15" fill="rgb(242,102,42)" fg:x="109" fg:w="2"/><text x="59.1689%" y="431.50"></text></g><g><title>0x1030cdca3 (2 samples, 1.08%)</title><rect x="58.9189%" y="405" width="1.0811%" height="15" fill="rgb(234,31,38)" fg:x="109" fg:w="2"/><text x="59.1689%" y="415.50"></text></g><g><title>0x1030ca387 (2 samples, 1.08%)</title><rect x="58.9189%" y="389" width="1.0811%" height="15" fill="rgb(221,117,51)" fg:x="109" fg:w="2"/><text x="59.1689%" y="399.50"></text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (2 samples, 1.08%)</title><rect x="58.9189%" y="373" width="1.0811%" height="15" fill="rgb(212,20,18)" fg:x="109" fg:w="2"/><text x="59.1689%" y="383.50"></text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (2 samples, 1.08%)</title><rect x="58.9189%" y="357" width="1.0811%" height="15" fill="rgb(245,133,36)" fg:x="109" fg:w="2"/><text x="59.1689%" y="367.50"></text></g><g><title>0x102f9101b (5 samples, 2.70%)</title><rect x="57.8378%" y="437" width="2.7027%" height="15" fill="rgb(212,6,19)" fg:x="107" fg:w="5"/><text x="58.0878%" y="447.50">0x..</text></g><g><title>0x1030c40a5 (1 samples, 0.54%)</title><rect x="60.0000%" y="421" width="0.5405%" height="15" fill="rgb(218,1,36)" fg:x="111" fg:w="1"/><text x="60.2500%" y="431.50"></text></g><g><title>0x102f9118b (1 samples, 0.54%)</title><rect x="60.5405%" y="437" width="0.5405%" height="15" fill="rgb(246,84,54)" fg:x="112" fg:w="1"/><text x="60.7905%" y="447.50"></text></g><g><title>0x1030c508b (1 samples, 0.54%)</title><rect x="60.5405%" y="421" width="0.5405%" height="15" fill="rgb(242,110,6)" fg:x="112" fg:w="1"/><text x="60.7905%" y="431.50"></text></g><g><title>0x1030ca183 (1 samples, 0.54%)</title><rect x="60.5405%" y="405" width="0.5405%" height="15" fill="rgb(214,47,5)" fg:x="112" fg:w="1"/><text x="60.7905%" y="415.50"></text></g><g><title>0x1030c3c21 (1 samples, 0.54%)</title><rect x="60.5405%" y="389" width="0.5405%" height="15" fill="rgb(218,159,25)" fg:x="112" fg:w="1"/><text x="60.7905%" y="399.50"></text></g><g><title>0x103293e97 (1 samples, 0.54%)</title><rect x="61.0811%" y="373" width="0.5405%" height="15" fill="rgb(215,211,28)" fg:x="113" fg:w="1"/><text x="61.3311%" y="383.50"></text></g><g><title>_realloc (1 samples, 0.54%)</title><rect x="61.0811%" y="357" width="0.5405%" height="15" fill="rgb(238,59,32)" fg:x="113" fg:w="1"/><text x="61.3311%" y="367.50"></text></g><g><title>_malloc_zone_realloc (1 samples, 0.54%)</title><rect x="61.0811%" y="341" width="0.5405%" height="15" fill="rgb(226,82,3)" fg:x="113" fg:w="1"/><text x="61.3311%" y="351.50"></text></g><g><title>_platform_memmove (1 samples, 0.54%)</title><rect x="61.0811%" y="325" width="0.5405%" height="15" fill="rgb(240,164,32)" fg:x="113" fg:w="1"/><text x="61.3311%" y="335.50"></text></g><g><title>0x1030c88bb (2 samples, 1.08%)</title><rect x="61.0811%" y="405" width="1.0811%" height="15" fill="rgb(232,46,7)" fg:x="113" fg:w="2"/><text x="61.3311%" y="415.50"></text></g><g><title>0x1030c337f (2 samples, 1.08%)</title><rect x="61.0811%" y="389" width="1.0811%" height="15" fill="rgb(229,129,53)" fg:x="113" fg:w="2"/><text x="61.3311%" y="399.50"></text></g><g><title>_malloc_zone_malloc (1 samples, 0.54%)</title><rect x="61.6216%" y="373" width="0.5405%" height="15" fill="rgb(234,188,29)" fg:x="114" fg:w="1"/><text x="61.8716%" y="383.50"></text></g><g><title>0x102f912a7 (3 samples, 1.62%)</title><rect x="61.0811%" y="437" width="1.6216%" height="15" fill="rgb(246,141,4)" fg:x="113" fg:w="3"/><text x="61.3311%" y="447.50"></text></g><g><title>0x1030c4907 (3 samples, 1.62%)</title><rect x="61.0811%" y="421" width="1.6216%" height="15" fill="rgb(229,23,39)" fg:x="113" fg:w="3"/><text x="61.3311%" y="431.50"></text></g><g><title>_platform_memmove (1 samples, 0.54%)</title><rect x="62.1622%" y="405" width="0.5405%" height="15" fill="rgb(206,12,3)" fg:x="115" fg:w="1"/><text x="62.4122%" y="415.50"></text></g><g><title>0x1030c380d (1 samples, 0.54%)</title><rect x="62.7027%" y="405" width="0.5405%" height="15" fill="rgb(252,226,20)" fg:x="116" fg:w="1"/><text x="62.9527%" y="415.50"></text></g><g><title>0x1030c80d7 (1 samples, 0.54%)</title><rect x="63.2432%" y="405" width="0.5405%" height="15" fill="rgb(216,123,35)" fg:x="117" fg:w="1"/><text x="63.4932%" y="415.50"></text></g><g><title>0x1030c36a9 (1 samples, 0.54%)</title><rect x="63.2432%" y="389" width="0.5405%" height="15" fill="rgb(212,68,40)" fg:x="117" fg:w="1"/><text x="63.4932%" y="399.50"></text></g><g><title>0x1030c80e7 (1 samples, 0.54%)</title><rect x="63.7838%" y="389" width="0.5405%" height="15" fill="rgb(254,125,32)" fg:x="118" fg:w="1"/><text x="64.0338%" y="399.50"></text></g><g><title>0x1030c84a1 (1 samples, 0.54%)</title><rect x="63.7838%" y="373" width="0.5405%" height="15" fill="rgb(253,97,22)" fg:x="118" fg:w="1"/><text x="64.0338%" y="383.50"></text></g><g><title>0x102f917f7 (4 samples, 2.16%)</title><rect x="62.7027%" y="437" width="2.1622%" height="15" fill="rgb(241,101,14)" fg:x="116" fg:w="4"/><text x="62.9527%" y="447.50">0..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;mysql::conn::pool::inner::Protected&gt;&gt; (4 samples, 2.16%)</title><rect x="62.7027%" y="421" width="2.1622%" height="15" fill="rgb(238,103,29)" fg:x="116" fg:w="4"/><text x="62.9527%" y="431.50">c..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 1.08%)</title><rect x="63.7838%" y="405" width="1.0811%" height="15" fill="rgb(233,195,47)" fg:x="118" fg:w="2"/><text x="64.0338%" y="415.50"></text></g><g><title>0x1030c8599 (1 samples, 0.54%)</title><rect x="64.3243%" y="389" width="0.5405%" height="15" fill="rgb(246,218,30)" fg:x="119" fg:w="1"/><text x="64.5743%" y="399.50"></text></g><g><title>0x102fa796b (14 samples, 7.57%)</title><rect x="57.8378%" y="453" width="7.5676%" height="15" fill="rgb(219,145,47)" fg:x="107" fg:w="14"/><text x="58.0878%" y="463.50">0x102fa796b</text></g><g><title>_free (1 samples, 0.54%)</title><rect x="64.8649%" y="437" width="0.5405%" height="15" fill="rgb(243,12,26)" fg:x="120" fg:w="1"/><text x="65.1149%" y="447.50"></text></g><g><title>0x102fb8411 (1 samples, 0.54%)</title><rect x="65.4054%" y="341" width="0.5405%" height="15" fill="rgb(214,87,16)" fg:x="121" fg:w="1"/><text x="65.6554%" y="351.50"></text></g><g><title>0x102cb7447 (18 samples, 9.73%)</title><rect x="56.7568%" y="677" width="9.7297%" height="15" fill="rgb(208,99,42)" fg:x="105" fg:w="18"/><text x="57.0068%" y="687.50">0x102cb7447</text></g><g><title>0x102c325cb (18 samples, 9.73%)</title><rect x="56.7568%" y="661" width="9.7297%" height="15" fill="rgb(253,99,2)" fg:x="105" fg:w="18"/><text x="57.0068%" y="671.50">0x102c325cb</text></g><g><title>0x102cae6df (18 samples, 9.73%)</title><rect x="56.7568%" y="645" width="9.7297%" height="15" fill="rgb(220,168,23)" fg:x="105" fg:w="18"/><text x="57.0068%" y="655.50">0x102cae6df</text></g><g><title>0x102cb2bd7 (17 samples, 9.19%)</title><rect x="57.2973%" y="629" width="9.1892%" height="15" fill="rgb(242,38,24)" fg:x="106" fg:w="17"/><text x="57.5473%" y="639.50">0x102cb2bd7</text></g><g><title>0x102cb448b (17 samples, 9.19%)</title><rect x="57.2973%" y="613" width="9.1892%" height="15" fill="rgb(225,182,9)" fg:x="106" fg:w="17"/><text x="57.5473%" y="623.50">0x102cb448b</text></g><g><title>0x102cb63a7 (17 samples, 9.19%)</title><rect x="57.2973%" y="597" width="9.1892%" height="15" fill="rgb(243,178,37)" fg:x="106" fg:w="17"/><text x="57.5473%" y="607.50">0x102cb63a7</text></g><g><title>0x102c584ab (16 samples, 8.65%)</title><rect x="57.8378%" y="581" width="8.6486%" height="15" fill="rgb(232,139,19)" fg:x="107" fg:w="16"/><text x="58.0878%" y="591.50">0x102c584ab</text></g><g><title>0x102c8fbef (16 samples, 8.65%)</title><rect x="57.8378%" y="565" width="8.6486%" height="15" fill="rgb(225,201,24)" fg:x="107" fg:w="16"/><text x="58.0878%" y="575.50">0x102c8fbef</text></g><g><title>0x102c940f3 (16 samples, 8.65%)</title><rect x="57.8378%" y="549" width="8.6486%" height="15" fill="rgb(221,47,46)" fg:x="107" fg:w="16"/><text x="58.0878%" y="559.50">0x102c940f3</text></g><g><title>0x102c92e77 (16 samples, 8.65%)</title><rect x="57.8378%" y="533" width="8.6486%" height="15" fill="rgb(249,23,13)" fg:x="107" fg:w="16"/><text x="58.0878%" y="543.50">0x102c92e77</text></g><g><title>0x102c93c1f (16 samples, 8.65%)</title><rect x="57.8378%" y="517" width="8.6486%" height="15" fill="rgb(219,9,5)" fg:x="107" fg:w="16"/><text x="58.0878%" y="527.50">0x102c93c1f</text></g><g><title>0x102c901d3 (16 samples, 8.65%)</title><rect x="57.8378%" y="501" width="8.6486%" height="15" fill="rgb(254,171,16)" fg:x="107" fg:w="16"/><text x="58.0878%" y="511.50">0x102c901d3</text></g><g><title>0x102c90bbb (16 samples, 8.65%)</title><rect x="57.8378%" y="485" width="8.6486%" height="15" fill="rgb(230,171,20)" fg:x="107" fg:w="16"/><text x="58.0878%" y="495.50">0x102c90bbb</text></g><g><title>0x102fa6fe3 (16 samples, 8.65%)</title><rect x="57.8378%" y="469" width="8.6486%" height="15" fill="rgb(210,71,41)" fg:x="107" fg:w="16"/><text x="58.0878%" y="479.50">0x102fa6fe3</text></g><g><title>0x102fa7b0f (2 samples, 1.08%)</title><rect x="65.4054%" y="453" width="1.0811%" height="15" fill="rgb(206,173,20)" fg:x="121" fg:w="2"/><text x="65.6554%" y="463.50"></text></g><g><title>0x102fa9f73 (2 samples, 1.08%)</title><rect x="65.4054%" y="437" width="1.0811%" height="15" fill="rgb(233,88,34)" fg:x="121" fg:w="2"/><text x="65.6554%" y="447.50"></text></g><g><title>0x102fac0cb (2 samples, 1.08%)</title><rect x="65.4054%" y="421" width="1.0811%" height="15" fill="rgb(223,209,46)" fg:x="121" fg:w="2"/><text x="65.6554%" y="431.50"></text></g><g><title>0x102fb2ebf (2 samples, 1.08%)</title><rect x="65.4054%" y="405" width="1.0811%" height="15" fill="rgb(250,43,18)" fg:x="121" fg:w="2"/><text x="65.6554%" y="415.50"></text></g><g><title>0x102fb4727 (2 samples, 1.08%)</title><rect x="65.4054%" y="389" width="1.0811%" height="15" fill="rgb(208,13,10)" fg:x="121" fg:w="2"/><text x="65.6554%" y="399.50"></text></g><g><title>0x102fb4db7 (2 samples, 1.08%)</title><rect x="65.4054%" y="373" width="1.0811%" height="15" fill="rgb(212,200,36)" fg:x="121" fg:w="2"/><text x="65.6554%" y="383.50"></text></g><g><title>0x102fb62b3 (2 samples, 1.08%)</title><rect x="65.4054%" y="357" width="1.0811%" height="15" fill="rgb(225,90,30)" fg:x="121" fg:w="2"/><text x="65.6554%" y="367.50"></text></g><g><title>0x102fb8797 (1 samples, 0.54%)</title><rect x="65.9459%" y="341" width="0.5405%" height="15" fill="rgb(236,182,39)" fg:x="122" fg:w="1"/><text x="66.1959%" y="351.50"></text></g><g><title>0x102fb9377 (1 samples, 0.54%)</title><rect x="65.9459%" y="325" width="0.5405%" height="15" fill="rgb(212,144,35)" fg:x="122" fg:w="1"/><text x="66.1959%" y="335.50"></text></g><g><title>0x102fa3187 (1 samples, 0.54%)</title><rect x="65.9459%" y="309" width="0.5405%" height="15" fill="rgb(228,63,44)" fg:x="122" fg:w="1"/><text x="66.1959%" y="319.50"></text></g><g><title>0x102fa3b2b (1 samples, 0.54%)</title><rect x="65.9459%" y="293" width="0.5405%" height="15" fill="rgb(228,109,6)" fg:x="122" fg:w="1"/><text x="66.1959%" y="303.50"></text></g><g><title>0x102fa5293 (1 samples, 0.54%)</title><rect x="65.9459%" y="277" width="0.5405%" height="15" fill="rgb(238,117,24)" fg:x="122" fg:w="1"/><text x="66.1959%" y="287.50"></text></g><g><title>0x102f9b8e7 (1 samples, 0.54%)</title><rect x="65.9459%" y="261" width="0.5405%" height="15" fill="rgb(242,26,26)" fg:x="122" fg:w="1"/><text x="66.1959%" y="271.50"></text></g><g><title>free_tiny (1 samples, 0.54%)</title><rect x="65.9459%" y="245" width="0.5405%" height="15" fill="rgb(221,92,48)" fg:x="122" fg:w="1"/><text x="66.1959%" y="255.50"></text></g><g><title>tiny_free_no_lock (1 samples, 0.54%)</title><rect x="65.9459%" y="229" width="0.5405%" height="15" fill="rgb(209,209,32)" fg:x="122" fg:w="1"/><text x="66.1959%" y="239.50"></text></g><g><title>tiny_free_list_add_ptr (1 samples, 0.54%)</title><rect x="65.9459%" y="213" width="0.5405%" height="15" fill="rgb(221,70,22)" fg:x="122" fg:w="1"/><text x="66.1959%" y="223.50"></text></g><g><title>dyld4::ProcessConfig::ProcessConfig(dyld4::KernelArgs const*, dyld4::SyscallDelegate&amp;, lsl::Allocator&amp;) (1 samples, 0.54%)</title><rect x="66.4865%" y="661" width="0.5405%" height="15" fill="rgb(248,145,5)" fg:x="123" fg:w="1"/><text x="66.7365%" y="671.50"></text></g><g><title>dyld4::ProcessConfig::DyldCache::DyldCache(dyld4::ProcessConfig::Process&amp;, dyld4::ProcessConfig::Security const&amp;, dyld4::ProcessConfig::Logging const&amp;, dyld4::SyscallDelegate&amp;, lsl::Allocator&amp;) (1 samples, 0.54%)</title><rect x="66.4865%" y="645" width="0.5405%" height="15" fill="rgb(226,116,26)" fg:x="123" fg:w="1"/><text x="66.7365%" y="655.50"></text></g><g><title>dyld4::SyscallDelegate::getDyldCache(dyld3::SharedCacheOptions const&amp;, dyld3::SharedCacheLoadInfo&amp;) const (1 samples, 0.54%)</title><rect x="66.4865%" y="629" width="0.5405%" height="15" fill="rgb(244,5,17)" fg:x="123" fg:w="1"/><text x="66.7365%" y="639.50"></text></g><g><title>dyld3::loadDyldCache(dyld3::SharedCacheOptions const&amp;, dyld3::SharedCacheLoadInfo*) (1 samples, 0.54%)</title><rect x="66.4865%" y="613" width="0.5405%" height="15" fill="rgb(252,159,33)" fg:x="123" fg:w="1"/><text x="66.7365%" y="623.50"></text></g><g><title>dyld3::reuseExistingCache(dyld3::SharedCacheOptions const&amp;, dyld3::SharedCacheLoadInfo*) (1 samples, 0.54%)</title><rect x="66.4865%" y="597" width="0.5405%" height="15" fill="rgb(206,71,0)" fg:x="123" fg:w="1"/><text x="66.7365%" y="607.50"></text></g><g><title>dyld3::kdebug_trace_dyld_region(unsigned int, int, int, char const*, unsigned char const (*) [16], fsobj_id, fsid, void const*) (2 samples, 1.08%)</title><rect x="67.5676%" y="645" width="1.0811%" height="15" fill="rgb(233,118,54)" fg:x="125" fg:w="2"/><text x="67.8176%" y="655.50"></text></g><g><title>__kdebug_trace_string (2 samples, 1.08%)</title><rect x="67.5676%" y="629" width="1.0811%" height="15" fill="rgb(234,83,48)" fg:x="125" fg:w="2"/><text x="67.8176%" y="639.50"></text></g><g><title>0x102d35a3f (1 samples, 0.54%)</title><rect x="68.6486%" y="437" width="0.5405%" height="15" fill="rgb(228,3,54)" fg:x="127" fg:w="1"/><text x="68.8986%" y="447.50"></text></g><g><title>0x1032a72d3 (1 samples, 0.54%)</title><rect x="68.6486%" y="421" width="0.5405%" height="15" fill="rgb(226,155,13)" fg:x="127" fg:w="1"/><text x="68.8986%" y="431.50"></text></g><g><title>0x102d35abf (1 samples, 0.54%)</title><rect x="68.6486%" y="405" width="0.5405%" height="15" fill="rgb(241,28,37)" fg:x="127" fg:w="1"/><text x="68.8986%" y="415.50"></text></g><g><title>curl_global_init (1 samples, 0.54%)</title><rect x="68.6486%" y="389" width="0.5405%" height="15" fill="rgb(233,93,10)" fg:x="127" fg:w="1"/><text x="68.8986%" y="399.50"></text></g><g><title>global_init (1 samples, 0.54%)</title><rect x="68.6486%" y="373" width="0.5405%" height="15" fill="rgb(225,113,19)" fg:x="127" fg:w="1"/><text x="68.8986%" y="383.50"></text></g><g><title>Curl_macos_init (1 samples, 0.54%)</title><rect x="68.6486%" y="357" width="0.5405%" height="15" fill="rgb(241,2,18)" fg:x="127" fg:w="1"/><text x="68.8986%" y="367.50"></text></g><g><title>SCDynamicStoreCopyProxiesWithOptions (1 samples, 0.54%)</title><rect x="68.6486%" y="341" width="0.5405%" height="15" fill="rgb(228,207,21)" fg:x="127" fg:w="1"/><text x="68.8986%" y="351.50"></text></g><g><title>_CFPreferencesCopyAppValueWithContainerAndConfiguration (1 samples, 0.54%)</title><rect x="68.6486%" y="325" width="0.5405%" height="15" fill="rgb(213,211,35)" fg:x="127" fg:w="1"/><text x="68.8986%" y="335.50"></text></g><g><title>-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (1 samples, 0.54%)</title><rect x="68.6486%" y="309" width="0.5405%" height="15" fill="rgb(209,83,10)" fg:x="127" fg:w="1"/><text x="68.8986%" y="319.50"></text></g><g><title>-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (1 samples, 0.54%)</title><rect x="68.6486%" y="293" width="0.5405%" height="15" fill="rgb(209,164,1)" fg:x="127" fg:w="1"/><text x="68.8986%" y="303.50"></text></g><g><title>__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (1 samples, 0.54%)</title><rect x="68.6486%" y="277" width="0.5405%" height="15" fill="rgb(213,184,43)" fg:x="127" fg:w="1"/><text x="68.8986%" y="287.50"></text></g><g><title>-[_CFXPreferences withSearchLists:] (1 samples, 0.54%)</title><rect x="68.6486%" y="261" width="0.5405%" height="15" fill="rgb(231,61,34)" fg:x="127" fg:w="1"/><text x="68.8986%" y="271.50"></text></g><g><title>__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke.152 (1 samples, 0.54%)</title><rect x="68.6486%" y="245" width="0.5405%" height="15" fill="rgb(235,75,3)" fg:x="127" fg:w="1"/><text x="68.8986%" y="255.50"></text></g><g><title>-[CFPrefsSearchListSource addManagedSourceForIdentifier:user:] (1 samples, 0.54%)</title><rect x="68.6486%" y="229" width="0.5405%" height="15" fill="rgb(220,106,47)" fg:x="127" fg:w="1"/><text x="68.8986%" y="239.50"></text></g><g><title>-[_CFXPreferences withManagedSourceForIdentifier:user:perform:] (1 samples, 0.54%)</title><rect x="68.6486%" y="213" width="0.5405%" height="15" fill="rgb(210,196,33)" fg:x="127" fg:w="1"/><text x="68.8986%" y="223.50"></text></g><g><title>-[_CFXPreferences withSources:] (1 samples, 0.54%)</title><rect x="68.6486%" y="197" width="0.5405%" height="15" fill="rgb(229,154,42)" fg:x="127" fg:w="1"/><text x="68.8986%" y="207.50"></text></g><g><title>__85-[_CFXPreferences(PlistSourceAdditions) withManagedSourceForIdentifier:user:perform:]_block_invoke (1 samples, 0.54%)</title><rect x="68.6486%" y="181" width="0.5405%" height="15" fill="rgb(228,114,26)" fg:x="127" fg:w="1"/><text x="68.8986%" y="191.50"></text></g><g><title>-[CFPrefsPlistSource initWithDomain:user:byHost:containerPath:containingPreferences:] (1 samples, 0.54%)</title><rect x="68.6486%" y="165" width="0.5405%" height="15" fill="rgb(208,144,1)" fg:x="127" fg:w="1"/><text x="68.8986%" y="175.50"></text></g><g><title>-[CFPrefsPlistSource setDomainIdentifier:] (1 samples, 0.54%)</title><rect x="68.6486%" y="149" width="0.5405%" height="15" fill="rgb(239,112,37)" fg:x="127" fg:w="1"/><text x="68.8986%" y="159.50"></text></g><g><title>_CFPrefsGetCacheStringForBundleID (1 samples, 0.54%)</title><rect x="68.6486%" y="133" width="0.5405%" height="15" fill="rgb(210,96,50)" fg:x="127" fg:w="1"/><text x="68.8986%" y="143.50"></text></g><g><title>CFBundleGetMainBundle (1 samples, 0.54%)</title><rect x="68.6486%" y="117" width="0.5405%" height="15" fill="rgb(222,178,2)" fg:x="127" fg:w="1"/><text x="68.8986%" y="127.50"></text></g><g><title>_CFBundleGrokBinaryType (1 samples, 0.54%)</title><rect x="68.6486%" y="101" width="0.5405%" height="15" fill="rgb(226,74,18)" fg:x="127" fg:w="1"/><text x="68.8986%" y="111.50"></text></g><g><title>_CFBundleGrokFileType (1 samples, 0.54%)</title><rect x="68.6486%" y="85" width="0.5405%" height="15" fill="rgb(225,67,54)" fg:x="127" fg:w="1"/><text x="68.8986%" y="95.50"></text></g><g><title>__open (1 samples, 0.54%)</title><rect x="68.6486%" y="69" width="0.5405%" height="15" fill="rgb(251,92,32)" fg:x="127" fg:w="1"/><text x="68.8986%" y="79.50"></text></g><g><title>dyld4::JustInTimeLoader::runInitializers(dyld4::RuntimeState&amp;) const (2 samples, 1.08%)</title><rect x="68.6486%" y="581" width="1.0811%" height="15" fill="rgb(228,149,22)" fg:x="127" fg:w="2"/><text x="68.8986%" y="591.50"></text></g><g><title>dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const (2 samples, 1.08%)</title><rect x="68.6486%" y="565" width="1.0811%" height="15" fill="rgb(243,54,13)" fg:x="127" fg:w="2"/><text x="68.8986%" y="575.50"></text></g><g><title>dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const (2 samples, 1.08%)</title><rect x="68.6486%" y="549" width="1.0811%" height="15" fill="rgb(243,180,28)" fg:x="127" fg:w="2"/><text x="68.8986%" y="559.50"></text></g><g><title>dyld3::MachOFile::forEachInitializerPointerSection(Diagnostics&amp;, void (unsigned int, unsigned int, bool&amp;) block_pointer) const (2 samples, 1.08%)</title><rect x="68.6486%" y="533" width="1.0811%" height="15" fill="rgb(208,167,24)" fg:x="127" fg:w="2"/><text x="68.8986%" y="543.50"></text></g><g><title>dyld3::MachOFile::forEachSection(void (dyld3::MachOFile::SectionInfo const&amp;, bool, bool&amp;) block_pointer) const (2 samples, 1.08%)</title><rect x="68.6486%" y="517" width="1.0811%" height="15" fill="rgb(245,73,45)" fg:x="127" fg:w="2"/><text x="68.8986%" y="527.50"></text></g><g><title>dyld3::MachOFile::forEachLoadCommand(Diagnostics&amp;, void (load_command const*, bool&amp;) block_pointer) const (2 samples, 1.08%)</title><rect x="68.6486%" y="501" width="1.0811%" height="15" fill="rgb(237,203,48)" fg:x="127" fg:w="2"/><text x="68.8986%" y="511.50"></text></g><g><title>invocation function for block in dyld3::MachOFile::forEachSection(void (dyld3::MachOFile::SectionInfo const&amp;, bool, bool&amp;) block_pointer) const (2 samples, 1.08%)</title><rect x="68.6486%" y="485" width="1.0811%" height="15" fill="rgb(211,197,16)" fg:x="127" fg:w="2"/><text x="68.8986%" y="495.50"></text></g><g><title>invocation function for block in dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const (2 samples, 1.08%)</title><rect x="68.6486%" y="469" width="1.0811%" height="15" fill="rgb(243,99,51)" fg:x="127" fg:w="2"/><text x="68.8986%" y="479.50"></text></g><g><title>invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const (2 samples, 1.08%)</title><rect x="68.6486%" y="453" width="1.0811%" height="15" fill="rgb(215,123,29)" fg:x="127" fg:w="2"/><text x="68.8986%" y="463.50"></text></g><g><title>0x103555647 (1 samples, 0.54%)</title><rect x="69.1892%" y="437" width="0.5405%" height="15" fill="rgb(239,186,37)" fg:x="128" fg:w="1"/><text x="69.4392%" y="447.50"></text></g><g><title>0x1038dc77b (1 samples, 0.54%)</title><rect x="69.1892%" y="421" width="0.5405%" height="15" fill="rgb(252,136,39)" fg:x="128" fg:w="1"/><text x="69.4392%" y="431.50"></text></g><g><title>0x10354f237 (1 samples, 0.54%)</title><rect x="69.1892%" y="405" width="0.5405%" height="15" fill="rgb(223,213,32)" fg:x="128" fg:w="1"/><text x="69.4392%" y="415.50"></text></g><g><title>curl_global_init (1 samples, 0.54%)</title><rect x="69.1892%" y="389" width="0.5405%" height="15" fill="rgb(233,115,5)" fg:x="128" fg:w="1"/><text x="69.4392%" y="399.50"></text></g><g><title>global_init (1 samples, 0.54%)</title><rect x="69.1892%" y="373" width="0.5405%" height="15" fill="rgb(207,226,44)" fg:x="128" fg:w="1"/><text x="69.4392%" y="383.50"></text></g><g><title>Curl_macos_init (1 samples, 0.54%)</title><rect x="69.1892%" y="357" width="0.5405%" height="15" fill="rgb(208,126,0)" fg:x="128" fg:w="1"/><text x="69.4392%" y="367.50"></text></g><g><title>SCDynamicStoreCopyProxiesWithOptions (1 samples, 0.54%)</title><rect x="69.1892%" y="341" width="0.5405%" height="15" fill="rgb(244,66,21)" fg:x="128" fg:w="1"/><text x="69.4392%" y="351.50"></text></g><g><title>_CFPreferencesCopyAppValueWithContainerAndConfiguration (1 samples, 0.54%)</title><rect x="69.1892%" y="325" width="0.5405%" height="15" fill="rgb(222,97,12)" fg:x="128" fg:w="1"/><text x="69.4392%" y="335.50"></text></g><g><title>-[_CFXPreferences copyAppValueForKey:identifier:container:configurationURL:] (1 samples, 0.54%)</title><rect x="69.1892%" y="309" width="0.5405%" height="15" fill="rgb(219,213,19)" fg:x="128" fg:w="1"/><text x="69.4392%" y="319.50"></text></g><g><title>-[_CFXPreferences withSearchListForIdentifier:container:cloudConfigurationURL:perform:] (1 samples, 0.54%)</title><rect x="69.1892%" y="293" width="0.5405%" height="15" fill="rgb(252,169,30)" fg:x="128" fg:w="1"/><text x="69.4392%" y="303.50"></text></g><g><title>__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke (1 samples, 0.54%)</title><rect x="69.1892%" y="277" width="0.5405%" height="15" fill="rgb(206,32,51)" fg:x="128" fg:w="1"/><text x="69.4392%" y="287.50"></text></g><g><title>-[_CFXPreferences withSearchLists:] (1 samples, 0.54%)</title><rect x="69.1892%" y="261" width="0.5405%" height="15" fill="rgb(250,172,42)" fg:x="128" fg:w="1"/><text x="69.4392%" y="271.50"></text></g><g><title>__108-[_CFXPreferences(SearchListAdditions) withSearchListForIdentifier:container:cloudConfigurationURL:perform:]_block_invoke.152 (1 samples, 0.54%)</title><rect x="69.1892%" y="245" width="0.5405%" height="15" fill="rgb(209,34,43)" fg:x="128" fg:w="1"/><text x="69.4392%" y="255.50"></text></g><g><title>-[CFPrefsSearchListSource addManagedSourceForIdentifier:user:] (1 samples, 0.54%)</title><rect x="69.1892%" y="229" width="0.5405%" height="15" fill="rgb(223,11,35)" fg:x="128" fg:w="1"/><text x="69.4392%" y="239.50"></text></g><g><title>-[_CFXPreferences withManagedSourceForIdentifier:user:perform:] (1 samples, 0.54%)</title><rect x="69.1892%" y="213" width="0.5405%" height="15" fill="rgb(251,219,26)" fg:x="128" fg:w="1"/><text x="69.4392%" y="223.50"></text></g><g><title>-[_CFXPreferences withSources:] (1 samples, 0.54%)</title><rect x="69.1892%" y="197" width="0.5405%" height="15" fill="rgb(231,119,3)" fg:x="128" fg:w="1"/><text x="69.4392%" y="207.50"></text></g><g><title>__85-[_CFXPreferences(PlistSourceAdditions) withManagedSourceForIdentifier:user:perform:]_block_invoke (1 samples, 0.54%)</title><rect x="69.1892%" y="181" width="0.5405%" height="15" fill="rgb(216,97,11)" fg:x="128" fg:w="1"/><text x="69.4392%" y="191.50"></text></g><g><title>-[CFPrefsPlistSource initWithDomain:user:byHost:containerPath:containingPreferences:] (1 samples, 0.54%)</title><rect x="69.1892%" y="165" width="0.5405%" height="15" fill="rgb(223,59,9)" fg:x="128" fg:w="1"/><text x="69.4392%" y="175.50"></text></g><g><title>-[CFPrefsPlistSource setDomainIdentifier:] (1 samples, 0.54%)</title><rect x="69.1892%" y="149" width="0.5405%" height="15" fill="rgb(233,93,31)" fg:x="128" fg:w="1"/><text x="69.4392%" y="159.50"></text></g><g><title>_CFPrefsGetCacheStringForBundleID (1 samples, 0.54%)</title><rect x="69.1892%" y="133" width="0.5405%" height="15" fill="rgb(239,81,33)" fg:x="128" fg:w="1"/><text x="69.4392%" y="143.50"></text></g><g><title>CFBundleGetMainBundle (1 samples, 0.54%)</title><rect x="69.1892%" y="117" width="0.5405%" height="15" fill="rgb(213,120,34)" fg:x="128" fg:w="1"/><text x="69.4392%" y="127.50"></text></g><g><title>_CFBundleCopyBundleURLForExecutableURL (1 samples, 0.54%)</title><rect x="69.1892%" y="101" width="0.5405%" height="15" fill="rgb(243,49,53)" fg:x="128" fg:w="1"/><text x="69.4392%" y="111.50"></text></g><g><title>CFEqual (1 samples, 0.54%)</title><rect x="69.1892%" y="85" width="0.5405%" height="15" fill="rgb(247,216,33)" fg:x="128" fg:w="1"/><text x="69.4392%" y="95.50"></text></g><g><title>-[NSTaggedPointerString isEqual:] (1 samples, 0.54%)</title><rect x="69.1892%" y="69" width="0.5405%" height="15" fill="rgb(226,26,14)" fg:x="128" fg:w="1"/><text x="69.4392%" y="79.50"></text></g><g><title>_NSIsNSString (1 samples, 0.54%)</title><rect x="69.1892%" y="53" width="0.5405%" height="15" fill="rgb(215,49,53)" fg:x="128" fg:w="1"/><text x="69.4392%" y="63.50"></text></g><g><title>object_getMethodImplementation (1 samples, 0.54%)</title><rect x="69.1892%" y="37" width="0.5405%" height="15" fill="rgb(245,162,40)" fg:x="128" fg:w="1"/><text x="69.4392%" y="47.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUpPlusUpwardLinks(dyld4::RuntimeState&amp;) const (3 samples, 1.62%)</title><rect x="68.6486%" y="629" width="1.6216%" height="15" fill="rgb(229,68,17)" fg:x="127" fg:w="3"/><text x="68.8986%" y="639.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUpPlusUpwardLinks(dyld4::RuntimeState&amp;) const::$_0::operator()() const (3 samples, 1.62%)</title><rect x="68.6486%" y="613" width="1.6216%" height="15" fill="rgb(213,182,10)" fg:x="127" fg:w="3"/><text x="68.8986%" y="623.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (3 samples, 1.62%)</title><rect x="68.6486%" y="597" width="1.6216%" height="15" fill="rgb(245,125,30)" fg:x="127" fg:w="3"/><text x="68.8986%" y="607.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.54%)</title><rect x="69.7297%" y="581" width="0.5405%" height="15" fill="rgb(232,202,2)" fg:x="129" fg:w="1"/><text x="69.9797%" y="591.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.54%)</title><rect x="69.7297%" y="565" width="0.5405%" height="15" fill="rgb(237,140,51)" fg:x="129" fg:w="1"/><text x="69.9797%" y="575.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.54%)</title><rect x="69.7297%" y="549" width="0.5405%" height="15" fill="rgb(236,157,25)" fg:x="129" fg:w="1"/><text x="69.9797%" y="559.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.54%)</title><rect x="69.7297%" y="533" width="0.5405%" height="15" fill="rgb(219,209,0)" fg:x="129" fg:w="1"/><text x="69.9797%" y="543.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.54%)</title><rect x="69.7297%" y="517" width="0.5405%" height="15" fill="rgb(240,116,54)" fg:x="129" fg:w="1"/><text x="69.9797%" y="527.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.54%)</title><rect x="69.7297%" y="501" width="0.5405%" height="15" fill="rgb(216,10,36)" fg:x="129" fg:w="1"/><text x="69.9797%" y="511.50"></text></g><g><title>dyld4::RuntimeState::notifyObjCInit(dyld4::Loader const*) (1 samples, 0.54%)</title><rect x="69.7297%" y="485" width="0.5405%" height="15" fill="rgb(222,72,44)" fg:x="129" fg:w="1"/><text x="69.9797%" y="495.50"></text></g><g><title>load_images (1 samples, 0.54%)</title><rect x="69.7297%" y="469" width="0.5405%" height="15" fill="rgb(232,159,9)" fg:x="129" fg:w="1"/><text x="69.9797%" y="479.50"></text></g><g><title>schedule_class_load(objc_class*) (1 samples, 0.54%)</title><rect x="69.7297%" y="453" width="0.5405%" height="15" fill="rgb(210,39,32)" fg:x="129" fg:w="1"/><text x="69.9797%" y="463.50"></text></g><g><title>malloc_type_realloc (1 samples, 0.54%)</title><rect x="69.7297%" y="437" width="0.5405%" height="15" fill="rgb(216,194,45)" fg:x="129" fg:w="1"/><text x="69.9797%" y="447.50"></text></g><g><title>nanov2_malloc_type (1 samples, 0.54%)</title><rect x="69.7297%" y="421" width="0.5405%" height="15" fill="rgb(218,18,35)" fg:x="129" fg:w="1"/><text x="69.9797%" y="431.50"></text></g><g><title>nanov2_allocate_outlined (1 samples, 0.54%)</title><rect x="69.7297%" y="405" width="0.5405%" height="15" fill="rgb(207,83,51)" fg:x="129" fg:w="1"/><text x="69.9797%" y="415.50"></text></g><g><title>__malloc_init (1 samples, 0.54%)</title><rect x="70.2703%" y="485" width="0.5405%" height="15" fill="rgb(225,63,43)" fg:x="130" fg:w="1"/><text x="70.5203%" y="495.50"></text></g><g><title>create_scalable_szone (1 samples, 0.54%)</title><rect x="70.2703%" y="469" width="0.5405%" height="15" fill="rgb(207,57,36)" fg:x="130" fg:w="1"/><text x="70.5203%" y="479.50"></text></g><g><title>rack_init (1 samples, 0.54%)</title><rect x="70.2703%" y="453" width="0.5405%" height="15" fill="rgb(216,99,33)" fg:x="130" fg:w="1"/><text x="70.5203%" y="463.50"></text></g><g><title>dyld4::APIs::_dyld_register_for_bulk_image_loads(void (*)(unsigned int, mach_header const**, char const**)) (1 samples, 0.54%)</title><rect x="70.8108%" y="453" width="0.5405%" height="15" fill="rgb(225,42,16)" fg:x="131" fg:w="1"/><text x="71.0608%" y="463.50"></text></g><g><title>dyld4::RuntimeLocks::withLoadersReadLock(void () block_pointer) (1 samples, 0.54%)</title><rect x="70.8108%" y="437" width="0.5405%" height="15" fill="rgb(220,201,45)" fg:x="131" fg:w="1"/><text x="71.0608%" y="447.50"></text></g><g><title>invocation function for block in dyld4::APIs::_dyld_register_for_bulk_image_loads(void (*)(unsigned int, mach_header const**, char const**)) (1 samples, 0.54%)</title><rect x="70.8108%" y="421" width="0.5405%" height="15" fill="rgb(225,33,4)" fg:x="131" fg:w="1"/><text x="71.0608%" y="431.50"></text></g><g><title>_xpc_dyld_image_callback (1 samples, 0.54%)</title><rect x="70.8108%" y="405" width="0.5405%" height="15" fill="rgb(224,33,50)" fg:x="131" fg:w="1"/><text x="71.0608%" y="415.50"></text></g><g><title>xpc_dictionary_set_uint64 (1 samples, 0.54%)</title><rect x="70.8108%" y="389" width="0.5405%" height="15" fill="rgb(246,198,51)" fg:x="131" fg:w="1"/><text x="71.0608%" y="399.50"></text></g><g><title>_xpc_dictionary_insert (1 samples, 0.54%)</title><rect x="70.8108%" y="373" width="0.5405%" height="15" fill="rgb(205,22,4)" fg:x="131" fg:w="1"/><text x="71.0608%" y="383.50"></text></g><g><title>_xpc_alloc (1 samples, 0.54%)</title><rect x="70.8108%" y="357" width="0.5405%" height="15" fill="rgb(206,3,8)" fg:x="131" fg:w="1"/><text x="71.0608%" y="367.50"></text></g><g><title>nanov2_calloc_type (1 samples, 0.54%)</title><rect x="70.8108%" y="341" width="0.5405%" height="15" fill="rgb(251,23,15)" fg:x="131" fg:w="1"/><text x="71.0608%" y="351.50"></text></g><g><title>nanov2_allocate_outlined (1 samples, 0.54%)</title><rect x="70.8108%" y="325" width="0.5405%" height="15" fill="rgb(252,88,28)" fg:x="131" fg:w="1"/><text x="71.0608%" y="335.50"></text></g><g><title>dyld4::APIs::runAllInitializersForMain() (6 samples, 3.24%)</title><rect x="68.6486%" y="645" width="3.2432%" height="15" fill="rgb(212,127,14)" fg:x="127" fg:w="6"/><text x="68.8986%" y="655.50">dyl..</text></g><g><title>dyld4::PrebuiltLoader::runInitializers(dyld4::RuntimeState&amp;) const (3 samples, 1.62%)</title><rect x="70.2703%" y="629" width="1.6216%" height="15" fill="rgb(247,145,37)" fg:x="130" fg:w="3"/><text x="70.5203%" y="639.50"></text></g><g><title>dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const (3 samples, 1.62%)</title><rect x="70.2703%" y="613" width="1.6216%" height="15" fill="rgb(209,117,53)" fg:x="130" fg:w="3"/><text x="70.5203%" y="623.50"></text></g><g><title>dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const (3 samples, 1.62%)</title><rect x="70.2703%" y="597" width="1.6216%" height="15" fill="rgb(212,90,42)" fg:x="130" fg:w="3"/><text x="70.5203%" y="607.50"></text></g><g><title>dyld3::MachOFile::forEachSection(void (dyld3::MachOFile::SectionInfo const&amp;, bool, bool&amp;) block_pointer) const (3 samples, 1.62%)</title><rect x="70.2703%" y="581" width="1.6216%" height="15" fill="rgb(218,164,37)" fg:x="130" fg:w="3"/><text x="70.5203%" y="591.50"></text></g><g><title>dyld3::MachOFile::forEachLoadCommand(Diagnostics&amp;, void (load_command const*, bool&amp;) block_pointer) const (3 samples, 1.62%)</title><rect x="70.2703%" y="565" width="1.6216%" height="15" fill="rgb(246,65,34)" fg:x="130" fg:w="3"/><text x="70.5203%" y="575.50"></text></g><g><title>invocation function for block in dyld3::MachOFile::forEachSection(void (dyld3::MachOFile::SectionInfo const&amp;, bool, bool&amp;) block_pointer) const (3 samples, 1.62%)</title><rect x="70.2703%" y="549" width="1.6216%" height="15" fill="rgb(231,100,33)" fg:x="130" fg:w="3"/><text x="70.5203%" y="559.50"></text></g><g><title>invocation function for block in dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const (3 samples, 1.62%)</title><rect x="70.2703%" y="533" width="1.6216%" height="15" fill="rgb(228,126,14)" fg:x="130" fg:w="3"/><text x="70.5203%" y="543.50"></text></g><g><title>invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const (3 samples, 1.62%)</title><rect x="70.2703%" y="517" width="1.6216%" height="15" fill="rgb(215,173,21)" fg:x="130" fg:w="3"/><text x="70.5203%" y="527.50"></text></g><g><title>libSystem_initializer (3 samples, 1.62%)</title><rect x="70.2703%" y="501" width="1.6216%" height="15" fill="rgb(210,6,40)" fg:x="130" fg:w="3"/><text x="70.5203%" y="511.50"></text></g><g><title>_libxpc_initializer (2 samples, 1.08%)</title><rect x="70.8108%" y="485" width="1.0811%" height="15" fill="rgb(212,48,18)" fg:x="131" fg:w="2"/><text x="71.0608%" y="495.50"></text></g><g><title>_xpc_collect_images (2 samples, 1.08%)</title><rect x="70.8108%" y="469" width="1.0811%" height="15" fill="rgb(230,214,11)" fg:x="131" fg:w="2"/><text x="71.0608%" y="479.50"></text></g><g><title>xpc_bundle_copy_services (1 samples, 0.54%)</title><rect x="71.3514%" y="453" width="0.5405%" height="15" fill="rgb(254,105,39)" fg:x="132" fg:w="1"/><text x="71.6014%" y="463.50"></text></g><g><title>_xpc_bundle_resolve (1 samples, 0.54%)</title><rect x="71.3514%" y="437" width="0.5405%" height="15" fill="rgb(245,158,5)" fg:x="132" fg:w="1"/><text x="71.6014%" y="447.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.54%)</title><rect x="71.3514%" y="421" width="0.5405%" height="15" fill="rgb(249,208,11)" fg:x="132" fg:w="1"/><text x="71.6014%" y="431.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.54%)</title><rect x="71.3514%" y="405" width="0.5405%" height="15" fill="rgb(210,39,28)" fg:x="132" fg:w="1"/><text x="71.6014%" y="415.50"></text></g><g><title>___xpc_bundle_resolve_block_invoke (1 samples, 0.54%)</title><rect x="71.3514%" y="389" width="0.5405%" height="15" fill="rgb(211,56,53)" fg:x="132" fg:w="1"/><text x="71.6014%" y="399.50"></text></g><g><title>_xpc_bundle_resolve_sync (1 samples, 0.54%)</title><rect x="71.3514%" y="373" width="0.5405%" height="15" fill="rgb(226,201,30)" fg:x="132" fg:w="1"/><text x="71.6014%" y="383.50"></text></g><g><title>__open (1 samples, 0.54%)</title><rect x="71.3514%" y="357" width="0.5405%" height="15" fill="rgb(239,101,34)" fg:x="132" fg:w="1"/><text x="71.6014%" y="367.50"></text></g><g><title>dyld3::MachOFile::trieWalk(Diagnostics&amp;, unsigned char const*, unsigned char const*, char const*) (1 samples, 0.54%)</title><rect x="71.8919%" y="469" width="0.5405%" height="15" fill="rgb(226,209,5)" fg:x="133" fg:w="1"/><text x="72.1419%" y="479.50"></text></g><g><title>mach_o::Fixups::forEachBind_OpcodesLazy(Diagnostics&amp;, void (char const*, bool, bool, unsigned int, int, unsigned int, unsigned int, unsigned long long, unsigned char, char const*, bool, bool, unsigned long long, bool, bool&amp;) block_pointer) const (2 samples, 1.08%)</title><rect x="71.8919%" y="549" width="1.0811%" height="15" fill="rgb(250,105,47)" fg:x="133" fg:w="2"/><text x="72.1419%" y="559.50"></text></g><g><title>invocation function for block in mach_o::Fixups::forEachBindTarget_Opcodes(Diagnostics&amp;, bool, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (2 samples, 1.08%)</title><rect x="71.8919%" y="533" width="1.0811%" height="15" fill="rgb(230,72,3)" fg:x="133" fg:w="2"/><text x="72.1419%" y="543.50"></text></g><g><title>invocation function for block in dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (2 samples, 1.08%)</title><rect x="71.8919%" y="517" width="1.0811%" height="15" fill="rgb(232,218,39)" fg:x="133" fg:w="2"/><text x="72.1419%" y="527.50"></text></g><g><title>dyld4::Loader::resolveSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, int, char const*, bool, bool, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool) const (2 samples, 1.08%)</title><rect x="71.8919%" y="501" width="1.0811%" height="15" fill="rgb(248,166,6)" fg:x="133" fg:w="2"/><text x="72.1419%" y="511.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (2 samples, 1.08%)</title><rect x="71.8919%" y="485" width="1.0811%" height="15" fill="rgb(247,89,20)" fg:x="133" fg:w="2"/><text x="72.1419%" y="495.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.54%)</title><rect x="72.4324%" y="469" width="0.5405%" height="15" fill="rgb(248,130,54)" fg:x="134" fg:w="1"/><text x="72.6824%" y="479.50"></text></g><g><title>dyld4::start(dyld4::KernelArgs*, void*, void*)::$_0::operator()() const (13 samples, 7.03%)</title><rect x="66.4865%" y="677" width="7.0270%" height="15" fill="rgb(234,196,4)" fg:x="123" fg:w="13"/><text x="66.7365%" y="687.50">dyld4::st..</text></g><g><title>dyld4::prepare(dyld4::APIs&amp;, dyld3::MachOAnalyzer const*) (12 samples, 6.49%)</title><rect x="67.0270%" y="661" width="6.4865%" height="15" fill="rgb(250,143,31)" fg:x="124" fg:w="12"/><text x="67.2770%" y="671.50">dyld4::p..</text></g><g><title>dyld4::JustInTimeLoader::applyFixups(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::DyldCacheDataConstLazyScopedWriter&amp;, bool, lsl::Vector&lt;std::__1::pair&lt;dyld4::Loader const*, char const*&gt;&gt;*) const (3 samples, 1.62%)</title><rect x="71.8919%" y="645" width="1.6216%" height="15" fill="rgb(211,110,34)" fg:x="133" fg:w="3"/><text x="72.1419%" y="655.50"></text></g><g><title>dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (3 samples, 1.62%)</title><rect x="71.8919%" y="629" width="1.6216%" height="15" fill="rgb(215,124,48)" fg:x="133" fg:w="3"/><text x="72.1419%" y="639.50"></text></g><g><title>dyld3::MachOAnalyzer::withVMLayout(Diagnostics&amp;, void (mach_o::Layout const&amp;) block_pointer) const (3 samples, 1.62%)</title><rect x="71.8919%" y="613" width="1.6216%" height="15" fill="rgb(216,46,13)" fg:x="133" fg:w="3"/><text x="72.1419%" y="623.50"></text></g><g><title>invocation function for block in dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (3 samples, 1.62%)</title><rect x="71.8919%" y="597" width="1.6216%" height="15" fill="rgb(205,184,25)" fg:x="133" fg:w="3"/><text x="72.1419%" y="607.50"></text></g><g><title>mach_o::Fixups::forEachBindTarget_Opcodes(Diagnostics&amp;, bool, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (3 samples, 1.62%)</title><rect x="71.8919%" y="581" width="1.6216%" height="15" fill="rgb(228,1,10)" fg:x="133" fg:w="3"/><text x="72.1419%" y="591.50"></text></g><g><title>mach_o::Fixups::forEachBindUnified_Opcodes(Diagnostics&amp;, bool, void (unsigned long long, unsigned int, mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (unsigned long long, unsigned int, mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (3 samples, 1.62%)</title><rect x="71.8919%" y="565" width="1.6216%" height="15" fill="rgb(213,116,27)" fg:x="133" fg:w="3"/><text x="72.1419%" y="575.50"></text></g><g><title>mach_o::Fixups::forEachBind_OpcodesRegular(Diagnostics&amp;, void (char const*, bool, bool, unsigned int, int, unsigned int, unsigned int, unsigned long long, unsigned char, char const*, bool, bool, unsigned long long, bool, bool&amp;) block_pointer) const (1 samples, 0.54%)</title><rect x="72.9730%" y="549" width="0.5405%" height="15" fill="rgb(241,95,50)" fg:x="135" fg:w="1"/><text x="73.2230%" y="559.50"></text></g><g><title>invocation function for block in mach_o::Fixups::forEachBindTarget_Opcodes(Diagnostics&amp;, bool, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (1 samples, 0.54%)</title><rect x="72.9730%" y="533" width="0.5405%" height="15" fill="rgb(238,48,32)" fg:x="135" fg:w="1"/><text x="73.2230%" y="543.50"></text></g><g><title>invocation function for block in dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (1 samples, 0.54%)</title><rect x="72.9730%" y="517" width="0.5405%" height="15" fill="rgb(235,113,49)" fg:x="135" fg:w="1"/><text x="73.2230%" y="527.50"></text></g><g><title>dyld4::Loader::resolveSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, int, char const*, bool, bool, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool) const (1 samples, 0.54%)</title><rect x="72.9730%" y="501" width="0.5405%" height="15" fill="rgb(205,127,43)" fg:x="135" fg:w="1"/><text x="73.2230%" y="511.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.54%)</title><rect x="72.9730%" y="485" width="0.5405%" height="15" fill="rgb(250,162,2)" fg:x="135" fg:w="1"/><text x="73.2230%" y="495.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.54%)</title><rect x="72.9730%" y="469" width="0.5405%" height="15" fill="rgb(220,13,41)" fg:x="135" fg:w="1"/><text x="73.2230%" y="479.50"></text></g><g><title>dyld3::MachOFile::trieWalk(Diagnostics&amp;, unsigned char const*, unsigned char const*, char const*) (1 samples, 0.54%)</title><rect x="72.9730%" y="453" width="0.5405%" height="15" fill="rgb(249,221,25)" fg:x="135" fg:w="1"/><text x="73.2230%" y="463.50"></text></g><g><title>&lt;env_logger::logger::Logger as log::Log&gt;::log (1 samples, 0.54%)</title><rect x="74.0541%" y="597" width="0.5405%" height="15" fill="rgb(215,208,19)" fg:x="137" fg:w="1"/><text x="74.3041%" y="607.50"></text></g><g><title>&lt;env_logger::logger::Logger as log::Log&gt;::log::_{{closure}} (1 samples, 0.54%)</title><rect x="74.0541%" y="581" width="0.5405%" height="15" fill="rgb(236,175,2)" fg:x="137" fg:w="1"/><text x="74.3041%" y="591.50"></text></g><g><title>&lt;F as env_logger::fmt::RecordFormat&gt;::format (1 samples, 0.54%)</title><rect x="74.0541%" y="565" width="0.5405%" height="15" fill="rgb(241,52,2)" fg:x="137" fg:w="1"/><text x="74.3041%" y="575.50"></text></g><g><title>chrono::offset::local::Local::now (1 samples, 0.54%)</title><rect x="74.0541%" y="549" width="0.5405%" height="15" fill="rgb(248,140,14)" fg:x="137" fg:w="1"/><text x="74.3041%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.54%)</title><rect x="74.0541%" y="533" width="0.5405%" height="15" fill="rgb(253,22,42)" fg:x="137" fg:w="1"/><text x="74.3041%" y="543.50"></text></g><g><title>&lt;chrono::offset::local::inner::Cache as core::default::Default&gt;::default (1 samples, 0.54%)</title><rect x="74.0541%" y="517" width="0.5405%" height="15" fill="rgb(234,61,47)" fg:x="137" fg:w="1"/><text x="74.3041%" y="527.50"></text></g><g><title>chrono::offset::local::inner::current_zone (1 samples, 0.54%)</title><rect x="74.0541%" y="501" width="0.5405%" height="15" fill="rgb(208,226,15)" fg:x="137" fg:w="1"/><text x="74.3041%" y="511.50"></text></g><g><title>chrono::offset::local::tz_info::timezone::TimeZone::from_posix_tz (1 samples, 0.54%)</title><rect x="74.0541%" y="485" width="0.5405%" height="15" fill="rgb(217,221,4)" fg:x="137" fg:w="1"/><text x="74.3041%" y="495.50"></text></g><g><title>chrono::offset::local::tz_info::parser::parse (1 samples, 0.54%)</title><rect x="74.0541%" y="469" width="0.5405%" height="15" fill="rgb(212,174,34)" fg:x="137" fg:w="1"/><text x="74.3041%" y="479.50"></text></g><g><title>dingo_test_runner::executor::file_executor::FileExecutor::execute (2 samples, 1.08%)</title><rect x="74.5946%" y="597" width="1.0811%" height="15" fill="rgb(253,83,4)" fg:x="138" fg:w="2"/><text x="74.8446%" y="607.50"></text></g><g><title>dingo_test_runner::report::TestSuiteResult::new (2 samples, 1.08%)</title><rect x="74.5946%" y="581" width="1.0811%" height="15" fill="rgb(250,195,49)" fg:x="138" fg:w="2"/><text x="74.8446%" y="591.50"></text></g><g><title>std::process::Command::output (2 samples, 1.08%)</title><rect x="74.5946%" y="565" width="1.0811%" height="15" fill="rgb(241,192,25)" fg:x="138" fg:w="2"/><text x="74.8446%" y="575.50"></text></g><g><title>std::sys::process::unix::unix::_&lt;impl std::sys::process::unix::common::Command&gt;::spawn (2 samples, 1.08%)</title><rect x="74.5946%" y="549" width="1.0811%" height="15" fill="rgb(208,124,10)" fg:x="138" fg:w="2"/><text x="74.8446%" y="559.50"></text></g><g><title>posix_spawnp (2 samples, 1.08%)</title><rect x="74.5946%" y="533" width="1.0811%" height="15" fill="rgb(222,33,0)" fg:x="138" fg:w="2"/><text x="74.8446%" y="543.50"></text></g><g><title>__posix_spawn (2 samples, 1.08%)</title><rect x="74.5946%" y="517" width="1.0811%" height="15" fill="rgb(234,209,28)" fg:x="138" fg:w="2"/><text x="74.8446%" y="527.50"></text></g><g><title>start (140 samples, 75.68%)</title><rect x="0.5405%" y="693" width="75.6757%" height="15" fill="rgb(224,11,23)" fg:x="1" fg:w="140"/><text x="0.7905%" y="703.50">start</text></g><g><title>main (5 samples, 2.70%)</title><rect x="73.5135%" y="677" width="2.7027%" height="15" fill="rgb(232,99,1)" fg:x="136" fg:w="5"/><text x="73.7635%" y="687.50">ma..</text></g><g><title>std::rt::lang_start_internal (5 samples, 2.70%)</title><rect x="73.5135%" y="661" width="2.7027%" height="15" fill="rgb(237,95,45)" fg:x="136" fg:w="5"/><text x="73.7635%" y="671.50">st..</text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 2.16%)</title><rect x="74.0541%" y="645" width="2.1622%" height="15" fill="rgb(208,109,11)" fg:x="137" fg:w="4"/><text x="74.3041%" y="655.50">s..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (4 samples, 2.16%)</title><rect x="74.0541%" y="629" width="2.1622%" height="15" fill="rgb(216,190,48)" fg:x="137" fg:w="4"/><text x="74.3041%" y="639.50">s..</text></g><g><title>dingo_test_runner::main (4 samples, 2.16%)</title><rect x="74.0541%" y="613" width="2.1622%" height="15" fill="rgb(251,171,36)" fg:x="137" fg:w="4"/><text x="74.3041%" y="623.50">d..</text></g><g><title>std::process::exit (1 samples, 0.54%)</title><rect x="75.6757%" y="597" width="0.5405%" height="15" fill="rgb(230,62,22)" fg:x="140" fg:w="1"/><text x="75.9257%" y="607.50"></text></g><g><title>std::sys::pal::unix::os::exit (1 samples, 0.54%)</title><rect x="75.6757%" y="581" width="0.5405%" height="15" fill="rgb(225,114,35)" fg:x="140" fg:w="1"/><text x="75.9257%" y="591.50"></text></g><g><title>exit (1 samples, 0.54%)</title><rect x="75.6757%" y="565" width="0.5405%" height="15" fill="rgb(215,118,42)" fg:x="140" fg:w="1"/><text x="75.9257%" y="575.50"></text></g><g><title>__cxa_finalize_ranges (1 samples, 0.54%)</title><rect x="75.6757%" y="549" width="0.5405%" height="15" fill="rgb(243,119,21)" fg:x="140" fg:w="1"/><text x="75.9257%" y="559.50"></text></g><g><title>mi_process_done (1 samples, 0.54%)</title><rect x="75.6757%" y="533" width="0.5405%" height="15" fill="rgb(252,177,53)" fg:x="140" fg:w="1"/><text x="75.9257%" y="543.50"></text></g><g><title>mi_heap_collect_ex (1 samples, 0.54%)</title><rect x="75.6757%" y="517" width="0.5405%" height="15" fill="rgb(237,209,29)" fg:x="140" fg:w="1"/><text x="75.9257%" y="527.50"></text></g><g><title>madvise (1 samples, 0.54%)</title><rect x="75.6757%" y="501" width="0.5405%" height="15" fill="rgb(212,65,23)" fg:x="140" fg:w="1"/><text x="75.9257%" y="511.50"></text></g><g><title>_pthread_exit (1 samples, 0.54%)</title><rect x="76.2162%" y="661" width="0.5405%" height="15" fill="rgb(230,222,46)" fg:x="141" fg:w="1"/><text x="76.4662%" y="671.50"></text></g><g><title>_pthread_tsd_cleanup (1 samples, 0.54%)</title><rect x="76.2162%" y="645" width="0.5405%" height="15" fill="rgb(215,135,32)" fg:x="141" fg:w="1"/><text x="76.4662%" y="655.50"></text></g><g><title>_mi_thread_done (1 samples, 0.54%)</title><rect x="76.2162%" y="629" width="0.5405%" height="15" fill="rgb(246,101,22)" fg:x="141" fg:w="1"/><text x="76.4662%" y="639.50"></text></g><g><title>mi_heap_collect_ex (1 samples, 0.54%)</title><rect x="76.2162%" y="613" width="0.5405%" height="15" fill="rgb(206,107,13)" fg:x="141" fg:w="1"/><text x="76.4662%" y="623.50"></text></g><g><title>_mi_heap_collect_retired (1 samples, 0.54%)</title><rect x="76.2162%" y="597" width="0.5405%" height="15" fill="rgb(250,100,44)" fg:x="141" fg:w="1"/><text x="76.4662%" y="607.50"></text></g><g><title>mi_segment_page_clear (1 samples, 0.54%)</title><rect x="76.2162%" y="581" width="0.5405%" height="15" fill="rgb(231,147,38)" fg:x="141" fg:w="1"/><text x="76.4662%" y="591.50"></text></g><g><title>mi_segment_span_free_coalesce (1 samples, 0.54%)</title><rect x="76.2162%" y="565" width="0.5405%" height="15" fill="rgb(229,8,40)" fg:x="141" fg:w="1"/><text x="76.4662%" y="575.50"></text></g><g><title>mi_segment_span_free (1 samples, 0.54%)</title><rect x="76.2162%" y="549" width="0.5405%" height="15" fill="rgb(221,135,30)" fg:x="141" fg:w="1"/><text x="76.4662%" y="559.50"></text></g><g><title>mi_segment_try_purge (1 samples, 0.54%)</title><rect x="76.2162%" y="533" width="0.5405%" height="15" fill="rgb(249,193,18)" fg:x="141" fg:w="1"/><text x="76.4662%" y="543.50"></text></g><g><title>mi_segment_purge (1 samples, 0.54%)</title><rect x="76.2162%" y="517" width="0.5405%" height="15" fill="rgb(209,133,39)" fg:x="141" fg:w="1"/><text x="76.4662%" y="527.50"></text></g><g><title>_mi_os_purge_ex (1 samples, 0.54%)</title><rect x="76.2162%" y="501" width="0.5405%" height="15" fill="rgb(232,100,14)" fg:x="141" fg:w="1"/><text x="76.4662%" y="511.50"></text></g><g><title>madvise (1 samples, 0.54%)</title><rect x="76.2162%" y="485" width="0.5405%" height="15" fill="rgb(224,185,1)" fg:x="141" fg:w="1"/><text x="76.4662%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;dingo_test_runner::tester::tester::Tester&gt; (1 samples, 0.54%)</title><rect x="76.7568%" y="485" width="0.5405%" height="15" fill="rgb(223,139,8)" fg:x="142" fg:w="1"/><text x="77.0068%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;mysql::conn::pool::PooledConn&gt; (1 samples, 0.54%)</title><rect x="76.7568%" y="469" width="0.5405%" height="15" fill="rgb(232,213,38)" fg:x="142" fg:w="1"/><text x="77.0068%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.54%)</title><rect x="76.7568%" y="453" width="0.5405%" height="15" fill="rgb(207,94,22)" fg:x="142" fg:w="1"/><text x="77.0068%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;mysql::conn::pool::inner::Protected&gt;&gt; (1 samples, 0.54%)</title><rect x="76.7568%" y="437" width="0.5405%" height="15" fill="rgb(219,183,54)" fg:x="142" fg:w="1"/><text x="77.0068%" y="447.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.54%)</title><rect x="76.7568%" y="421" width="0.5405%" height="15" fill="rgb(216,185,54)" fg:x="142" fg:w="1"/><text x="77.0068%" y="431.50"></text></g><g><title>&lt;mysql::conn::Conn as core::ops::drop::Drop&gt;::drop (1 samples, 0.54%)</title><rect x="76.7568%" y="405" width="0.5405%" height="15" fill="rgb(254,217,39)" fg:x="142" fg:w="1"/><text x="77.0068%" y="415.50"></text></g><g><title>mysql::conn::Conn::write_command (1 samples, 0.54%)</title><rect x="76.7568%" y="389" width="0.5405%" height="15" fill="rgb(240,178,23)" fg:x="142" fg:w="1"/><text x="77.0068%" y="399.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.54%)</title><rect x="76.7568%" y="373" width="0.5405%" height="15" fill="rgb(218,11,47)" fg:x="142" fg:w="1"/><text x="77.0068%" y="383.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.54%)</title><rect x="76.7568%" y="357" width="0.5405%" height="15" fill="rgb(218,51,51)" fg:x="142" fg:w="1"/><text x="77.0068%" y="367.50"></text></g><g><title>__sendto (1 samples, 0.54%)</title><rect x="76.7568%" y="341" width="0.5405%" height="15" fill="rgb(238,126,27)" fg:x="142" fg:w="1"/><text x="77.0068%" y="351.50"></text></g><g><title>mysql::conn::Conn::can_improved (1 samples, 0.54%)</title><rect x="77.2973%" y="373" width="0.5405%" height="15" fill="rgb(249,202,22)" fg:x="143" fg:w="1"/><text x="77.5473%" y="383.50"></text></g><g><title>mysql::conn::Conn::get_system_var (1 samples, 0.54%)</title><rect x="77.2973%" y="357" width="0.5405%" height="15" fill="rgb(254,195,49)" fg:x="143" fg:w="1"/><text x="77.5473%" y="367.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.54%)</title><rect x="77.2973%" y="341" width="0.5405%" height="15" fill="rgb(208,123,14)" fg:x="143" fg:w="1"/><text x="77.5473%" y="351.50"></text></g><g><title>mysql::conn::Conn::write_command (1 samples, 0.54%)</title><rect x="77.2973%" y="325" width="0.5405%" height="15" fill="rgb(224,200,8)" fg:x="143" fg:w="1"/><text x="77.5473%" y="335.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.54%)</title><rect x="77.2973%" y="309" width="0.5405%" height="15" fill="rgb(217,61,36)" fg:x="143" fg:w="1"/><text x="77.5473%" y="319.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.54%)</title><rect x="77.2973%" y="293" width="0.5405%" height="15" fill="rgb(206,35,45)" fg:x="143" fg:w="1"/><text x="77.5473%" y="303.50"></text></g><g><title>__sendto (1 samples, 0.54%)</title><rect x="77.2973%" y="277" width="0.5405%" height="15" fill="rgb(217,65,33)" fg:x="143" fg:w="1"/><text x="77.5473%" y="287.50"></text></g><g><title>mysql::conn::Conn::connect (1 samples, 0.54%)</title><rect x="77.8378%" y="373" width="0.5405%" height="15" fill="rgb(222,158,48)" fg:x="144" fg:w="1"/><text x="78.0878%" y="383.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.54%)</title><rect x="77.8378%" y="357" width="0.5405%" height="15" fill="rgb(254,2,54)" fg:x="144" fg:w="1"/><text x="78.0878%" y="367.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::next_packet (1 samples, 0.54%)</title><rect x="77.8378%" y="341" width="0.5405%" height="15" fill="rgb(250,143,38)" fg:x="144" fg:w="1"/><text x="78.0878%" y="351.50"></text></g><g><title>__recvfrom (1 samples, 0.54%)</title><rect x="77.8378%" y="325" width="0.5405%" height="15" fill="rgb(248,25,0)" fg:x="144" fg:w="1"/><text x="78.0878%" y="335.50"></text></g><g><title>dingo_test_runner::tester::tester::Tester::new (3 samples, 1.62%)</title><rect x="77.2973%" y="485" width="1.6216%" height="15" fill="rgb(206,152,27)" fg:x="143" fg:w="3"/><text x="77.5473%" y="495.50"></text></g><g><title>dingo_test_runner::tester::connection_manager::ConnectionManager::new (3 samples, 1.62%)</title><rect x="77.2973%" y="469" width="1.6216%" height="15" fill="rgb(240,77,30)" fg:x="143" fg:w="3"/><text x="77.5473%" y="479.50"></text></g><g><title>dingo_test_runner::tester::database::create_database_with_retry (3 samples, 1.62%)</title><rect x="77.2973%" y="453" width="1.6216%" height="15" fill="rgb(231,5,3)" fg:x="143" fg:w="3"/><text x="77.5473%" y="463.50"></text></g><g><title>mysql::conn::pool::Pool::new (3 samples, 1.62%)</title><rect x="77.2973%" y="437" width="1.6216%" height="15" fill="rgb(207,226,32)" fg:x="143" fg:w="3"/><text x="77.5473%" y="447.50"></text></g><g><title>mysql::conn::pool::inner::Inner::new (3 samples, 1.62%)</title><rect x="77.2973%" y="421" width="1.6216%" height="15" fill="rgb(222,207,47)" fg:x="143" fg:w="3"/><text x="77.5473%" y="431.50"></text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (3 samples, 1.62%)</title><rect x="77.2973%" y="405" width="1.6216%" height="15" fill="rgb(229,115,45)" fg:x="143" fg:w="3"/><text x="77.5473%" y="415.50"></text></g><g><title>mysql::conn::Conn::new (3 samples, 1.62%)</title><rect x="77.2973%" y="389" width="1.6216%" height="15" fill="rgb(224,191,6)" fg:x="143" fg:w="3"/><text x="77.5473%" y="399.50"></text></g><g><title>mysql::conn::Conn::connect_stream (1 samples, 0.54%)</title><rect x="78.3784%" y="373" width="0.5405%" height="15" fill="rgb(230,227,24)" fg:x="145" fg:w="1"/><text x="78.6284%" y="383.50"></text></g><g><title>mysql::io::Stream::connect_tcp (1 samples, 0.54%)</title><rect x="78.3784%" y="357" width="0.5405%" height="15" fill="rgb(228,80,19)" fg:x="145" fg:w="1"/><text x="78.6284%" y="367.50"></text></g><g><title>mysql::io::tcp::MyTcpBuilder&lt;T&gt;::connect (1 samples, 0.54%)</title><rect x="78.3784%" y="341" width="0.5405%" height="15" fill="rgb(247,229,0)" fg:x="145" fg:w="1"/><text x="78.6284%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.54%)</title><rect x="78.3784%" y="325" width="0.5405%" height="15" fill="rgb(237,194,15)" fg:x="145" fg:w="1"/><text x="78.6284%" y="335.50"></text></g><g><title>__connect (1 samples, 0.54%)</title><rect x="78.3784%" y="309" width="0.5405%" height="15" fill="rgb(219,203,20)" fg:x="145" fg:w="1"/><text x="78.6284%" y="319.50"></text></g><g><title>mysql::conn::Conn::can_improved (2 samples, 1.08%)</title><rect x="78.9189%" y="373" width="1.0811%" height="15" fill="rgb(234,128,8)" fg:x="146" fg:w="2"/><text x="79.1689%" y="383.50"></text></g><g><title>mysql::conn::Conn::get_system_var (1 samples, 0.54%)</title><rect x="79.4595%" y="357" width="0.5405%" height="15" fill="rgb(248,202,8)" fg:x="147" fg:w="1"/><text x="79.7095%" y="367.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.54%)</title><rect x="79.4595%" y="341" width="0.5405%" height="15" fill="rgb(206,104,37)" fg:x="147" fg:w="1"/><text x="79.7095%" y="351.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.54%)</title><rect x="79.4595%" y="325" width="0.5405%" height="15" fill="rgb(223,8,27)" fg:x="147" fg:w="1"/><text x="79.7095%" y="335.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.54%)</title><rect x="79.4595%" y="309" width="0.5405%" height="15" fill="rgb(216,217,28)" fg:x="147" fg:w="1"/><text x="79.7095%" y="319.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::next_packet (1 samples, 0.54%)</title><rect x="79.4595%" y="293" width="0.5405%" height="15" fill="rgb(249,199,1)" fg:x="147" fg:w="1"/><text x="79.7095%" y="303.50"></text></g><g><title>__recvfrom (1 samples, 0.54%)</title><rect x="79.4595%" y="277" width="0.5405%" height="15" fill="rgb(240,85,17)" fg:x="147" fg:w="1"/><text x="79.7095%" y="287.50"></text></g><g><title>mysql::conn::Conn::connect (1 samples, 0.54%)</title><rect x="80.0000%" y="373" width="0.5405%" height="15" fill="rgb(206,108,45)" fg:x="148" fg:w="1"/><text x="80.2500%" y="383.50"></text></g><g><title>mysql_common::packets::HandshakePacket::server_version_parsed (1 samples, 0.54%)</title><rect x="80.0000%" y="357" width="0.5405%" height="15" fill="rgb(245,210,41)" fg:x="148" fg:w="1"/><text x="80.2500%" y="367.50"></text></g><g><title>regex::regex::bytes::Regex::captures_at (1 samples, 0.54%)</title><rect x="80.0000%" y="341" width="0.5405%" height="15" fill="rgb(206,13,37)" fg:x="148" fg:w="1"/><text x="80.2500%" y="351.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (1 samples, 0.54%)</title><rect x="80.0000%" y="325" width="0.5405%" height="15" fill="rgb(250,61,18)" fg:x="148" fg:w="1"/><text x="80.2500%" y="335.50"></text></g><g><title>regex_automata::meta::strategy::Core::search_slots_nofail (1 samples, 0.54%)</title><rect x="80.0000%" y="309" width="0.5405%" height="15" fill="rgb(235,172,48)" fg:x="148" fg:w="1"/><text x="80.2500%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots (1 samples, 0.54%)</title><rect x="80.0000%" y="293" width="0.5405%" height="15" fill="rgb(249,201,17)" fg:x="148" fg:w="1"/><text x="80.2500%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::backtrack::BoundedBacktracker::try_search_slots_imp (1 samples, 0.54%)</title><rect x="80.0000%" y="277" width="0.5405%" height="15" fill="rgb(219,208,6)" fg:x="148" fg:w="1"/><text x="80.2500%" y="287.50"></text></g><g><title>_platform_memset (1 samples, 0.54%)</title><rect x="80.0000%" y="261" width="0.5405%" height="15" fill="rgb(248,31,23)" fg:x="148" fg:w="1"/><text x="80.2500%" y="271.50"></text></g><g><title>mysql::io::Stream::connect_socket (1 samples, 0.54%)</title><rect x="80.5405%" y="357" width="0.5405%" height="15" fill="rgb(245,15,42)" fg:x="149" fg:w="1"/><text x="80.7905%" y="367.50"></text></g><g><title>close (1 samples, 0.54%)</title><rect x="80.5405%" y="341" width="0.5405%" height="15" fill="rgb(222,217,39)" fg:x="149" fg:w="1"/><text x="80.7905%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.54%)</title><rect x="81.0811%" y="325" width="0.5405%" height="15" fill="rgb(210,219,27)" fg:x="150" fg:w="1"/><text x="81.3311%" y="335.50"></text></g><g><title>__connect (1 samples, 0.54%)</title><rect x="81.0811%" y="309" width="0.5405%" height="15" fill="rgb(252,166,36)" fg:x="150" fg:w="1"/><text x="81.3311%" y="319.50"></text></g><g><title>dingo_test_runner::tester::database::Database::init_for_test (6 samples, 3.24%)</title><rect x="78.9189%" y="469" width="3.2432%" height="15" fill="rgb(245,132,34)" fg:x="146" fg:w="6"/><text x="79.1689%" y="479.50">din..</text></g><g><title>dingo_test_runner::tester::database::MySQLDatabase::switch_database (6 samples, 3.24%)</title><rect x="78.9189%" y="453" width="3.2432%" height="15" fill="rgb(236,54,3)" fg:x="146" fg:w="6"/><text x="79.1689%" y="463.50">din..</text></g><g><title>mysql::conn::pool::Pool::new (6 samples, 3.24%)</title><rect x="78.9189%" y="437" width="3.2432%" height="15" fill="rgb(241,173,43)" fg:x="146" fg:w="6"/><text x="79.1689%" y="447.50">mys..</text></g><g><title>mysql::conn::pool::inner::Inner::new (6 samples, 3.24%)</title><rect x="78.9189%" y="421" width="3.2432%" height="15" fill="rgb(215,190,9)" fg:x="146" fg:w="6"/><text x="79.1689%" y="431.50">mys..</text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (6 samples, 3.24%)</title><rect x="78.9189%" y="405" width="3.2432%" height="15" fill="rgb(242,101,16)" fg:x="146" fg:w="6"/><text x="79.1689%" y="415.50">mys..</text></g><g><title>mysql::conn::Conn::new (6 samples, 3.24%)</title><rect x="78.9189%" y="389" width="3.2432%" height="15" fill="rgb(223,190,21)" fg:x="146" fg:w="6"/><text x="79.1689%" y="399.50">mys..</text></g><g><title>mysql::conn::Conn::connect_stream (3 samples, 1.62%)</title><rect x="80.5405%" y="373" width="1.6216%" height="15" fill="rgb(215,228,25)" fg:x="149" fg:w="3"/><text x="80.7905%" y="383.50"></text></g><g><title>mysql::io::Stream::connect_tcp (2 samples, 1.08%)</title><rect x="81.0811%" y="357" width="1.0811%" height="15" fill="rgb(225,36,22)" fg:x="150" fg:w="2"/><text x="81.3311%" y="367.50"></text></g><g><title>mysql::io::tcp::MyTcpBuilder&lt;T&gt;::connect (2 samples, 1.08%)</title><rect x="81.0811%" y="341" width="1.0811%" height="15" fill="rgb(251,106,46)" fg:x="150" fg:w="2"/><text x="81.3311%" y="351.50"></text></g><g><title>setsockopt (1 samples, 0.54%)</title><rect x="81.6216%" y="325" width="0.5405%" height="15" fill="rgb(208,90,1)" fg:x="151" fg:w="1"/><text x="81.8716%" y="335.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (11 samples, 5.95%)</title><rect x="76.7568%" y="533" width="5.9459%" height="15" fill="rgb(243,10,4)" fg:x="142" fg:w="11"/><text x="77.0068%" y="543.50">rayon_co..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (11 samples, 5.95%)</title><rect x="76.7568%" y="517" width="5.9459%" height="15" fill="rgb(212,137,27)" fg:x="142" fg:w="11"/><text x="77.0068%" y="527.50">rayon_co..</text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (11 samples, 5.95%)</title><rect x="76.7568%" y="501" width="5.9459%" height="15" fill="rgb(231,220,49)" fg:x="142" fg:w="11"/><text x="77.0068%" y="511.50">core::op..</text></g><g><title>dingo_test_runner::tester::tester::Tester::run_test_file (7 samples, 3.78%)</title><rect x="78.9189%" y="485" width="3.7838%" height="15" fill="rgb(237,96,20)" fg:x="146" fg:w="7"/><text x="79.1689%" y="495.50">ding..</text></g><g><title>std::fs::read_to_string::inner (1 samples, 0.54%)</title><rect x="82.1622%" y="469" width="0.5405%" height="15" fill="rgb(239,229,30)" fg:x="152" fg:w="1"/><text x="82.4122%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.54%)</title><rect x="82.1622%" y="453" width="0.5405%" height="15" fill="rgb(219,65,33)" fg:x="152" fg:w="1"/><text x="82.4122%" y="463.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (12 samples, 6.49%)</title><rect x="76.7568%" y="565" width="6.4865%" height="15" fill="rgb(243,134,7)" fg:x="142" fg:w="12"/><text x="77.0068%" y="575.50">&lt;rayon::..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (12 samples, 6.49%)</title><rect x="76.7568%" y="549" width="6.4865%" height="15" fill="rgb(216,177,54)" fg:x="142" fg:w="12"/><text x="77.0068%" y="559.50">rayon_co..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.54%)</title><rect x="82.7027%" y="533" width="0.5405%" height="15" fill="rgb(211,160,20)" fg:x="153" fg:w="1"/><text x="82.9527%" y="543.50"></text></g><g><title>swtch_pri (1 samples, 0.54%)</title><rect x="82.7027%" y="517" width="0.5405%" height="15" fill="rgb(239,85,39)" fg:x="153" fg:w="1"/><text x="82.9527%" y="527.50"></text></g><g><title>dingo_test_runner::tester::connection_manager::ConnectionManager::new (1 samples, 0.54%)</title><rect x="83.2432%" y="501" width="0.5405%" height="15" fill="rgb(232,125,22)" fg:x="154" fg:w="1"/><text x="83.4932%" y="511.50"></text></g><g><title>dingo_test_runner::tester::database::create_database_with_retry (1 samples, 0.54%)</title><rect x="83.2432%" y="485" width="0.5405%" height="15" fill="rgb(244,57,34)" fg:x="154" fg:w="1"/><text x="83.4932%" y="495.50"></text></g><g><title>mysql::conn::pool::Pool::new (1 samples, 0.54%)</title><rect x="83.2432%" y="469" width="0.5405%" height="15" fill="rgb(214,203,32)" fg:x="154" fg:w="1"/><text x="83.4932%" y="479.50"></text></g><g><title>mysql::conn::pool::inner::Inner::new (1 samples, 0.54%)</title><rect x="83.2432%" y="453" width="0.5405%" height="15" fill="rgb(207,58,43)" fg:x="154" fg:w="1"/><text x="83.4932%" y="463.50"></text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (1 samples, 0.54%)</title><rect x="83.2432%" y="437" width="0.5405%" height="15" fill="rgb(215,193,15)" fg:x="154" fg:w="1"/><text x="83.4932%" y="447.50"></text></g><g><title>mysql::conn::Conn::new (1 samples, 0.54%)</title><rect x="83.2432%" y="421" width="0.5405%" height="15" fill="rgb(232,15,44)" fg:x="154" fg:w="1"/><text x="83.4932%" y="431.50"></text></g><g><title>mysql::conn::Conn::connect (1 samples, 0.54%)</title><rect x="83.2432%" y="405" width="0.5405%" height="15" fill="rgb(212,3,48)" fg:x="154" fg:w="1"/><text x="83.4932%" y="415.50"></text></g><g><title>mysql_common::packets::HandshakePacket::server_version_parsed (1 samples, 0.54%)</title><rect x="83.2432%" y="389" width="0.5405%" height="15" fill="rgb(218,128,7)" fg:x="154" fg:w="1"/><text x="83.4932%" y="399.50"></text></g><g><title>std::sys::sync::once::queue::Once::call (1 samples, 0.54%)</title><rect x="83.2432%" y="373" width="0.5405%" height="15" fill="rgb(226,216,39)" fg:x="154" fg:w="1"/><text x="83.4932%" y="383.50"></text></g><g><title>std::sync::poison::once::Once::call_once::_{{closure}} (1 samples, 0.54%)</title><rect x="83.2432%" y="357" width="0.5405%" height="15" fill="rgb(243,47,51)" fg:x="154" fg:w="1"/><text x="83.4932%" y="367.50"></text></g><g><title>regex::regex::bytes::Regex::new (1 samples, 0.54%)</title><rect x="83.2432%" y="341" width="0.5405%" height="15" fill="rgb(241,183,40)" fg:x="154" fg:w="1"/><text x="83.4932%" y="351.50"></text></g><g><title>regex::builders::Builder::build_one_bytes (1 samples, 0.54%)</title><rect x="83.2432%" y="325" width="0.5405%" height="15" fill="rgb(231,217,32)" fg:x="154" fg:w="1"/><text x="83.4932%" y="335.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.54%)</title><rect x="83.2432%" y="309" width="0.5405%" height="15" fill="rgb(229,61,38)" fg:x="154" fg:w="1"/><text x="83.4932%" y="319.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.54%)</title><rect x="83.2432%" y="293" width="0.5405%" height="15" fill="rgb(225,210,5)" fg:x="154" fg:w="1"/><text x="83.4932%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.54%)</title><rect x="83.2432%" y="277" width="0.5405%" height="15" fill="rgb(231,79,45)" fg:x="154" fg:w="1"/><text x="83.4932%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.54%)</title><rect x="83.2432%" y="261" width="0.5405%" height="15" fill="rgb(224,100,7)" fg:x="154" fg:w="1"/><text x="83.4932%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.54%)</title><rect x="83.2432%" y="245" width="0.5405%" height="15" fill="rgb(241,198,18)" fg:x="154" fg:w="1"/><text x="83.4932%" y="255.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_bounded (1 samples, 0.54%)</title><rect x="83.2432%" y="229" width="0.5405%" height="15" fill="rgb(252,97,53)" fg:x="154" fg:w="1"/><text x="83.4932%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.54%)</title><rect x="83.2432%" y="213" width="0.5405%" height="15" fill="rgb(220,88,7)" fg:x="154" fg:w="1"/><text x="83.4932%" y="223.50"></text></g><g><title>dingo_test_runner::tester::tester::Tester::new (2 samples, 1.08%)</title><rect x="83.2432%" y="517" width="1.0811%" height="15" fill="rgb(213,176,14)" fg:x="154" fg:w="2"/><text x="83.4932%" y="527.50"></text></g><g><title>dingo_test_runner::util::memory_pool::get_byte_vec (1 samples, 0.54%)</title><rect x="83.7838%" y="501" width="0.5405%" height="15" fill="rgb(246,73,7)" fg:x="155" fg:w="1"/><text x="84.0338%" y="511.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.54%)</title><rect x="83.7838%" y="485" width="0.5405%" height="15" fill="rgb(245,64,36)" fg:x="155" fg:w="1"/><text x="84.0338%" y="495.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.54%)</title><rect x="83.7838%" y="469" width="0.5405%" height="15" fill="rgb(245,80,10)" fg:x="155" fg:w="1"/><text x="84.0338%" y="479.50"></text></g><g><title>mysql::conn::Conn::can_improved (1 samples, 0.54%)</title><rect x="84.3243%" y="405" width="0.5405%" height="15" fill="rgb(232,107,50)" fg:x="156" fg:w="1"/><text x="84.5743%" y="415.50"></text></g><g><title>mysql::conn::Conn::get_system_var (1 samples, 0.54%)</title><rect x="84.3243%" y="389" width="0.5405%" height="15" fill="rgb(253,3,0)" fg:x="156" fg:w="1"/><text x="84.5743%" y="399.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.54%)</title><rect x="84.3243%" y="373" width="0.5405%" height="15" fill="rgb(212,99,53)" fg:x="156" fg:w="1"/><text x="84.5743%" y="383.50"></text></g><g><title>mysql::conn::Conn::write_command (1 samples, 0.54%)</title><rect x="84.3243%" y="357" width="0.5405%" height="15" fill="rgb(249,111,54)" fg:x="156" fg:w="1"/><text x="84.5743%" y="367.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.54%)</title><rect x="84.3243%" y="341" width="0.5405%" height="15" fill="rgb(249,55,30)" fg:x="156" fg:w="1"/><text x="84.5743%" y="351.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.54%)</title><rect x="84.3243%" y="325" width="0.5405%" height="15" fill="rgb(237,47,42)" fg:x="156" fg:w="1"/><text x="84.5743%" y="335.50"></text></g><g><title>__sendto (1 samples, 0.54%)</title><rect x="84.3243%" y="309" width="0.5405%" height="15" fill="rgb(211,20,18)" fg:x="156" fg:w="1"/><text x="84.5743%" y="319.50"></text></g><g><title>mysql::conn::Conn::connect (1 samples, 0.54%)</title><rect x="84.8649%" y="405" width="0.5405%" height="15" fill="rgb(231,203,46)" fg:x="157" fg:w="1"/><text x="85.1149%" y="415.50"></text></g><g><title>mysql::conn::Conn::get_system_var (1 samples, 0.54%)</title><rect x="84.8649%" y="389" width="0.5405%" height="15" fill="rgb(237,142,3)" fg:x="157" fg:w="1"/><text x="85.1149%" y="399.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.54%)</title><rect x="84.8649%" y="373" width="0.5405%" height="15" fill="rgb(241,107,1)" fg:x="157" fg:w="1"/><text x="85.1149%" y="383.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.54%)</title><rect x="84.8649%" y="357" width="0.5405%" height="15" fill="rgb(229,83,13)" fg:x="157" fg:w="1"/><text x="85.1149%" y="367.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.54%)</title><rect x="84.8649%" y="341" width="0.5405%" height="15" fill="rgb(241,91,40)" fg:x="157" fg:w="1"/><text x="85.1149%" y="351.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::next_packet (1 samples, 0.54%)</title><rect x="84.8649%" y="325" width="0.5405%" height="15" fill="rgb(225,3,45)" fg:x="157" fg:w="1"/><text x="85.1149%" y="335.50"></text></g><g><title>__recvfrom (1 samples, 0.54%)</title><rect x="84.8649%" y="309" width="0.5405%" height="15" fill="rgb(244,223,14)" fg:x="157" fg:w="1"/><text x="85.1149%" y="319.50"></text></g><g><title>mysql::io::Stream::connect_socket (1 samples, 0.54%)</title><rect x="85.4054%" y="389" width="0.5405%" height="15" fill="rgb(224,124,37)" fg:x="158" fg:w="1"/><text x="85.6554%" y="399.50"></text></g><g><title>close (1 samples, 0.54%)</title><rect x="85.4054%" y="373" width="0.5405%" height="15" fill="rgb(251,171,30)" fg:x="158" fg:w="1"/><text x="85.6554%" y="383.50"></text></g><g><title>dingo_test_runner::tester::database::Database::init_for_test (4 samples, 2.16%)</title><rect x="84.3243%" y="501" width="2.1622%" height="15" fill="rgb(236,46,54)" fg:x="156" fg:w="4"/><text x="84.5743%" y="511.50">d..</text></g><g><title>dingo_test_runner::tester::database::MySQLDatabase::switch_database (4 samples, 2.16%)</title><rect x="84.3243%" y="485" width="2.1622%" height="15" fill="rgb(245,213,5)" fg:x="156" fg:w="4"/><text x="84.5743%" y="495.50">d..</text></g><g><title>mysql::conn::pool::Pool::new (4 samples, 2.16%)</title><rect x="84.3243%" y="469" width="2.1622%" height="15" fill="rgb(230,144,27)" fg:x="156" fg:w="4"/><text x="84.5743%" y="479.50">m..</text></g><g><title>mysql::conn::pool::inner::Inner::new (4 samples, 2.16%)</title><rect x="84.3243%" y="453" width="2.1622%" height="15" fill="rgb(220,86,6)" fg:x="156" fg:w="4"/><text x="84.5743%" y="463.50">m..</text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (4 samples, 2.16%)</title><rect x="84.3243%" y="437" width="2.1622%" height="15" fill="rgb(240,20,13)" fg:x="156" fg:w="4"/><text x="84.5743%" y="447.50">m..</text></g><g><title>mysql::conn::Conn::new (4 samples, 2.16%)</title><rect x="84.3243%" y="421" width="2.1622%" height="15" fill="rgb(217,89,34)" fg:x="156" fg:w="4"/><text x="84.5743%" y="431.50">m..</text></g><g><title>mysql::conn::Conn::connect_stream (2 samples, 1.08%)</title><rect x="85.4054%" y="405" width="1.0811%" height="15" fill="rgb(229,13,5)" fg:x="158" fg:w="2"/><text x="85.6554%" y="415.50"></text></g><g><title>mysql::io::Stream::connect_tcp (1 samples, 0.54%)</title><rect x="85.9459%" y="389" width="0.5405%" height="15" fill="rgb(244,67,35)" fg:x="159" fg:w="1"/><text x="86.1959%" y="399.50"></text></g><g><title>mysql::io::tcp::MyTcpBuilder&lt;T&gt;::connect (1 samples, 0.54%)</title><rect x="85.9459%" y="373" width="0.5405%" height="15" fill="rgb(221,40,2)" fg:x="159" fg:w="1"/><text x="86.1959%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.54%)</title><rect x="85.9459%" y="357" width="0.5405%" height="15" fill="rgb(237,157,21)" fg:x="159" fg:w="1"/><text x="86.1959%" y="367.50"></text></g><g><title>__connect (1 samples, 0.54%)</title><rect x="85.9459%" y="341" width="0.5405%" height="15" fill="rgb(222,94,11)" fg:x="159" fg:w="1"/><text x="86.1959%" y="351.50"></text></g><g><title>dingo_test_runner::tester::database::MySQLDatabase::execute (2 samples, 1.08%)</title><rect x="86.4865%" y="469" width="1.0811%" height="15" fill="rgb(249,113,6)" fg:x="160" fg:w="2"/><text x="86.7365%" y="479.50"></text></g><g><title>mysql::conn::queryable::Queryable::query_drop (2 samples, 1.08%)</title><rect x="86.4865%" y="453" width="1.0811%" height="15" fill="rgb(238,137,36)" fg:x="160" fg:w="2"/><text x="86.7365%" y="463.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (2 samples, 1.08%)</title><rect x="86.4865%" y="437" width="1.0811%" height="15" fill="rgb(210,102,26)" fg:x="160" fg:w="2"/><text x="86.7365%" y="447.50"></text></g><g><title>mysql::conn::Conn::read_packet (2 samples, 1.08%)</title><rect x="86.4865%" y="421" width="1.0811%" height="15" fill="rgb(218,30,30)" fg:x="160" fg:w="2"/><text x="86.7365%" y="431.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::next_packet (2 samples, 1.08%)</title><rect x="86.4865%" y="405" width="1.0811%" height="15" fill="rgb(214,67,26)" fg:x="160" fg:w="2"/><text x="86.7365%" y="415.50"></text></g><g><title>__recvfrom (1 samples, 0.54%)</title><rect x="87.0270%" y="389" width="0.5405%" height="15" fill="rgb(251,9,53)" fg:x="161" fg:w="1"/><text x="87.2770%" y="399.50"></text></g><g><title>mysql::conn::Conn::connect (1 samples, 0.54%)</title><rect x="87.5676%" y="389" width="0.5405%" height="15" fill="rgb(228,204,25)" fg:x="162" fg:w="1"/><text x="87.8176%" y="399.50"></text></g><g><title>mysql::conn::Conn::continue_auth (1 samples, 0.54%)</title><rect x="87.5676%" y="373" width="0.5405%" height="15" fill="rgb(207,153,8)" fg:x="162" fg:w="1"/><text x="87.8176%" y="383.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.54%)</title><rect x="87.5676%" y="357" width="0.5405%" height="15" fill="rgb(242,9,16)" fg:x="162" fg:w="1"/><text x="87.8176%" y="367.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::next_packet (1 samples, 0.54%)</title><rect x="87.5676%" y="341" width="0.5405%" height="15" fill="rgb(217,211,10)" fg:x="162" fg:w="1"/><text x="87.8176%" y="351.50"></text></g><g><title>__recvfrom (1 samples, 0.54%)</title><rect x="87.5676%" y="325" width="0.5405%" height="15" fill="rgb(219,228,52)" fg:x="162" fg:w="1"/><text x="87.8176%" y="335.50"></text></g><g><title>dingo_test_runner::tester::tester::Tester::post_process (4 samples, 2.16%)</title><rect x="86.4865%" y="501" width="2.1622%" height="15" fill="rgb(231,92,29)" fg:x="160" fg:w="4"/><text x="86.7365%" y="511.50">d..</text></g><g><title>dingo_test_runner::tester::database::Database::cleanup_after_test (4 samples, 2.16%)</title><rect x="86.4865%" y="485" width="2.1622%" height="15" fill="rgb(232,8,23)" fg:x="160" fg:w="4"/><text x="86.7365%" y="495.50">d..</text></g><g><title>dingo_test_runner::tester::database::MySQLDatabase::switch_database (2 samples, 1.08%)</title><rect x="87.5676%" y="469" width="1.0811%" height="15" fill="rgb(216,211,34)" fg:x="162" fg:w="2"/><text x="87.8176%" y="479.50"></text></g><g><title>mysql::conn::pool::Pool::new (2 samples, 1.08%)</title><rect x="87.5676%" y="453" width="1.0811%" height="15" fill="rgb(236,151,0)" fg:x="162" fg:w="2"/><text x="87.8176%" y="463.50"></text></g><g><title>mysql::conn::pool::inner::Inner::new (2 samples, 1.08%)</title><rect x="87.5676%" y="437" width="1.0811%" height="15" fill="rgb(209,168,3)" fg:x="162" fg:w="2"/><text x="87.8176%" y="447.50"></text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (2 samples, 1.08%)</title><rect x="87.5676%" y="421" width="1.0811%" height="15" fill="rgb(208,129,28)" fg:x="162" fg:w="2"/><text x="87.8176%" y="431.50"></text></g><g><title>mysql::conn::Conn::new (2 samples, 1.08%)</title><rect x="87.5676%" y="405" width="1.0811%" height="15" fill="rgb(229,78,22)" fg:x="162" fg:w="2"/><text x="87.8176%" y="415.50"></text></g><g><title>mysql::conn::Conn::connect_stream (1 samples, 0.54%)</title><rect x="88.1081%" y="389" width="0.5405%" height="15" fill="rgb(228,187,13)" fg:x="163" fg:w="1"/><text x="88.3581%" y="399.50"></text></g><g><title>mysql::io::Stream::connect_socket (1 samples, 0.54%)</title><rect x="88.1081%" y="373" width="0.5405%" height="15" fill="rgb(240,119,24)" fg:x="163" fg:w="1"/><text x="88.3581%" y="383.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::connect (1 samples, 0.54%)</title><rect x="88.1081%" y="357" width="0.5405%" height="15" fill="rgb(209,194,42)" fg:x="163" fg:w="1"/><text x="88.3581%" y="367.50"></text></g><g><title>socket (1 samples, 0.54%)</title><rect x="88.1081%" y="341" width="0.5405%" height="15" fill="rgb(247,200,46)" fg:x="163" fg:w="1"/><text x="88.3581%" y="351.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (12 samples, 6.49%)</title><rect x="83.2432%" y="533" width="6.4865%" height="15" fill="rgb(218,76,16)" fg:x="154" fg:w="12"/><text x="83.4932%" y="543.50">core::op..</text></g><g><title>dingo_test_runner::tester::tester::Tester::run_test_file (10 samples, 5.41%)</title><rect x="84.3243%" y="517" width="5.4054%" height="15" fill="rgb(225,21,48)" fg:x="156" fg:w="10"/><text x="84.5743%" y="527.50">dingo_t..</text></g><g><title>std::fs::read_to_string::inner (2 samples, 1.08%)</title><rect x="88.6486%" y="501" width="1.0811%" height="15" fill="rgb(239,223,50)" fg:x="164" fg:w="2"/><text x="88.8986%" y="511.50"></text></g><g><title>std::fs::OpenOptions::_open (2 samples, 1.08%)</title><rect x="88.6486%" y="485" width="1.0811%" height="15" fill="rgb(244,45,21)" fg:x="164" fg:w="2"/><text x="88.8986%" y="495.50"></text></g><g><title>__open (2 samples, 1.08%)</title><rect x="88.6486%" y="469" width="1.0811%" height="15" fill="rgb(232,33,43)" fg:x="164" fg:w="2"/><text x="88.8986%" y="479.50"></text></g><g><title>mysql::io::Stream::connect_socket (1 samples, 0.54%)</title><rect x="89.7297%" y="373" width="0.5405%" height="15" fill="rgb(209,8,3)" fg:x="166" fg:w="1"/><text x="89.9797%" y="383.50"></text></g><g><title>close (1 samples, 0.54%)</title><rect x="89.7297%" y="357" width="0.5405%" height="15" fill="rgb(214,25,53)" fg:x="166" fg:w="1"/><text x="89.9797%" y="367.50"></text></g><g><title>__connect (2 samples, 1.08%)</title><rect x="90.2703%" y="325" width="1.0811%" height="15" fill="rgb(254,186,54)" fg:x="167" fg:w="2"/><text x="90.5203%" y="335.50"></text></g><g><title>dingo_test_runner::tester::tester::Tester::new (4 samples, 2.16%)</title><rect x="89.7297%" y="501" width="2.1622%" height="15" fill="rgb(208,174,49)" fg:x="166" fg:w="4"/><text x="89.9797%" y="511.50">d..</text></g><g><title>dingo_test_runner::tester::connection_manager::ConnectionManager::new (4 samples, 2.16%)</title><rect x="89.7297%" y="485" width="2.1622%" height="15" fill="rgb(233,191,51)" fg:x="166" fg:w="4"/><text x="89.9797%" y="495.50">d..</text></g><g><title>dingo_test_runner::tester::database::create_database_with_retry (4 samples, 2.16%)</title><rect x="89.7297%" y="469" width="2.1622%" height="15" fill="rgb(222,134,10)" fg:x="166" fg:w="4"/><text x="89.9797%" y="479.50">d..</text></g><g><title>mysql::conn::pool::Pool::new (4 samples, 2.16%)</title><rect x="89.7297%" y="453" width="2.1622%" height="15" fill="rgb(230,226,20)" fg:x="166" fg:w="4"/><text x="89.9797%" y="463.50">m..</text></g><g><title>mysql::conn::pool::inner::Inner::new (4 samples, 2.16%)</title><rect x="89.7297%" y="437" width="2.1622%" height="15" fill="rgb(251,111,25)" fg:x="166" fg:w="4"/><text x="89.9797%" y="447.50">m..</text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (4 samples, 2.16%)</title><rect x="89.7297%" y="421" width="2.1622%" height="15" fill="rgb(224,40,46)" fg:x="166" fg:w="4"/><text x="89.9797%" y="431.50">m..</text></g><g><title>mysql::conn::Conn::new (4 samples, 2.16%)</title><rect x="89.7297%" y="405" width="2.1622%" height="15" fill="rgb(236,108,47)" fg:x="166" fg:w="4"/><text x="89.9797%" y="415.50">m..</text></g><g><title>mysql::conn::Conn::connect_stream (4 samples, 2.16%)</title><rect x="89.7297%" y="389" width="2.1622%" height="15" fill="rgb(234,93,0)" fg:x="166" fg:w="4"/><text x="89.9797%" y="399.50">m..</text></g><g><title>mysql::io::Stream::connect_tcp (3 samples, 1.62%)</title><rect x="90.2703%" y="373" width="1.6216%" height="15" fill="rgb(224,213,32)" fg:x="167" fg:w="3"/><text x="90.5203%" y="383.50"></text></g><g><title>mysql::io::tcp::MyTcpBuilder&lt;T&gt;::connect (3 samples, 1.62%)</title><rect x="90.2703%" y="357" width="1.6216%" height="15" fill="rgb(251,11,48)" fg:x="167" fg:w="3"/><text x="90.5203%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 1.62%)</title><rect x="90.2703%" y="341" width="1.6216%" height="15" fill="rgb(236,173,5)" fg:x="167" fg:w="3"/><text x="90.5203%" y="351.50"></text></g><g><title>socket (1 samples, 0.54%)</title><rect x="91.3514%" y="325" width="0.5405%" height="15" fill="rgb(230,95,12)" fg:x="169" fg:w="1"/><text x="91.6014%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;mysql::conn::pool::PooledConn&gt; (1 samples, 0.54%)</title><rect x="91.8919%" y="453" width="0.5405%" height="15" fill="rgb(232,209,1)" fg:x="170" fg:w="1"/><text x="92.1419%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.54%)</title><rect x="91.8919%" y="437" width="0.5405%" height="15" fill="rgb(232,6,1)" fg:x="170" fg:w="1"/><text x="92.1419%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;mysql::conn::pool::inner::Protected&gt;&gt; (1 samples, 0.54%)</title><rect x="91.8919%" y="421" width="0.5405%" height="15" fill="rgb(210,224,50)" fg:x="170" fg:w="1"/><text x="92.1419%" y="431.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.54%)</title><rect x="91.8919%" y="405" width="0.5405%" height="15" fill="rgb(228,127,35)" fg:x="170" fg:w="1"/><text x="92.1419%" y="415.50"></text></g><g><title>close (1 samples, 0.54%)</title><rect x="91.8919%" y="389" width="0.5405%" height="15" fill="rgb(245,102,45)" fg:x="170" fg:w="1"/><text x="92.1419%" y="399.50"></text></g><g><title>mysql::conn::Conn::connect (1 samples, 0.54%)</title><rect x="92.4324%" y="389" width="0.5405%" height="15" fill="rgb(214,1,49)" fg:x="171" fg:w="1"/><text x="92.6824%" y="399.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.54%)</title><rect x="92.4324%" y="373" width="0.5405%" height="15" fill="rgb(226,163,40)" fg:x="171" fg:w="1"/><text x="92.6824%" y="383.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.54%)</title><rect x="92.4324%" y="357" width="0.5405%" height="15" fill="rgb(239,212,28)" fg:x="171" fg:w="1"/><text x="92.6824%" y="367.50"></text></g><g><title>__sendto (1 samples, 0.54%)</title><rect x="92.4324%" y="341" width="0.5405%" height="15" fill="rgb(220,20,13)" fg:x="171" fg:w="1"/><text x="92.6824%" y="351.50"></text></g><g><title>mysql::io::Stream::connect_socket (1 samples, 0.54%)</title><rect x="92.9730%" y="373" width="0.5405%" height="15" fill="rgb(210,164,35)" fg:x="172" fg:w="1"/><text x="93.2230%" y="383.50"></text></g><g><title>close (1 samples, 0.54%)</title><rect x="92.9730%" y="357" width="0.5405%" height="15" fill="rgb(248,109,41)" fg:x="172" fg:w="1"/><text x="93.2230%" y="367.50"></text></g><g><title>dingo_test_runner::tester::database::Database::init_for_test (4 samples, 2.16%)</title><rect x="91.8919%" y="485" width="2.1622%" height="15" fill="rgb(238,23,50)" fg:x="170" fg:w="4"/><text x="92.1419%" y="495.50">d..</text></g><g><title>dingo_test_runner::tester::database::MySQLDatabase::switch_database (4 samples, 2.16%)</title><rect x="91.8919%" y="469" width="2.1622%" height="15" fill="rgb(211,48,49)" fg:x="170" fg:w="4"/><text x="92.1419%" y="479.50">d..</text></g><g><title>mysql::conn::pool::Pool::new (3 samples, 1.62%)</title><rect x="92.4324%" y="453" width="1.6216%" height="15" fill="rgb(223,36,21)" fg:x="171" fg:w="3"/><text x="92.6824%" y="463.50"></text></g><g><title>mysql::conn::pool::inner::Inner::new (3 samples, 1.62%)</title><rect x="92.4324%" y="437" width="1.6216%" height="15" fill="rgb(207,123,46)" fg:x="171" fg:w="3"/><text x="92.6824%" y="447.50"></text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (3 samples, 1.62%)</title><rect x="92.4324%" y="421" width="1.6216%" height="15" fill="rgb(240,218,32)" fg:x="171" fg:w="3"/><text x="92.6824%" y="431.50"></text></g><g><title>mysql::conn::Conn::new (3 samples, 1.62%)</title><rect x="92.4324%" y="405" width="1.6216%" height="15" fill="rgb(252,5,43)" fg:x="171" fg:w="3"/><text x="92.6824%" y="415.50"></text></g><g><title>mysql::conn::Conn::connect_stream (2 samples, 1.08%)</title><rect x="92.9730%" y="389" width="1.0811%" height="15" fill="rgb(252,84,19)" fg:x="172" fg:w="2"/><text x="93.2230%" y="399.50"></text></g><g><title>mysql::io::Stream::connect_tcp (1 samples, 0.54%)</title><rect x="93.5135%" y="373" width="0.5405%" height="15" fill="rgb(243,152,39)" fg:x="173" fg:w="1"/><text x="93.7635%" y="383.50"></text></g><g><title>mysql::io::tcp::MyTcpBuilder&lt;T&gt;::connect (1 samples, 0.54%)</title><rect x="93.5135%" y="357" width="0.5405%" height="15" fill="rgb(234,160,15)" fg:x="173" fg:w="1"/><text x="93.7635%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.54%)</title><rect x="93.5135%" y="341" width="0.5405%" height="15" fill="rgb(237,34,20)" fg:x="173" fg:w="1"/><text x="93.7635%" y="351.50"></text></g><g><title>__connect (1 samples, 0.54%)</title><rect x="93.5135%" y="325" width="0.5405%" height="15" fill="rgb(229,97,13)" fg:x="173" fg:w="1"/><text x="93.7635%" y="335.50"></text></g><g><title>dingo_test_runner::tester::tester::Tester::execute_query (1 samples, 0.54%)</title><rect x="94.0541%" y="485" width="0.5405%" height="15" fill="rgb(234,71,50)" fg:x="174" fg:w="1"/><text x="94.3041%" y="495.50"></text></g><g><title>dingo_test_runner::tester::handlers::let_handler::execute (1 samples, 0.54%)</title><rect x="94.0541%" y="469" width="0.5405%" height="15" fill="rgb(253,155,4)" fg:x="174" fg:w="1"/><text x="94.3041%" y="479.50"></text></g><g><title>regex::regex::string::Regex::new (1 samples, 0.54%)</title><rect x="94.0541%" y="453" width="0.5405%" height="15" fill="rgb(222,185,37)" fg:x="174" fg:w="1"/><text x="94.3041%" y="463.50"></text></g><g><title>regex::builders::Builder::build_one_string (1 samples, 0.54%)</title><rect x="94.0541%" y="437" width="0.5405%" height="15" fill="rgb(251,177,13)" fg:x="174" fg:w="1"/><text x="94.3041%" y="447.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.54%)</title><rect x="94.0541%" y="421" width="0.5405%" height="15" fill="rgb(250,179,40)" fg:x="174" fg:w="1"/><text x="94.3041%" y="431.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.54%)</title><rect x="94.0541%" y="405" width="0.5405%" height="15" fill="rgb(242,44,2)" fg:x="174" fg:w="1"/><text x="94.3041%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (1 samples, 0.54%)</title><rect x="94.0541%" y="389" width="0.5405%" height="15" fill="rgb(216,177,13)" fg:x="174" fg:w="1"/><text x="94.3041%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (1 samples, 0.54%)</title><rect x="94.0541%" y="373" width="0.5405%" height="15" fill="rgb(216,106,43)" fg:x="174" fg:w="1"/><text x="94.3041%" y="383.50"></text></g><g><title>&lt;mysql::conn::Conn as core::ops::drop::Drop&gt;::drop (1 samples, 0.54%)</title><rect x="94.5946%" y="373" width="0.5405%" height="15" fill="rgb(216,183,2)" fg:x="175" fg:w="1"/><text x="94.8446%" y="383.50"></text></g><g><title>mysql::conn::Conn::write_command (1 samples, 0.54%)</title><rect x="94.5946%" y="357" width="0.5405%" height="15" fill="rgb(249,75,3)" fg:x="175" fg:w="1"/><text x="94.8446%" y="367.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::send (1 samples, 0.54%)</title><rect x="94.5946%" y="341" width="0.5405%" height="15" fill="rgb(219,67,39)" fg:x="175" fg:w="1"/><text x="94.8446%" y="351.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.54%)</title><rect x="94.5946%" y="325" width="0.5405%" height="15" fill="rgb(253,228,2)" fg:x="175" fg:w="1"/><text x="94.8446%" y="335.50"></text></g><g><title>__sendto (1 samples, 0.54%)</title><rect x="94.5946%" y="309" width="0.5405%" height="15" fill="rgb(235,138,27)" fg:x="175" fg:w="1"/><text x="94.8446%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;mysql::conn::pool::PooledConn&gt; (2 samples, 1.08%)</title><rect x="94.5946%" y="437" width="1.0811%" height="15" fill="rgb(236,97,51)" fg:x="175" fg:w="2"/><text x="94.8446%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 1.08%)</title><rect x="94.5946%" y="421" width="1.0811%" height="15" fill="rgb(240,80,30)" fg:x="175" fg:w="2"/><text x="94.8446%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;mysql::conn::pool::inner::Protected&gt;&gt; (2 samples, 1.08%)</title><rect x="94.5946%" y="405" width="1.0811%" height="15" fill="rgb(230,178,19)" fg:x="175" fg:w="2"/><text x="94.8446%" y="415.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 1.08%)</title><rect x="94.5946%" y="389" width="1.0811%" height="15" fill="rgb(210,190,27)" fg:x="175" fg:w="2"/><text x="94.8446%" y="399.50"></text></g><g><title>close (1 samples, 0.54%)</title><rect x="95.1351%" y="373" width="0.5405%" height="15" fill="rgb(222,107,31)" fg:x="176" fg:w="1"/><text x="95.3851%" y="383.50"></text></g><g><title>mysql::conn::opts::OptsBuilder::ip_or_hostname (1 samples, 0.54%)</title><rect x="95.6757%" y="437" width="0.5405%" height="15" fill="rgb(216,127,34)" fg:x="177" fg:w="1"/><text x="95.9257%" y="447.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.54%)</title><rect x="95.6757%" y="421" width="0.5405%" height="15" fill="rgb(234,116,52)" fg:x="177" fg:w="1"/><text x="95.9257%" y="431.50"></text></g><g><title>url::host::Host::parse (1 samples, 0.54%)</title><rect x="95.6757%" y="405" width="0.5405%" height="15" fill="rgb(222,124,15)" fg:x="177" fg:w="1"/><text x="95.9257%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.54%)</title><rect x="95.6757%" y="389" width="0.5405%" height="15" fill="rgb(231,179,28)" fg:x="177" fg:w="1"/><text x="95.9257%" y="399.50"></text></g><g><title>dingo_test_runner::tester::tester::Tester::post_process (4 samples, 2.16%)</title><rect x="94.5946%" y="485" width="2.1622%" height="15" fill="rgb(226,93,45)" fg:x="175" fg:w="4"/><text x="94.8446%" y="495.50">d..</text></g><g><title>dingo_test_runner::tester::database::Database::cleanup_after_test (4 samples, 2.16%)</title><rect x="94.5946%" y="469" width="2.1622%" height="15" fill="rgb(215,8,51)" fg:x="175" fg:w="4"/><text x="94.8446%" y="479.50">d..</text></g><g><title>dingo_test_runner::tester::database::MySQLDatabase::switch_database (4 samples, 2.16%)</title><rect x="94.5946%" y="453" width="2.1622%" height="15" fill="rgb(223,106,5)" fg:x="175" fg:w="4"/><text x="94.8446%" y="463.50">d..</text></g><g><title>mysql::conn::pool::Pool::new (1 samples, 0.54%)</title><rect x="96.2162%" y="437" width="0.5405%" height="15" fill="rgb(250,191,5)" fg:x="178" fg:w="1"/><text x="96.4662%" y="447.50"></text></g><g><title>mysql::conn::pool::inner::Inner::new (1 samples, 0.54%)</title><rect x="96.2162%" y="421" width="0.5405%" height="15" fill="rgb(242,132,44)" fg:x="178" fg:w="1"/><text x="96.4662%" y="431.50"></text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (1 samples, 0.54%)</title><rect x="96.2162%" y="405" width="0.5405%" height="15" fill="rgb(251,152,29)" fg:x="178" fg:w="1"/><text x="96.4662%" y="415.50"></text></g><g><title>mysql::conn::Conn::new (1 samples, 0.54%)</title><rect x="96.2162%" y="389" width="0.5405%" height="15" fill="rgb(218,179,5)" fg:x="178" fg:w="1"/><text x="96.4662%" y="399.50"></text></g><g><title>mysql::conn::Conn::connect_stream (1 samples, 0.54%)</title><rect x="96.2162%" y="373" width="0.5405%" height="15" fill="rgb(227,67,19)" fg:x="178" fg:w="1"/><text x="96.4662%" y="383.50"></text></g><g><title>mysql::io::Stream::connect_socket (1 samples, 0.54%)</title><rect x="96.2162%" y="357" width="0.5405%" height="15" fill="rgb(233,119,31)" fg:x="178" fg:w="1"/><text x="96.4662%" y="367.50"></text></g><g><title>close (1 samples, 0.54%)</title><rect x="96.2162%" y="341" width="0.5405%" height="15" fill="rgb(241,120,22)" fg:x="178" fg:w="1"/><text x="96.4662%" y="351.50"></text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (14 samples, 7.57%)</title><rect x="89.7297%" y="517" width="7.5676%" height="15" fill="rgb(224,102,30)" fg:x="166" fg:w="14"/><text x="89.9797%" y="527.50">core::ops:..</text></g><g><title>dingo_test_runner::tester::tester::Tester::run_test_file (10 samples, 5.41%)</title><rect x="91.8919%" y="501" width="5.4054%" height="15" fill="rgb(210,164,37)" fg:x="170" fg:w="10"/><text x="92.1419%" y="511.50">dingo_t..</text></g><g><title>std::fs::read_to_string::inner (1 samples, 0.54%)</title><rect x="96.7568%" y="485" width="0.5405%" height="15" fill="rgb(226,191,16)" fg:x="179" fg:w="1"/><text x="97.0068%" y="495.50"></text></g><g><title>read (1 samples, 0.54%)</title><rect x="96.7568%" y="469" width="0.5405%" height="15" fill="rgb(214,40,45)" fg:x="179" fg:w="1"/><text x="97.0068%" y="479.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (15 samples, 8.11%)</title><rect x="89.7297%" y="533" width="8.1081%" height="15" fill="rgb(244,29,26)" fg:x="166" fg:w="15"/><text x="89.9797%" y="543.50">rayon_core:..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.54%)</title><rect x="97.2973%" y="517" width="0.5405%" height="15" fill="rgb(216,16,5)" fg:x="180" fg:w="1"/><text x="97.5473%" y="527.50"></text></g><g><title>swtch_pri (1 samples, 0.54%)</title><rect x="97.2973%" y="501" width="0.5405%" height="15" fill="rgb(249,76,35)" fg:x="180" fg:w="1"/><text x="97.5473%" y="511.50"></text></g><g><title>dingo_test_runner::tester::tester::Tester::new (1 samples, 0.54%)</title><rect x="97.8378%" y="469" width="0.5405%" height="15" fill="rgb(207,11,44)" fg:x="181" fg:w="1"/><text x="98.0878%" y="479.50"></text></g><g><title>dingo_test_runner::tester::connection_manager::ConnectionManager::new (1 samples, 0.54%)</title><rect x="97.8378%" y="453" width="0.5405%" height="15" fill="rgb(228,190,49)" fg:x="181" fg:w="1"/><text x="98.0878%" y="463.50"></text></g><g><title>dingo_test_runner::tester::database::create_database_with_retry (1 samples, 0.54%)</title><rect x="97.8378%" y="437" width="0.5405%" height="15" fill="rgb(214,173,12)" fg:x="181" fg:w="1"/><text x="98.0878%" y="447.50"></text></g><g><title>mysql::conn::pool::Pool::new (1 samples, 0.54%)</title><rect x="97.8378%" y="421" width="0.5405%" height="15" fill="rgb(218,26,35)" fg:x="181" fg:w="1"/><text x="98.0878%" y="431.50"></text></g><g><title>mysql::conn::pool::inner::Inner::new (1 samples, 0.54%)</title><rect x="97.8378%" y="405" width="0.5405%" height="15" fill="rgb(220,200,19)" fg:x="181" fg:w="1"/><text x="98.0878%" y="415.50"></text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (1 samples, 0.54%)</title><rect x="97.8378%" y="389" width="0.5405%" height="15" fill="rgb(239,95,49)" fg:x="181" fg:w="1"/><text x="98.0878%" y="399.50"></text></g><g><title>mysql::conn::Conn::new (1 samples, 0.54%)</title><rect x="97.8378%" y="373" width="0.5405%" height="15" fill="rgb(235,85,53)" fg:x="181" fg:w="1"/><text x="98.0878%" y="383.50"></text></g><g><title>mysql::conn::Conn::can_improved (1 samples, 0.54%)</title><rect x="97.8378%" y="357" width="0.5405%" height="15" fill="rgb(233,133,31)" fg:x="181" fg:w="1"/><text x="98.0878%" y="367.50"></text></g><g><title>mysql::conn::Conn::get_system_var (1 samples, 0.54%)</title><rect x="97.8378%" y="341" width="0.5405%" height="15" fill="rgb(218,25,20)" fg:x="181" fg:w="1"/><text x="98.0878%" y="351.50"></text></g><g><title>&lt;mysql::conn::Conn as mysql::conn::queryable::Queryable&gt;::query_iter (1 samples, 0.54%)</title><rect x="97.8378%" y="325" width="0.5405%" height="15" fill="rgb(252,210,38)" fg:x="181" fg:w="1"/><text x="98.0878%" y="335.50"></text></g><g><title>mysql::conn::Conn::handle_result_set (1 samples, 0.54%)</title><rect x="97.8378%" y="309" width="0.5405%" height="15" fill="rgb(242,134,21)" fg:x="181" fg:w="1"/><text x="98.0878%" y="319.50"></text></g><g><title>mysql::conn::Conn::read_packet (1 samples, 0.54%)</title><rect x="97.8378%" y="293" width="0.5405%" height="15" fill="rgb(213,28,48)" fg:x="181" fg:w="1"/><text x="98.0878%" y="303.50"></text></g><g><title>mysql_common::proto::sync_framed::MySyncFramed&lt;T&gt;::next_packet (1 samples, 0.54%)</title><rect x="97.8378%" y="277" width="0.5405%" height="15" fill="rgb(250,196,2)" fg:x="181" fg:w="1"/><text x="98.0878%" y="287.50"></text></g><g><title>__recvfrom (1 samples, 0.54%)</title><rect x="97.8378%" y="261" width="0.5405%" height="15" fill="rgb(227,5,17)" fg:x="181" fg:w="1"/><text x="98.0878%" y="271.50"></text></g><g><title>dingo_test_runner::tester::database::Database::init_for_test (1 samples, 0.54%)</title><rect x="98.3784%" y="453" width="0.5405%" height="15" fill="rgb(221,226,24)" fg:x="182" fg:w="1"/><text x="98.6284%" y="463.50"></text></g><g><title>dingo_test_runner::tester::database::MySQLDatabase::switch_database (1 samples, 0.54%)</title><rect x="98.3784%" y="437" width="0.5405%" height="15" fill="rgb(211,5,48)" fg:x="182" fg:w="1"/><text x="98.6284%" y="447.50"></text></g><g><title>mysql::conn::pool::Pool::new (1 samples, 0.54%)</title><rect x="98.3784%" y="421" width="0.5405%" height="15" fill="rgb(219,150,6)" fg:x="182" fg:w="1"/><text x="98.6284%" y="431.50"></text></g><g><title>mysql::conn::pool::inner::Inner::new (1 samples, 0.54%)</title><rect x="98.3784%" y="405" width="0.5405%" height="15" fill="rgb(251,46,16)" fg:x="182" fg:w="1"/><text x="98.6284%" y="415.50"></text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (1 samples, 0.54%)</title><rect x="98.3784%" y="389" width="0.5405%" height="15" fill="rgb(220,204,40)" fg:x="182" fg:w="1"/><text x="98.6284%" y="399.50"></text></g><g><title>mysql::conn::Conn::new (1 samples, 0.54%)</title><rect x="98.3784%" y="373" width="0.5405%" height="15" fill="rgb(211,85,2)" fg:x="182" fg:w="1"/><text x="98.6284%" y="383.50"></text></g><g><title>mysql::conn::Conn::connect_stream (1 samples, 0.54%)</title><rect x="98.3784%" y="357" width="0.5405%" height="15" fill="rgb(229,17,7)" fg:x="182" fg:w="1"/><text x="98.6284%" y="367.50"></text></g><g><title>mysql::io::Stream::connect_tcp (1 samples, 0.54%)</title><rect x="98.3784%" y="341" width="0.5405%" height="15" fill="rgb(239,72,28)" fg:x="182" fg:w="1"/><text x="98.6284%" y="351.50"></text></g><g><title>mysql::io::tcp::MyTcpBuilder&lt;T&gt;::connect (1 samples, 0.54%)</title><rect x="98.3784%" y="325" width="0.5405%" height="15" fill="rgb(230,47,54)" fg:x="182" fg:w="1"/><text x="98.6284%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.54%)</title><rect x="98.3784%" y="309" width="0.5405%" height="15" fill="rgb(214,50,8)" fg:x="182" fg:w="1"/><text x="98.6284%" y="319.50"></text></g><g><title>socket (1 samples, 0.54%)</title><rect x="98.3784%" y="293" width="0.5405%" height="15" fill="rgb(216,198,43)" fg:x="182" fg:w="1"/><text x="98.6284%" y="303.50"></text></g><g><title>dingo_test_runner::tester::tester::Tester::execute_query (1 samples, 0.54%)</title><rect x="98.9189%" y="453" width="0.5405%" height="15" fill="rgb(234,20,35)" fg:x="183" fg:w="1"/><text x="99.1689%" y="463.50"></text></g><g><title>dingo_test_runner::tester::handlers::let_handler::execute (1 samples, 0.54%)</title><rect x="98.9189%" y="437" width="0.5405%" height="15" fill="rgb(254,45,19)" fg:x="183" fg:w="1"/><text x="99.1689%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::regex::string::Regex&gt; (1 samples, 0.54%)</title><rect x="98.9189%" y="421" width="0.5405%" height="15" fill="rgb(219,14,44)" fg:x="183" fg:w="1"/><text x="99.1689%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::pool::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::panic::unwind_safe::RefUnwindSafe+core::panic::unwind_safe::UnwindSafe+core::marker::Sync+core::marker::Send&gt;&gt;&gt; (1 samples, 0.54%)</title><rect x="98.9189%" y="405" width="0.5405%" height="15" fill="rgb(217,220,26)" fg:x="183" fg:w="1"/><text x="99.1689%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::regex::Cache&gt; (1 samples, 0.54%)</title><rect x="98.9189%" y="389" width="0.5405%" height="15" fill="rgb(213,158,28)" fg:x="183" fg:w="1"/><text x="99.1689%" y="399.50"></text></g><g><title>all (185 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(252,51,52)" fg:x="0" fg:w="185"/><text x="0.2500%" y="719.50"></text></g><g><title>thread_start (44 samples, 23.78%)</title><rect x="76.2162%" y="693" width="23.7838%" height="15" fill="rgb(246,89,16)" fg:x="141" fg:w="44"/><text x="76.4662%" y="703.50">thread_start</text></g><g><title>_pthread_start (44 samples, 23.78%)</title><rect x="76.2162%" y="677" width="23.7838%" height="15" fill="rgb(216,158,49)" fg:x="141" fg:w="44"/><text x="76.4662%" y="687.50">_pthread_start</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (43 samples, 23.24%)</title><rect x="76.7568%" y="661" width="23.2432%" height="15" fill="rgb(236,107,19)" fg:x="142" fg:w="43"/><text x="77.0068%" y="671.50">std::sys::pal::unix::thread::Thread::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (43 samples, 23.24%)</title><rect x="76.7568%" y="645" width="23.2432%" height="15" fill="rgb(228,185,30)" fg:x="142" fg:w="43"/><text x="77.0068%" y="655.50">core::ops::function::FnOnce::call_onc..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (43 samples, 23.24%)</title><rect x="76.7568%" y="629" width="23.2432%" height="15" fill="rgb(246,134,8)" fg:x="142" fg:w="43"/><text x="77.0068%" y="639.50">std::sys::backtrace::__rust_begin_sho..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (43 samples, 23.24%)</title><rect x="76.7568%" y="613" width="23.2432%" height="15" fill="rgb(214,143,50)" fg:x="142" fg:w="43"/><text x="77.0068%" y="623.50">rayon_core::registry::ThreadBuilder::..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (43 samples, 23.24%)</title><rect x="76.7568%" y="597" width="23.2432%" height="15" fill="rgb(228,75,8)" fg:x="142" fg:w="43"/><text x="77.0068%" y="607.50">rayon_core::registry::WorkerThread::w..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (43 samples, 23.24%)</title><rect x="76.7568%" y="581" width="23.2432%" height="15" fill="rgb(207,175,4)" fg:x="142" fg:w="43"/><text x="77.0068%" y="591.50">&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as ..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (31 samples, 16.76%)</title><rect x="83.2432%" y="565" width="16.7568%" height="15" fill="rgb(205,108,24)" fg:x="154" fg:w="31"/><text x="83.4932%" y="575.50">rayon::iter::plumbing::bri..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (31 samples, 16.76%)</title><rect x="83.2432%" y="549" width="16.7568%" height="15" fill="rgb(244,120,49)" fg:x="154" fg:w="31"/><text x="83.4932%" y="559.50">rayon_core::join::join_con..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 2.16%)</title><rect x="97.8378%" y="533" width="2.1622%" height="15" fill="rgb(223,47,38)" fg:x="181" fg:w="4"/><text x="98.0878%" y="543.50">r..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 2.16%)</title><rect x="97.8378%" y="517" width="2.1622%" height="15" fill="rgb(229,179,11)" fg:x="181" fg:w="4"/><text x="98.0878%" y="527.50">&lt;..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 2.16%)</title><rect x="97.8378%" y="501" width="2.1622%" height="15" fill="rgb(231,122,1)" fg:x="181" fg:w="4"/><text x="98.0878%" y="511.50">r..</text></g><g><title>core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 2.16%)</title><rect x="97.8378%" y="485" width="2.1622%" height="15" fill="rgb(245,119,9)" fg:x="181" fg:w="4"/><text x="98.0878%" y="495.50">c..</text></g><g><title>dingo_test_runner::tester::tester::Tester::run_test_file (3 samples, 1.62%)</title><rect x="98.3784%" y="469" width="1.6216%" height="15" fill="rgb(241,163,25)" fg:x="182" fg:w="3"/><text x="98.6284%" y="479.50"></text></g><g><title>dingo_test_runner::tester::tester::Tester::post_process (1 samples, 0.54%)</title><rect x="99.4595%" y="453" width="0.5405%" height="15" fill="rgb(217,214,3)" fg:x="184" fg:w="1"/><text x="99.7095%" y="463.50"></text></g><g><title>dingo_test_runner::tester::database::Database::cleanup_after_test (1 samples, 0.54%)</title><rect x="99.4595%" y="437" width="0.5405%" height="15" fill="rgb(240,86,28)" fg:x="184" fg:w="1"/><text x="99.7095%" y="447.50"></text></g><g><title>dingo_test_runner::tester::database::MySQLDatabase::switch_database (1 samples, 0.54%)</title><rect x="99.4595%" y="421" width="0.5405%" height="15" fill="rgb(215,47,9)" fg:x="184" fg:w="1"/><text x="99.7095%" y="431.50"></text></g><g><title>mysql::conn::pool::Pool::new (1 samples, 0.54%)</title><rect x="99.4595%" y="405" width="0.5405%" height="15" fill="rgb(252,25,45)" fg:x="184" fg:w="1"/><text x="99.7095%" y="415.50"></text></g><g><title>mysql::conn::pool::inner::Inner::new (1 samples, 0.54%)</title><rect x="99.4595%" y="389" width="0.5405%" height="15" fill="rgb(251,164,9)" fg:x="184" fg:w="1"/><text x="99.7095%" y="399.50"></text></g><g><title>mysql::conn::pool::inner::Protected::new_conn (1 samples, 0.54%)</title><rect x="99.4595%" y="373" width="0.5405%" height="15" fill="rgb(233,194,0)" fg:x="184" fg:w="1"/><text x="99.7095%" y="383.50"></text></g><g><title>mysql::conn::Conn::new (1 samples, 0.54%)</title><rect x="99.4595%" y="357" width="0.5405%" height="15" fill="rgb(249,111,24)" fg:x="184" fg:w="1"/><text x="99.7095%" y="367.50"></text></g><g><title>mysql::conn::Conn::connect_stream (1 samples, 0.54%)</title><rect x="99.4595%" y="341" width="0.5405%" height="15" fill="rgb(250,223,3)" fg:x="184" fg:w="1"/><text x="99.7095%" y="351.50"></text></g><g><title>mysql::io::Stream::connect_tcp (1 samples, 0.54%)</title><rect x="99.4595%" y="325" width="0.5405%" height="15" fill="rgb(236,178,37)" fg:x="184" fg:w="1"/><text x="99.7095%" y="335.50"></text></g><g><title>mysql::io::tcp::MyTcpBuilder&lt;T&gt;::connect (1 samples, 0.54%)</title><rect x="99.4595%" y="309" width="0.5405%" height="15" fill="rgb(241,158,50)" fg:x="184" fg:w="1"/><text x="99.7095%" y="319.50"></text></g><g><title>setsockopt (1 samples, 0.54%)</title><rect x="99.4595%" y="293" width="0.5405%" height="15" fill="rgb(213,121,41)" fg:x="184" fg:w="1"/><text x="99.7095%" y="303.50"></text></g></svg></svg>